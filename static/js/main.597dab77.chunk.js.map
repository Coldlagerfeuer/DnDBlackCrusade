{"version":3,"sources":["components/armoury/armourySlice.ts","general/hooks.ts","components/characteristics/characteristicsSlice.ts","components/characteristics/characteristicsCounter.tsx","components/inventory/inventorySlice.ts","components/character/resources.ts","components/skills/skillSlice.ts","components/skills/skillEntry.tsx","components/talents/talentEntry.tsx","components/talents/talentSlice.ts","components/armoury/weaponCard.tsx","components/armoury/armourCard.tsx","components/inventory/inventory.tsx","components/talents/talentView.tsx","components/armoury/armoury.tsx","components/character/fileUploadDrop.tsx","components/character/character.tsx","App.tsx","reportWebVitals.ts","components/character/characterSlice.ts","general/store.ts","index.tsx"],"names":["EWeaponCategory","EWeaponType","useAppDispatch","useDispatch","useAppSelector","useSelector","characteristicsInitialState","name","value","short","bonus","characteristicsSlice","createSlice","initialState","reducers","increment","state","action","payload","decrement","incrementBonus","console","log","decrementBonus","importCharacteristics","characteristics","stat","actions","CharacteristicsCounter","React","useState","hideBtns","toggleBtns","characteristic","dispatch","Container","id","style","backgroundColor","Row","onClick","Col","Badge","variant","pill","cursor","alignItems","EItemCategory","armourySlice","armour","head","body","armR","armL","legR","legL","gear","weapons","character","currentWounds","maxWounds","currentInfamy","setGear","removeGear","setWeapon","count","removeWeapon","setWounds","setMaxWounds","importArmoury","itemsInitialState","category","MISC","description","WEAPON","weaponCategory","PISTOL","damage","range","rof","clip","rld","type","IMPACT","pen","weight","CHAIN","RENDING","ARMOUR","inventorySlice","addItem","oldCount","addItemByName","itemname","allItems","item","NONE","changeWeaponName","oldName","editWeapon","editArmour","removeItem","editDescription","editCategory","importInventory","inventory","allSkills","level","allWeapons","allArmour","skillSlice","setLevel","importSkills","skills","SkillEntryFunction","showType","showSkilled","md","s","Math","floor","random","result","InputGroup","Checkbox","checked","onChange","TalentEntryFunction","talent","talents","OverlayTrigger","overlay","Tooltip","tier","talentSlice","addTalent","removeTalent","importTalents","WeaponCard","weapon","editMode","newName","setNewName","weaponEquipped","armoury","getJSXForWeaponCategory","cat","SWORD","getJSXForWeaponType","weaponType","SCHOCK","LASER","getWeaponTypeDropdown","Dropdown","Toggle","Menu","Object","values","map","index","e","Item","getWeightField","col","FormControl","size","placeholder","aria-label","event","parseInt","target","getDamageField","max","getRangeField","getMagazineField","getRemoveFromArmoury","getNameField","isRangeWeapon","Append","Button","color","_","Card","Header","Body","ArmourCard","InventoryFunction","readonly","toggleReadonly","newItem","setNewItem","activeFilter","setFilter","items","itemOptions","push","getJSXForItemCategory","Tab","defaultActiveKey","sm","ListGroup","ButtonToolbar","ButtonGroup","className","disabled","href","createListItems","Prepend","options","onInputChange","selection","toString","Content","getItemButton","getWeaponCard","getArmourCard","Pane","eventKey","as","readOnly","rows","createTabPanes","TalentView","newTalent","setNewTalent","fluid","createTalentObject","aria-describedby","padding","Armoury","infamyStat","armouryState","maxHealth","maxInfamy","infamy","setInfamy","health","setHealth","span","Img","src","ImgOverlay","offset","ProgressBar","animated","now","label","min","baseStyle","flex","display","borderWidth","borderRadius","borderColor","borderStyle","outline","transition","activeStyle","acceptStyle","rejectStyle","FileUploadDrop","importState","setImportState","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","onerror","onload","binaryStr","readAsText","useDropzone","accept","getRootProps","isDragActive","isDragAccept","isDragReject","useMemo","CharacterFunction","skillCols","setSkillCols","mainCols","setMainCols","toggleShowType","toggleShowSkilled","completeState","allPanes","Jumbotron","createCharacteristicsObjects","width","height","createSkillMatrix","paddingLeft","paddingRight","JSON","stringify","parse","importStateFromJson","encodeURIComponent","download","element","colCount","skillObjects","skillMatrix","j","part","length","Array","i","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","characterSlice","importCompleteState","store","configureStore","reducer","middleware","getDefaultMiddleware","ReactDOM","render","Fragment","rel","integrity","crossOrigin","document","getElementById"],"mappings":"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","file":"static/js/main.597dab77.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { IItem } from \"../inventory/inventorySlice\";\r\n\r\nexport enum EWeaponCategory {\r\n    PISTOL,\r\n    _,\r\n    SWORD,\r\n    CHAIN,\r\n}\r\n\r\n\r\nexport interface IWeapon extends IItem{\r\n    weaponCategory: EWeaponCategory,\r\n    damage: string,\r\n    range: number,\r\n    rof: string,\r\n    clip: number,\r\n    rld: string\r\n    type: EWeaponType,\r\n    pen: number,\r\n    weight: number,\r\n\r\n}\r\n\r\nexport interface IWeaponState {\r\n    [name: string]: IWeapon\r\n}\r\n\r\nexport enum EWeaponType {\r\n    IMPACT,\r\n    RENDING,\r\n    SCHOCK,\r\n    LASER,\r\n\r\n    MISC,\r\n}\r\n\r\n\r\nexport interface IArmour {\r\n    head?: number,\r\n    body?: number,\r\n    armR?: number,\r\n    armL?: number,\r\n    legR?: number,\r\n    legL?: number\r\n}\r\n\r\nexport interface IArmourItem extends IItem, IArmour {}\r\n\r\nexport interface IArmouryState {\r\n    armour: IArmour,\r\n    gear: {[name: string]: IArmourItem},\r\n    weapons: IWeaponState,\r\n    character: {\r\n        currentWounds: number,\r\n        maxWounds: number,\r\n        currentInfamy: number,\r\n    }\r\n}\r\n\r\nexport const armouryInitalState = {\r\n    armour: {\r\n        head: 0,\r\n        body: 0,\r\n        armR: 0,\r\n        armL: 0,\r\n        legR: 0,\r\n        legL: 0,\r\n    },\r\n    gear: { },\r\n    weapons: {},\r\n    character: {\r\n        currentWounds: 5,\r\n        maxWounds: 7,\r\n        currentInfamy: 2\r\n    }\r\n} as IArmouryState\r\n\r\nexport const armourySlice = createSlice({\r\n    name: 'armoury',\r\n    initialState: armouryInitalState,\r\n    reducers: {\r\n        setGear: (state, action: PayloadAction<IArmourItem>) =>  {\r\n            const { head, body, armL, armR, legL, legR, name } = action.payload;\r\n\r\n\r\n\r\n            state.armour.head = head ? head : state.armour.head\r\n            state.armour.body = body ? body : state.armour.body\r\n            state.armour.armL = armL ? armL : state.armour.armL\r\n            state.armour.armR = armR ? armR : state.armour.armR\r\n            state.armour.legL = legL ? legL : state.armour.legL\r\n            state.armour.legR = legR ? legR : state.armour.legR\r\n\r\n          state.gear[name] = action.payload;\r\n        },\r\n        removeGear: (state, action: PayloadAction<IArmourItem>) =>  {\r\n            const { head, body, armL, armR, legL, legR, name } = action.payload;\r\n\r\n            state.armour.head = head ? 0 : state.armour.head\r\n            state.armour.body = body ? 0 : state.armour.body\r\n            state.armour.armL = armL ? 0 : state.armour.armL\r\n            state.armour.armR = armR ? 0 : state.armour.armR\r\n            state.armour.legL = legL ? 0 : state.armour.legL\r\n            state.armour.legR = legR ? 0 : state.armour.legR\r\n\r\n            delete state.gear[name]\r\n        },\r\n        setWeapon: (state, action: PayloadAction<IWeapon>) => {\r\n            state.weapons[action.payload.name] = {...action.payload, count: 1};\r\n        },\r\n        removeWeapon: (state, action) => {\r\n            delete state.weapons[action.payload.name];\r\n        },\r\n        setWounds: (state, action) => {\r\n            state.character.currentWounds = action.payload\r\n        },\r\n        setMaxWounds: (state, action) => {\r\n            state.character.maxWounds = action.payload\r\n        },\r\n        importArmoury: (state, action: PayloadAction<IArmouryState>) => {\r\n            const { armour, gear, weapons, character  } = action.payload;\r\n            state.armour = armour;\r\n            state.gear = gear;\r\n            state.weapons = weapons;\r\n            state.character = character;\r\n        }\r\n    },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setGear, removeGear, setWeapon, removeWeapon, setWounds, setMaxWounds, importArmoury } = armourySlice.actions\r\nexport default armourySlice.reducer\r\n\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"./store\";\r\n\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport interface ICharacteristics {\r\n    name: string;\r\n    value: number;\r\n    short: string;\r\n    bonus: number;\r\n}\r\n\r\nexport interface ICharacteristicsState {\r\n    [short: string]: ICharacteristics\r\n}\r\n\r\nexport const characteristicsInitialState = {\r\n    'WS': { name: \"Weapon Skill\", value: 30, short: 'WS', bonus: 0  },\r\n    'BS': { name: \"Ballistic Skill\", value: 30, short: 'BS', bonus: 0 },\r\n    'S': { name: \"Strength\", value: 30, short: 'S', bonus: 0 },\r\n    'T': { name: \"Toughness\", value: 30, short: 'T', bonus: 1 },\r\n    'AG': { name: \"Agility\", value: 30, short: 'AG', bonus: 0 },\r\n    'I': { name: \"Intelligence\", value: 30, short: 'INT', bonus: 0 },\r\n    'PER': { name: \"Perception\", value: 30, short: 'PER', bonus: 0 },\r\n    'WP': { name: \"Willpower\", value: 30, short: 'WP', bonus: 0 },\r\n    'FEL': { name: \"Fellowship\", value: 30, short: 'FEL', bonus: 0 },\r\n    'INF': { name: \"Infamy\", value: 30, short: 'INF', bonus: 0 },\r\n} as ICharacteristicsState\r\n\r\n\r\nexport const characteristicsSlice = createSlice({\r\n    name: 'characteristics',\r\n    initialState: characteristicsInitialState,\r\n    reducers: {\r\n        increment: (state, action: PayloadAction<string>) => {\r\n            state[action.payload].value += 1\r\n        },\r\n        decrement: (state, action: PayloadAction<string>) => {\r\n            state[action.payload].value -= 1\r\n        },\r\n        incrementBonus: (state, action: PayloadAction<string>) => {\r\n            console.log(action.payload)\r\n            state[action.payload].bonus += 1\r\n        },\r\n        decrementBonus: (state, action: PayloadAction<string>) => {\r\n            state[action.payload].bonus > 0 ? state[action.payload].bonus -= 1 : state[action.payload].bonus = 0;\r\n        },\r\n        importCharacteristics: (state, action) => {\r\n            const characteristics = action.payload;\r\n            for (const stat in characteristics) {\r\n                state[stat] = characteristics[stat]\r\n            }\r\n        }\r\n    },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementBonus, decrementBonus, importCharacteristics } = characteristicsSlice.actions\r\nexport default characteristicsSlice.reducer\r\n","import { Badge, Col, Container, Row } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\nimport { decrement, decrementBonus, increment, incrementBonus } from './characteristicsSlice'\r\n\r\nexport const CharacteristicsCounter = ({ short = '' }) => {\r\n    const [hideBtns, toggleBtns] = React.useState(true);\r\n\r\n    const characteristic = useAppSelector(state => state.characteristics[short]);\r\n    const dispatch = useAppDispatch()\r\n\r\n\r\n    return <Container id={`stat-${characteristic.name}`} style={{ backgroundColor: \"lightgrey\" }}>\r\n        <Row onClick={() => toggleBtns(!hideBtns)}>\r\n            <Col>\r\n                <Badge variant=\"secondary\" pill style={{ cursor: 'pointer' }}>\r\n                    {characteristic.name}\r\n                </Badge>\r\n            </Col>\r\n        </Row>\r\n        <Row style={{ alignItems: 'stretch' }}>\r\n            <Col>\r\n                {!hideBtns\r\n                    ? <>\r\n                        <div>\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(incrementBonus(characteristic.short))}>+</Badge>\r\n                            <Badge variant={'secondary'}>\r\n                                {characteristic.bonus ? characteristic.bonus : 0}\r\n                            </Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(decrementBonus(characteristic.short))}>-</Badge>\r\n                        </div>\r\n                        <div>\r\n                            <Badge pill variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(increment(characteristic.short))}>+</Badge>\r\n                            <Badge\r\n                                variant={\"dark\"}\r\n                                pill\r\n                                onClick={() => toggleBtns(!hideBtns)}>\r\n                                {/*{object.value}*/}\r\n                                {characteristic.value}\r\n                            </Badge>\r\n                            <Badge pill variant={'danger'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(decrement(characteristic.short))}>-</Badge>\r\n\r\n                        </div>\r\n                    </>\r\n                    : <>{characteristic.bonus ?\r\n                        <Badge variant={'secondary'}>\r\n                            {characteristic.bonus}\r\n                        </Badge>\r\n                        : <></>}\r\n                        <Badge\r\n                            variant={\"dark\"}\r\n                            pill\r\n                            onClick={() => toggleBtns(!hideBtns)}>\r\n                            {/*{object.value}*/}\r\n                            {characteristic.value}\r\n                        </Badge>\r\n                    </>\r\n                }\r\n\r\n            </Col>\r\n        </Row>\r\n    </Container>;\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { allItems } from \"../character/resources\";\r\nimport { EWeaponCategory, EWeaponType, IArmourItem, IWeapon } from \"../armoury/armourySlice\";\r\n\r\nexport enum EItemCategory {\r\n    NONE = \"-\",\r\n    WEAPON = \"Weapon\",\r\n    ARMOUR = \"Armour\",\r\n    MISC = \"Misc\",\r\n\r\n}\r\n\r\nexport interface IItem {\r\n    name: string,\r\n    count: number,\r\n    category: EItemCategory\r\n    description?: string\r\n}\r\n\r\nexport type TItem = IItem | IWeapon | IArmourItem;\r\n\r\nexport interface IInventory {\r\n    [name: string]: TItem\r\n}\r\n\r\nexport const itemsInitialState = {\r\n    'Data Slate': {\r\n        name: 'Data Slate',\r\n        count: 1,\r\n        category: EItemCategory.MISC,\r\n        description: 'Data Slate which can contain various informations.'\r\n    },\r\n    'Autopistol': {\r\n        name: 'Autopistol',\r\n        category: EItemCategory.WEAPON,\r\n        count: 1,\r\n        weaponCategory: EWeaponCategory.PISTOL,\r\n        damage: '1d10+2',\r\n        range: 30,\r\n        rof: 's/-/6',\r\n        clip: 18,\r\n        rld: 'FULL',\r\n        type: EWeaponType.IMPACT,\r\n        pen: 0,\r\n        weight: 1.5\r\n    },\r\n    [`Chaindagger`]: {\r\n        name: 'Chaindagger',\r\n        category: EItemCategory.WEAPON,\r\n        count: 1,\r\n        weaponCategory: EWeaponCategory.CHAIN,\r\n        damage: '1d10+1',\r\n        range: 0,\r\n        rof: '',\r\n        clip: 0,\r\n        rld: '',\r\n        type: EWeaponType.RENDING,\r\n        pen: 0,\r\n        weight: 1.5\r\n    },\r\n    ['DummyArmour']: {\r\n        name: 'DummyArmour',\r\n        count: 1,\r\n        category: EItemCategory.ARMOUR,\r\n        body: 95\r\n\r\n    }\r\n} as IInventory\r\n\r\nexport const inventorySlice = createSlice({\r\n    name: 'items',\r\n    initialState: itemsInitialState,\r\n    reducers: {\r\n        addItem: (state, action: PayloadAction<IItem>) => {\r\n            const { name } = action.payload;\r\n            const oldCount = state[name]?.count\r\n            state[name] = { ...action.payload, count: oldCount ? oldCount + 1 : 1 };\r\n        },\r\n        addItemByName: (state, action: PayloadAction<string>) => {\r\n            const itemname = action.payload;\r\n            if (state[itemname]) {\r\n                state[itemname].count++;\r\n            } else {\r\n                console.log(itemname)\r\n                console.log(allItems[itemname])\r\n                console.log()\r\n                const item = allItems[itemname];\r\n\r\n                item ? state[itemname] = item\r\n                    : state[itemname] = { name: itemname, count: 1, category: EItemCategory.NONE };\r\n            }\r\n        },\r\n        changeWeaponName: (state, action: PayloadAction<IWeapon & { oldName: string }>) => {\r\n            state[action.payload.name] = action.payload;\r\n            delete state[action.payload.oldName]\r\n        },\r\n        editWeapon: (state, action: PayloadAction<IWeapon>) => {\r\n            state[action.payload.name] = action.payload;\r\n        },\r\n        editArmour: (state, action: PayloadAction<IArmourItem>) => {\r\n            state[action.payload.name] = action.payload;\r\n        },\r\n        removeItem: (state, action: PayloadAction<TItem>) => {\r\n            const item = action.payload;\r\n            if (item.count === 1) {\r\n                delete state[item.name];\r\n            } else {\r\n                state[item.name].count--;\r\n            }\r\n        },\r\n        editDescription: (state, action: PayloadAction<IItem>) => {\r\n            const item = action.payload;\r\n            state[item.name].description = item.description\r\n        },\r\n        editCategory: (state, action: PayloadAction<IItem>) => {\r\n            const item = action.payload;\r\n            state[item.name].category = item.category\r\n        },\r\n        importInventory: (state, action) => {\r\n            const inventory = action.payload;\r\n            for (const name in inventory) {\r\n                state[name] = inventory[name];\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {\r\n    addItem,\r\n    addItemByName,\r\n    changeWeaponName,\r\n    editWeapon,\r\n    editArmour,\r\n    removeItem,\r\n    editDescription,\r\n    editCategory,\r\n    importInventory\r\n} = inventorySlice.actions\r\nexport default inventorySlice.reducer\r\n\r\n","import { ISkillState } from \"../skills/skillSlice\";\r\nimport { EItemCategory, IInventory } from \"../inventory/inventorySlice\";\r\nimport { EWeaponCategory, EWeaponType, IArmourItem, IWeaponState } from \"../armoury/armourySlice\";\r\n\r\nexport const allSkills: ISkillState = {\r\n    'Acrobatics': { name: 'Acrobatics', level: 3, type: 'Ag' },\r\n    'Athletics': { name: 'Athletics', level: 0, type: 'S' },\r\n    'Awareness': { name: 'Awareness', level: 0, type: 'Per' },\r\n    'Charm': { name: 'Charm', level: 0, type: 'Fel' },\r\n    'Command': { name: 'Command', level: 0, type: 'Fel' },\r\n    'Commerce': { name: 'Commerce', level: 0, type: 'Int' },\r\n    'Common Lore': { name: 'Common Lore', level: 0, type: '' },\r\n    'Deceive': { name: 'Deceive', level: 0, type: 'Fel' },\r\n    'Dodge': { name: 'Dodge', level: 0, type: 'Ag' },\r\n    'Forbidden Lore': { name: 'Forbidden Lore', level: 0, type: '' },\r\n    'Interogate': { name: 'Interogate', level: 0, type: 'Fel' },\r\n    'Inquiry': { name: 'Inquiry', level: 0, type: 'Fel' },\r\n    'Intimidate': { name: 'Intimidate', level: 0, type: 'S' },\r\n    'Linguistics': { name: 'Linguistics', level: 0, type: 'Int' },\r\n    'Logic': { name: 'Logic', level: 0, type: 'Int' },\r\n    'Medicae': { name: 'Medicae', level: 0, type: 'Int' },\r\n    'Navigation (Surface)': { name: 'Navigation (Surface)', level: 0, type: 'Int' },\r\n    'Navigation (Stellar)': { name: 'Navigation (Stellar)', level: 0, type: 'Int' },\r\n    'Navigation (Warp)': { name: 'Navigation (Warp)', level: 0, type: 'Int' },\r\n    'Operate (Aeronaut)': { name: 'Operate (Aeronaut)', level: 0, type: 'Ag' },\r\n    'Operate (Surface)': { name: 'Operate (Surface)', level: 0, type: 'Ag' },\r\n    'Operate (Voidship)': { name: 'Operate (Voidship)', level: 0, type: 'Ag' },\r\n    'Parry': { name: 'Parry', level: 0, type: 'Ws' },\r\n    'Psyniscience': { name: 'Psyniscience', level: 0, type: 'Per' },\r\n    'Scholastic Lore': { name: 'Scholastic Lore', level: 0, type: 'Int' },\r\n    'Scrutiny': { name: 'Scrutiny', level: 0, type: 'Per' },\r\n    'Security': { name: 'Security', level: 0, type: 'Int' },\r\n    'Sleight of Hand': { name: 'Sleight of Hand', level: 0, type: 'Ag' },\r\n    'Stealth': { name: 'Stealth', level: 0, type: 'Ag' },\r\n    'Tech-Use': { name: 'Tech-Use', level: 0, type: 'Int' },\r\n    'Tracking': { name: 'Tracking', level: 0, type: 'Int' },\r\n    'Trade': { name: 'Trade', level: 0, type: 'Ag' },\r\n}\r\n\r\nexport const talents = [\r\n    { name: \"Total Recall1\", tier: \"1\", description: \"TODO\" },\r\n    { name: \"Total Recall2\", tier: \"1\", description: \"TODO\" },\r\n    { name: \"Total Recall3\", tier: \"1\", description: \"TODO\" },\r\n    { name: \"Total Recall4\", tier: \"1\", description: \"TODO\" },\r\n    { name: \"Total Recall5\", tier: \"1\", description: \"TODO\" },\r\n]\r\n\r\n\r\nexport const allWeapons: IWeaponState = {\r\n    [`Autopistol`]: { name: 'Autopistol', category: EItemCategory.WEAPON, count: 1, weaponCategory: EWeaponCategory.PISTOL, damage: '1d10+2', range: 30, rof: 's/-/6', clip: 18, rld: 'FULL', type: EWeaponType.IMPACT, pen: 0, weight: 1.5 },\r\n    [`Chaindagger`]: { name: 'Chaindagger', category: EItemCategory.WEAPON, count: 1, weaponCategory: EWeaponCategory.CHAIN, damage: '1d10+1', range: 0, rof: '', clip: 0, rld: '', type: EWeaponType.RENDING, pen: 0, weight: 1.5 },\r\n}\r\n\r\nexport const allArmour: {[name: string]: IArmourItem} = {\r\n    ['DummyArmour']: {\r\n        name: 'DummyArmour',\r\n            count: 1,\r\n            category: EItemCategory.ARMOUR,\r\n            body: 95\r\n\r\n    }\r\n}\r\n\r\nexport const allItems: IInventory = {\r\n    'Medipack': {\r\n        name: \"Medipack\",\r\n        count: 3,\r\n        category: EItemCategory.MISC,\r\n        description: \"Basic Medi-Pack kits will usually contain drugs and bandages to treat a variety of injuries and illnesses, such as cataplasm patches and contraseptics. More advanced models might include a diagnostic Cogitator with bio-scanner and probes to determine the patient's ailments. The most advanced types, available to the elite of the Imperium, can include cast sprays, tox wands, synthskin applicators and more.\"\r\n    },\r\n    'Data Slate': {\r\n        name: 'Data Slate',\r\n        count: 1,\r\n        category: EItemCategory.MISC,\r\n        description: 'Data Slate which can contain various informations.'\r\n    },\r\n    ...allWeapons,\r\n    ...allArmour,\r\n}\r\n\r\n\r\n\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { allSkills } from \"../character/resources\";\r\n\r\nexport interface ISkill {\r\n    name: string,\r\n    level: number,\r\n    type?: string\r\n}\r\n\r\nexport interface ISkillState {\r\n    [name: string]: ISkill\r\n}\r\n\r\nexport const skillSlice = createSlice({\r\n    name: 'skills',\r\n    initialState: allSkills,\r\n    reducers: {\r\n        setLevel: (state, action: PayloadAction<ISkill>) => {\r\n            const name: string = action.payload.name;\r\n            if (state[name].level === action.payload.level) {\r\n                state[name].level = 0;\r\n            } else {\r\n                state[name].level = action.payload.level;\r\n            }\r\n        },\r\n        importSkills: (state, action) => {\r\n            const skills = action.payload;\r\n            for (const name in skills) {\r\n                state[name] = skills[name];\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setLevel, importSkills } = skillSlice.actions\r\nexport default skillSlice.reducer\r\n\r\n","import { Col, Container, InputGroup, Row } from \"react-bootstrap\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\nimport { setLevel } from \"./skillSlice\";\r\n\r\n\r\nexport const SkillEntryFunction = ({ name = 'SKILLNAME', showType = true, showSkilled = true }) => {\r\n    const skills = useAppSelector(state => state.skills);\r\n    const dispatch = useAppDispatch()\r\n\r\n    const level = skills[name]?.level;\r\n    const description = showType && skills[name].type ? `${name} (${skills[name].type})` : `${name}`\r\n\r\n    if (showSkilled && level === 0) {\r\n        return <></>\r\n    }\r\n\r\n    return <Container>\r\n        <Row>\r\n            <Col md={5} onClick={() => {\r\n                const s = Math.floor(Math.random() * 100);\r\n                const result = s - level < 0 ? 'success' : 'failed';\r\n                console.log(`${name} Test: rolled ${s} your level: ${level} = Test ${result}`)\r\n            }}>\r\n                {description}\r\n            </Col>\r\n            <Col md={7}>\r\n                <InputGroup>\r\n                    <InputGroup.Checkbox checked={level > 0} onChange={() => dispatch(setLevel({ name, level: 1 }))}/>\r\n                    <InputGroup.Checkbox checked={level > 1} onChange={() => dispatch(setLevel({ name, level: 2 }))}/>\r\n                    <InputGroup.Checkbox checked={level > 2} onChange={() => dispatch(setLevel({ name, level: 3 }))}/>\r\n                    <InputGroup.Checkbox checked={level > 3} onChange={() => dispatch(setLevel({ name, level: 4 }))}/>\r\n                </InputGroup>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n\r\n}\r\n","import { Badge, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { useAppSelector } from \"../../general/hooks\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const TalentEntryFunction = ({ name = 'TALENTNAME' }) => {\r\n    const talents = useAppSelector(state => state.talents);\r\n    // const dispatch = useAppDispatch()\r\n\r\n    const talent = talents[name];\r\n\r\n    return  <OverlayTrigger\r\n        key={`talent-${talent.name}`}\r\n        overlay={\r\n            <Tooltip id={`tooltip-${talent.name}`}>\r\n                {talent.description}\r\n            </Tooltip>\r\n        }\r\n    >\r\n        <Badge>{`T${talent.tier} ${talent.name}`}</Badge>\r\n    </OverlayTrigger>\r\n\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface ITalent {\r\n    name: string,\r\n    tier: number,\r\n    description?: string\r\n}\r\n\r\nexport interface ITalentState {\r\n    [name: string]: ITalent\r\n}\r\n\r\nexport const talentsInitialState = {\r\n    'Total Recall': { name: \"Total Recall\", tier: 1, description: \"The character can automatically remember trivial facts or pieces of information the character might feasibly have picked up in the past. When dealing with more detailed, complex or obscure facts, such as the exact layout of a defence network, the GM may require a successful Intelligence Test to recall the information.\" },\r\n} as ITalentState\r\n\r\nexport const talentSlice = createSlice({\r\n    name: 'skills',\r\n    initialState: talentsInitialState,\r\n    reducers: {\r\n        addTalent: (state, action: PayloadAction<ITalent>) => {\r\n            const talent = action.payload;\r\n            if (talent.name !== '') {\r\n                state[talent.name] = talent\r\n            }\r\n        },\r\n        removeTalent: (state, action) => {\r\n            delete state[action.payload.name];\r\n        },\r\n        importTalents: (state, action) => {\r\n            const talents = action.payload;\r\n            for (const name in talents) {\r\n                state[name] = talents[name];\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { addTalent, removeTalent, importTalents } = talentSlice.actions\r\nexport default talentSlice.reducer\r\n\r\n","import {\r\n    Badge,\r\n    Button,\r\n    Card,\r\n    Col,\r\n    Dropdown,\r\n    FormControl,\r\n    InputGroup,\r\n    OverlayTrigger,\r\n    Row,\r\n    Tooltip\r\n} from \"react-bootstrap\";\r\nimport {\r\n    BiQuestionMark,\r\n    GiAncientSword,\r\n    GiArrowScope, GiBulletImpacts,\r\n    GiChainsaw, GiElectric,\r\n    GiLaserPrecision,\r\n    GiMachineGunMagazine,\r\n    GiPistolGun,\r\n    GiReloadGunBarrel,\r\n    GiShieldImpact,\r\n    GiWeight,\r\n    IoMdCheckmarkCircle\r\n} from \"react-icons/all\";\r\nimport React, { useState } from \"react\";\r\nimport './weaponCard.scss';\r\nimport { EWeaponCategory, EWeaponType, IWeapon, removeWeapon } from \"./armourySlice\";\r\nimport { addItem, editWeapon, changeWeaponName } from \"../inventory/inventorySlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\n\r\n\r\nexport const WeaponCard = ({ weapon, editMode = false }: { weapon: IWeapon, editMode?: boolean }) => {\r\n    const [newName, setNewName] = useState(weapon.name);\r\n\r\n    const weaponEquipped = useAppSelector(state => state.armoury.weapons[weapon.name]);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n\r\n    function getJSXForWeaponCategory(cat: EWeaponCategory) {\r\n        switch (cat) {\r\n            case EWeaponCategory.SWORD:\r\n                return <GiAncientSword/>;\r\n            case EWeaponCategory.PISTOL:\r\n                return <GiPistolGun/>\r\n            case EWeaponCategory.CHAIN:\r\n                return <GiChainsaw/>\r\n        }\r\n        return <BiQuestionMark/>\r\n    }\r\n\r\n\r\n    function getJSXForWeaponType(weaponType: EWeaponType) {\r\n        switch (weaponType) {\r\n            case EWeaponType.IMPACT: return <GiBulletImpacts />\r\n            case EWeaponType.RENDING: return <GiChainsaw />\r\n            case EWeaponType.SCHOCK: return <GiElectric />\r\n            case EWeaponType.LASER: return <GiLaserPrecision />\r\n\r\n        }\r\n\r\n        return <BiQuestionMark/>;\r\n    }\r\n\r\n    function getWeaponTypeDropdown() {\r\n        return <Dropdown>\r\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                {getJSXForWeaponCategory(weapon.weaponCategory)}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n                {Object.values(EWeaponCategory).map((value, index) => {\r\n                        // @ts-ignore\r\n                        const e = EWeaponCategory[index]\r\n                        return e ? <Dropdown.Item\r\n                            key={`category-dropdown-${e}`}\r\n                            onClick={() => {\r\n                                dispatch(editWeapon({ ...weapon, weaponCategory: index }))\r\n                            }}>{e}</Dropdown.Item> : <></>\r\n                    }\r\n                )}\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    }\r\n\r\n    function getWeightField(col = 2) {\r\n        return editMode ?\r\n            <Col md={col}> <GiWeight/> <FormControl size={\"sm\"}\r\n                                                    value={weapon.weight}\r\n                                                    placeholder={\"1\"}\r\n                                                    aria-label=\"Weight\"\r\n                                                    onChange={(event) => dispatch(editWeapon({ ...weapon, weight: parseInt(event.target.value) }))}/> </Col>\r\n            :<Col md={col}> <GiWeight/> {weapon.weight} </Col>\r\n    }\r\n\r\n\r\n    function getDamageField() {\r\n        return editMode ?\r\n            <Col md={4}>\r\n                Damage\r\n                <FormControl size={\"sm\"}\r\n                             value={weapon.damage}\r\n                             placeholder={\"xd10+y\"}\r\n                             aria-label=\"Damage in Form xd10 + y\"\r\n                             onChange={(event) => dispatch(editWeapon({ ...weapon, damage: event.target.value }))}/>\r\n                <div>\r\n                    <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                           onClick={() => dispatch(editWeapon({ ...weapon, pen: weapon.pen? weapon.pen + 1 : 1}))}>+</Badge>\r\n                    <Badge pill={true} variant={\"secondary\"}> <GiShieldImpact/> {weapon.pen ? weapon.pen : 0} </Badge>\r\n                    <Badge variant={'danger'} style={{ cursor: 'pointer' }}\r\n                           onClick={() => dispatch(editWeapon({\r\n                               ...weapon,\r\n                               pen: weapon.pen ? Math.max(weapon.pen - 1, 0) : 0\r\n                           }))}>-</Badge>\r\n                </div>\r\n\r\n                <Dropdown>\r\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                        {getJSXForWeaponType(weapon.type)}\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                        {Object.values(EWeaponType).map((value, index) => {\r\n                                // @ts-ignore\r\n                                const e = EWeaponType[index]\r\n                                return e ? <Dropdown.Item\r\n                                    key={`category-dropdown-${e}`}\r\n                                    onClick={() => {\r\n                                        dispatch(editWeapon({ ...weapon, type: index }))\r\n                                    }}\r\n                                >{e}</Dropdown.Item> : <></>\r\n                            }\r\n                        )}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n            </Col>\r\n            : <Col md={4}>{weapon.damage} <Badge pill={true} variant={\"secondary\"}> <GiShieldImpact/> {weapon.pen}\r\n            </Badge> </Col>\r\n    }\r\n\r\n    function getRangeField() {\r\n        return editMode ?\r\n            <Col> <GiArrowScope/> Range<FormControl size={\"sm\"}\r\n                                                    placeholder={\"30\"}\r\n                                                    value={weapon.range}\r\n                                                    aria-label=\"Range in m\"\r\n                                                    onChange={(event) => dispatch(editWeapon({\r\n                                                        ...weapon,\r\n                                                        range: parseInt(event.target.value)\r\n                                                    }))}/>\r\n                Rate of Fire\r\n                <FormControl size={\"sm\"}\r\n                             value={weapon.rof}\r\n                             placeholder={\"s/-/6\"}\r\n                             aria-label=\"Rate of Fire\"\r\n                             onChange={(event) => dispatch(editWeapon({ ...weapon, rof: event.target.value }))}/>\r\n            </Col>\r\n            : <Col> <GiArrowScope/> {weapon.range}m - {weapon.rof} </Col>\r\n    }\r\n\r\n    function getMagazineField() {\r\n        return editMode ?\r\n            <Col> <GiMachineGunMagazine/> Magazine <FormControl size={\"sm\"}\r\n                                                                value={weapon.clip}\r\n                                                                placeholder={\"8\"}\r\n                                                                aria-label=\"Magazine\"\r\n                                                                onChange={(event) => dispatch(editWeapon({\r\n                                                                    ...weapon,\r\n                                                                    clip: parseInt(event.target.value)\r\n                                                                }))}/>\r\n                <GiReloadGunBarrel/> Reload <FormControl size={\"sm\"}\r\n                                                         value={weapon.rld}\r\n                                                         placeholder={\"FULL | HALF\"}\r\n                                                         aria-label=\"Magazine\"\r\n                                                         onChange={(event) => dispatch(editWeapon({\r\n                                                             ...weapon,\r\n                                                             rld: event.target.value\r\n                                                         }))}/>\r\n\r\n            </Col>\r\n            : <Col> <GiMachineGunMagazine/>{weapon.clip} <GiReloadGunBarrel/> {weapon.rld} </Col>\r\n    }\r\n\r\n    function getRemoveFromArmoury() {\r\n        return weaponEquipped ?\r\n            <Col md={1}>\r\n                <Badge variant={'danger'} style={{ cursor: 'pointer' }}\r\n                       onClick={() => {\r\n                           dispatch(removeWeapon(weapon));\r\n                           dispatch(addItem(weapon))\r\n                       }}>-\r\n                </Badge>\r\n            </Col> : <></>\r\n    }\r\n\r\n    function getNameField() {\r\n        return <Col>\r\n            <OverlayTrigger\r\n                key={`weaponCardTooltip-${weapon.name}`}\r\n                overlay={\r\n                    <Tooltip\r\n                        id={`tooltip-${weapon.name}`}>{weapon.description ? weapon.description : \"Add description\"}</Tooltip>\r\n                }>\r\n                {editMode ? <Row>\r\n                        {!isRangeWeapon() ?\r\n                            <Col md={4}>\r\n                                {getWeaponTypeDropdown()}\r\n                            </Col>\r\n                            : <></>\r\n                        }\r\n                        <Col>\r\n                            {isRangeWeapon() ?  getWeaponTypeDropdown() : <></>}\r\n                            <InputGroup>\r\n                                <FormControl size={\"sm\"}\r\n                                             value={newName}\r\n                                             placeholder={\"Description\"}\r\n                                             aria-label=\"Description\"\r\n                                             onChange={(event) => setNewName(event.target.value)}/>\r\n                                <InputGroup.Append>\r\n                                    <Button size={\"sm\"}\r\n                                            placeholder={\"Name\"}\r\n                                            onClick={(event) => {\r\n                                        dispatch(changeWeaponName({\r\n                                            ...weapon,\r\n                                            name: newName,\r\n                                            oldName: weapon.name\r\n                                        }))\r\n                                    }}>\r\n                                        <IoMdCheckmarkCircle cursor={\"pointer\"} color={\"white\"}/>\r\n                                    </Button>\r\n                                </InputGroup.Append>\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    : <div>{getJSXForWeaponCategory(weapon.weaponCategory)} {getJSXForWeaponType(weapon.type)} {weapon.name}</div>\r\n                }\r\n\r\n            </OverlayTrigger>\r\n        </Col>\r\n    }\r\n\r\n    function isRangeWeapon() {\r\n        return weapon.weaponCategory > EWeaponCategory._\r\n    }\r\n\r\n    function getWeaponCard() {\r\n        if (isRangeWeapon()) {\r\n            return getWeaponCardMeele()\r\n        } else {\r\n            return getWeaponCardRange()\r\n        }\r\n    }\r\n\r\n    function getWeaponCardMeele() {\r\n        return <Card key={`weaponCard${weapon.name}`}>\r\n            <Card.Header>\r\n                <Row>\r\n                    {getNameField()}\r\n                    {getDamageField()}\r\n                    {getWeightField()}\r\n                    {getRemoveFromArmoury()}\r\n                </Row>\r\n            </Card.Header>\r\n        </Card>;\r\n    }\r\n\r\n\r\n    function getWeaponCardRange() {\r\n        return <Card key={`weaponCard${weapon.name}`}>\r\n            <Card.Header>\r\n                <Row>\r\n                    {getNameField()}\r\n                    {getWeightField()}\r\n                    {getRemoveFromArmoury()}\r\n                </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <Row>\r\n                    {getDamageField()}\r\n                    {getRangeField()}\r\n                    {getMagazineField()}\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>;\r\n    }\r\n\r\n    return getWeaponCard()\r\n\r\n}\r\n","import { Badge, Card, Col, Row } from \"react-bootstrap\";\r\nimport { editArmour } from \"../inventory/inventorySlice\";\r\nimport React from \"react\";\r\nimport { IArmourItem } from \"./armourySlice\";\r\nimport { useAppDispatch } from \"../../general/hooks\";\r\n\r\n\r\nexport const ArmourCard = ({ armour }: { armour: IArmourItem }) => {\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    return <Card>\r\n        <Card.Header>\r\n            {armour.name}\r\n        </Card.Header>\r\n        <Card.Body>\r\n\r\n\r\n            <Row>\r\n                <Col>\r\n                    <Row>\r\n                        <Col>\r\n                            Head:\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(editArmour({\r\n                                       ...armour,\r\n                                       head: armour.head ? armour.head + 1 : 1\r\n                                   }))}>+</Badge>\r\n                            <Badge pill={true} variant={\"secondary\"}>  {armour.head ? armour.head : 0} </Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }} onClick={() => dispatch(editArmour({\r\n                                ...armour, head: armour.head ? Math.max(armour.head - 1, 0) : 0\r\n                            }))}>-</Badge>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Col>\r\n                <Col md={2}></Col>\r\n                <Col>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            Body:\r\n\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(editArmour({\r\n                                       ...armour,\r\n                                       body: armour.body ? armour.body + 1 : 1\r\n                                   }))}>+</Badge>\r\n                            <Badge pill={true} variant={\"secondary\"}>  {armour.body ? armour.body : 0} </Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }} onClick={() => dispatch(editArmour({\r\n                                ...armour, body: armour.body ? Math.max(armour.body - 1, 0) : 0\r\n                            }))}>-</Badge>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <Row>\r\n                        <Col>\r\n                            Left:\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(editArmour({\r\n                                       ...armour,\r\n                                       armL: armour.armL ? armour.armL + 1 : 1\r\n                                   }))}>+</Badge>\r\n                            <Badge pill={true} variant={\"secondary\"}>  {armour.armL ? armour.armL : 0} </Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }} onClick={() => dispatch(editArmour({\r\n                                ...armour, armL: armour.armL ? Math.max(armour.armL - 1, 0) : 0\r\n                            }))}>-</Badge>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Col>\r\n                <Col md={2}>Arm</Col>\r\n                <Col>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            Right:\r\n\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(editArmour({\r\n                                       ...armour,\r\n                                       armR: armour.armR ? armour.armR + 1 : 1\r\n                                   }))}>+</Badge>\r\n                            <Badge pill={true} variant={\"secondary\"}>  {armour.armR ? armour.armR : 0} </Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }} onClick={() => dispatch(editArmour({\r\n                                ...armour, armR: armour.armR ? Math.max(armour.armR - 1, 0) : 0\r\n                            }))}>-</Badge>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <Row>\r\n                        <Col>\r\n                            Left:\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(editArmour({\r\n                                       ...armour,\r\n                                       legL: armour.legL ? armour.legL + 1 : 1\r\n                                   }))}>+</Badge>\r\n                            <Badge pill={true} variant={\"secondary\"}>  {armour.legL ? armour.legL : 0} </Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }} onClick={() => dispatch(editArmour({\r\n                                ...armour, legL: armour.legL ? Math.max(armour.legL - 1, 0) : 0\r\n                            }))}>-</Badge>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Col>\r\n                <Col md={2}>Leg</Col>\r\n                <Col>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            Right:\r\n\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(editArmour({\r\n                                       ...armour,\r\n                                       legR: armour.legR ? armour.legR + 1 : 1\r\n                                   }))}>+</Badge>\r\n                            <Badge pill={true} variant={\"secondary\"}>  {armour.legR ? armour.legR : 0} </Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }} onClick={() => dispatch(editArmour({\r\n                                ...armour, legR: armour.legR ? Math.max(armour.legR - 1, 0) : 0\r\n                            }))}>-</Badge>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Card.Body>\r\n    </Card>;\r\n}\r\n","import {\r\n    Button,\r\n    ButtonGroup,\r\n    ButtonToolbar,\r\n    Col,\r\n    Dropdown,\r\n    FormControl,\r\n    InputGroup,\r\n    ListGroup,\r\n    Row,\r\n    Tab\r\n} from \"react-bootstrap\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\nimport React, { useState } from \"react\";\r\nimport { GearFill, Pencil, PlusCircle, ShieldFill } from \"react-bootstrap-icons\";\r\nimport {\r\n    addItemByName,\r\n    editCategory,\r\n    editDescription,\r\n    EItemCategory,\r\n    IItem,\r\n    removeItem,\r\n    TItem\r\n} from \"./inventorySlice\";\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport { allItems } from \"../character/resources\";\r\nimport { IArmourItem, IWeapon, setGear, setWeapon } from \"../armoury/armourySlice\";\r\nimport { AiOutlineSortAscending, GiCrossedSwords } from \"react-icons/all\";\r\nimport { WeaponCard } from \"../armoury/weaponCard\";\r\nimport { ArmourCard } from \"../armoury/armourCard\";\r\n\r\nexport const InventoryFunction = () => {\r\n    const [readonly, toggleReadonly] = useState(true)\r\n    const [newItem, setNewItem] = useState('')\r\n    const [activeFilter, setFilter] = useState('-')\r\n\r\n\r\n    const items = useAppSelector(state => state.inventory);\r\n    const armoury = useAppSelector(state => state.armoury)\r\n    const dispatch = useAppDispatch()\r\n\r\n\r\n    const itemOptions = [];\r\n    for (const item in allItems) {\r\n        itemOptions.push(item);\r\n    }\r\n\r\n\r\n    function createListItems() {\r\n        const result: JSX.Element[] = [];\r\n        for (const name in items) {\r\n            if (EItemCategory.NONE === activeFilter || items[name].category === activeFilter)\r\n                result.push(<ListGroup.Item action href={`#link${name}`} key={`listitem-${name}`}>\r\n                    {name}\r\n                </ListGroup.Item>)\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function createTabPanes() {\r\n        const result: JSX.Element[] = [];\r\n\r\n        function getItemButton(item: TItem) {\r\n            switch (item.category) {\r\n                case EItemCategory.WEAPON:\r\n                    const weapon = item as IWeapon;\r\n                    return <Button\r\n                        disabled={!!armoury.weapons[weapon.name]}\r\n                        onClick={() => {\r\n                            dispatch(setWeapon(weapon))\r\n                            dispatch(removeItem(item))\r\n                        }}>Equip</Button>\r\n\r\n                case EItemCategory.ARMOUR:\r\n                    const armour = item as IArmourItem;\r\n                    return <Button\r\n                        disabled={!!armoury.gear[armour.name]}\r\n                        onClick={() => {\r\n                            dispatch(setGear(armour))\r\n                            dispatch(removeItem(item))\r\n                        }}>Equip</Button>\r\n\r\n                case EItemCategory.MISC:\r\n                case EItemCategory.NONE:\r\n                    return <Button onClick={() => dispatch(removeItem(item))}>USE</Button>\r\n            }\r\n\r\n\r\n            return undefined;\r\n        }\r\n\r\n        function getWeaponCard(item: TItem) {\r\n            const weapon = item as IWeapon;\r\n\r\n            return <WeaponCard weapon={weapon} editMode={!readonly}/>;\r\n        }\r\n\r\n        function getArmourCard(item: IItem) {\r\n            const armour: IArmourItem = item as IArmourItem;\r\n\r\n            return<ArmourCard armour={armour} />\r\n        }\r\n\r\n        for (const name in items) {\r\n            const item: IItem = items[name];\r\n            result.push(<Tab.Pane eventKey={`#link${name}`} key={`tabpane-${name}`}>\r\n                <Row>\r\n                    <Col>\r\n                        {item.name} - Count: {item.count}\r\n                    </Col>\r\n                    <Col>\r\n                        <ButtonGroup>\r\n                            {readonly ? <Button disabled>{item.category}</Button>\r\n                                : <Dropdown>\r\n                                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                                        {item.category}\r\n                                    </Dropdown.Toggle>\r\n\r\n                                    <Dropdown.Menu>\r\n                                        {Object.values(EItemCategory).map((value, index) =>\r\n                                            // <Dropdown.Item href={`#/action-${index}`}>{value}</Dropdown.Item>)}\r\n                                            <Dropdown.Item\r\n                                                key={`category-dropdown-${value}`}\r\n                                                onClick={() => {\r\n                                                    dispatch(editCategory({ ...item, category: value }))\r\n                                                }}>{value}</Dropdown.Item>)}\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                            }\r\n                            <Button variant={\"outline-secondary\"}\r\n                                    onClick={() => toggleReadonly(!readonly)}><Pencil/></Button>\r\n                        </ButtonGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n\r\n\r\n                    <Col md={item.category === EItemCategory.WEAPON || item.category === EItemCategory.ARMOUR ? 5 : 12}>\r\n\r\n                        <InputGroup>\r\n                            <FormControl as=\"textarea\" readOnly={readonly} size={\"sm\"} rows={10}\r\n                                         value={item.description}\r\n                                         aria-label=\"Description\"\r\n                                         onChange={(event) => {\r\n                                             dispatch(editDescription({ ...item, description: event.target.value }))\r\n                                         }}/>\r\n                        </InputGroup>\r\n                    </Col>\r\n                    {item.category === EItemCategory.WEAPON ? <Col>{getWeaponCard(item)}</Col> : <></>}\r\n                    {item.category === EItemCategory.ARMOUR ? <Col>{getArmourCard(item)}</Col> : <></>}\r\n                </Row>\r\n                {getItemButton(item)}\r\n            </Tab.Pane>)\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function getJSXForItemCategory(value: string) {\r\n        switch (value) {\r\n            case EItemCategory.NONE:\r\n                return 'ALL';\r\n            case EItemCategory.MISC:\r\n                return <GearFill/>\r\n            case EItemCategory.ARMOUR:\r\n                return <ShieldFill/>\r\n            case EItemCategory.WEAPON:\r\n                return <GiCrossedSwords/>\r\n        }\r\n        return <Pencil/>;\r\n    }\r\n\r\n    return <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"#link1\">\r\n        <Row>\r\n            <Col sm={3}>\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item>\r\n                        <ButtonToolbar>\r\n\r\n                            <ButtonGroup size={\"sm\"}\r\n                                         className={\"mr-2\"}\r\n                            >\r\n\r\n                                <Button disabled><AiOutlineSortAscending/></Button>\r\n                            </ButtonGroup>\r\n                            <ButtonGroup size=\"sm\">\r\n                                {Object.values(EItemCategory).map((value: string) =>\r\n                                    <Button key={`filter-btn-${value}`}\r\n                                            variant={activeFilter === value ? \"primary\" : \"secondary\"}\r\n                                            onClick={() => {\r\n                                                setFilter(value);\r\n                                            }}>{getJSXForItemCategory(value)}</Button>)}\r\n                            </ButtonGroup>\r\n                        </ButtonToolbar>\r\n                    </ListGroup.Item>\r\n\r\n                    {createListItems()}\r\n                    {/* Add Button */}\r\n                    <ListGroup.Item>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Prepend>\r\n                                <Button onClick={() => dispatch(addItemByName(newItem))}\r\n                                        variant=\"outline-primary\">\r\n                                    {items[newItem] ? <Pencil/> : <PlusCircle/>}\r\n                                </Button>\r\n                            </InputGroup.Prepend>\r\n\r\n                            {/*<FormControl aria-describedby=\"basic-addon1\"*/}\r\n                            {/*             onChange={(event => setNewItem(event.target.value))}/>*/}\r\n\r\n\r\n                            <Typeahead\r\n                                className={'form-control'}\r\n                                id=\"basic-typeahead-single\"\r\n                                // options={['John', 'Paul', 'George', 'Ringo']}\r\n                                options={itemOptions}\r\n                                onInputChange={(name) => setNewItem(name)}\r\n                                // onChange={(value: string) => console.log(value, 'Simple typeahead')}\r\n                                onChange={(selection) => setNewItem(selection[0]?.toString())}\r\n                            />\r\n                        </InputGroup>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n            <Col sm={9}>\r\n                <Tab.Content>\r\n                    {createTabPanes()}\r\n                </Tab.Content>\r\n            </Col>\r\n        </Row>\r\n    </Tab.Container>\r\n\r\n}\r\n","import { Button, Col, Container, FormControl, InputGroup, Row } from \"react-bootstrap\";\r\nimport { addTalent, ITalentState, removeTalent } from \"./talentSlice\";\r\nimport { Pencil, PlusCircle, Trash } from \"react-bootstrap-icons\";\r\nimport React, { useState } from \"react\";\r\nimport { TalentEntryFunction } from \"./talentEntry\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\n\r\n\r\nexport const TalentView = () => {\r\n    const talents = useAppSelector(state => state.talents);\r\n    const dispatch = useAppDispatch()\r\n\r\n    const [newTalent, setNewTalent] = useState({name: '', description: '', tier: 0});\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col>\r\n                    <h3>Talents</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {createTalentObject(talents)}\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <Button\r\n                                onClick={() => dispatch(addTalent(newTalent))}\r\n                                variant=\"outline-primary\">\r\n                                { talents[newTalent.name] ? <Pencil/> : <PlusCircle/> }\r\n                            </Button>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl placeholder={'Talentname'} aria-describedby=\"basic-addon1\"\r\n                                     onChange={(event => setNewTalent({ ...newTalent, name: event.target.value }))} />\r\n                        <FormControl placeholder={'Description'} aria-describedby=\"basic-addon1\"\r\n                                     onChange={(event => setNewTalent({\r\n                                         ...newTalent,\r\n                                         description: event.target.value\r\n                                     }))} />\r\n                         <InputGroup.Append>\r\n                             <Button\r\n                                 onClick={() => dispatch(removeTalent(newTalent))}\r\n                                 variant=\"outline-primary\"><Trash/></Button>\r\n                         </InputGroup.Append>\r\n                    </InputGroup>\r\n                </Col>\r\n\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nfunction createTalentObject(talents: ITalentState) {\r\n    const result: JSX.Element[] = [];\r\n    for (const name in talents) {\r\n        result.push(\r\n            <Col key={`talent-${name}`} style={{ padding: \"5px\" }}>\r\n                <TalentEntryFunction {...talents[name]} />\r\n            </Col>\r\n        )\r\n    }\r\n    return result;\r\n}\r\n","import { WeaponCard } from \"./weaponCard\";\r\nimport { Badge, Card, Col, ProgressBar, Row } from \"react-bootstrap\";\r\nimport React, { useState } from \"react\";\r\nimport \"./armoury.scss\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\nimport { addItem } from \"../inventory/inventorySlice\";\r\nimport { removeGear } from \"./armourySlice\";\r\n\r\nexport const Armoury = () => {\r\n\r\n    const imageHead = 'data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%20style%3D%22height%3A%20512px%3B%20width%3A%20512px%3B%22%3E%3Cpath%20d%3D%22M0%200h512v512H0z%22%20fill%3D%22%23000%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3Cg%20class%3D%22%22%20transform%3D%22translate(0%2C0)%22%20style%3D%22%22%3E%3Cpath%20d%3D%22M257.375%2032.03C139.957%2087.197%2042.343%20247.886%2017.5%20367.75c71.742%200%20124.22%2022.845%20162.094%2063.03l10.47-11.436c-28.06-28.873-64.935-52.446-113.564-75.906%2026.142-65.033%2066.028-163.458%20116.72-169.188%2019.835-2.243%2041.05%209.735%2064.155%2043.438%2072.33-120.27%20141.014%2038.54%20180.875%20125.75-47.687%2025.854-84.5%2049.463-112.97%2078.718l9.25%2010.406c37.335-39.758%2089.657-64.812%20162.72-64.812C467.784%20249.384%20377.24%2090.37%20257.375%2032.03zm-79.72%20243.314c-15.3-.083-26.405%206.436-26.405%2016.656%200%2012.58%2016.834%2026.038%2037.594%2030.063%2020.76%204.024%2037.594-2.92%2037.594-15.5s-16.835-26.038-37.594-30.063c-3.893-.755-7.657-1.137-11.188-1.156zm156.345%200c-3.53.02-7.295.4-11.188%201.156-20.76%204.025-37.593%2017.483-37.593%2030.063%200%2012.58%2016.833%2019.524%2037.592%2015.5%2020.76-4.025%2037.594-17.484%2037.594-30.063%200-10.22-11.105-16.74-26.406-16.656z%22%20fill%3D%22%23fff%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3C%2Fg%3E%3C%2Fsvg%3E';\r\n    const imageBody = 'data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%20style%3D%22height%3A%20512px%3B%20width%3A%20512px%3B%22%3E%3Cpath%20d%3D%22M0%200h512v512H0z%22%20fill%3D%22%23000%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3Cg%20class%3D%22%22%20transform%3D%22translate(-1%2C-7)%22%20style%3D%22%22%3E%3Cpath%20d%3D%22M208%2056.643l-16%2064-98.568%2014.082L256%20175.365l162.568-40.64L320%20120.643l-16-64-27.268%2018.18-12.002%2048.003h-17.46l-12.002-48.004zm-138.621%2090.62L16%20200.644l48%2064%2025.77-25.77%2026.619-79.857zm373.242%200l-47.01%2011.753%2026.62%2079.857L448%20264.643l48-64zm-308.717%2016.132l-20.123%2060.369%2013.81%2055.246L247%20345.348V191.67zm244.192%200L265%20191.67v153.678l119.408-66.338%2013.81-55.246zM144%20308.715v56.314l103%2030.627v-29.719zm224%200l-103%2057.223v29.718l103-30.627zm-224%2075.54v56.388l103%2014.714V414.88zm224%200L265%20414.88v40.478l103-14.714z%22%20fill%3D%22%23fff%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3C%2Fg%3E%3C%2Fsvg%3E';\r\n    const imageArmL = 'data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%20style%3D%22height%3A%20512px%3B%20width%3A%20512px%3B%22%3E%3Cpath%20d%3D%22M0%200h512v512H0z%22%20fill%3D%22%23000%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3Cg%20class%3D%22%22%20transform%3D%22translate(-1%2C-7)%22%20style%3D%22%22%3E%3Cpath%20d%3D%22M256%2026C192%2058%20112%2080%2032%2080c0%2046.047%204.726%2089.503%2013.02%20129.69%2025.495-2.558%2053.13-2.433%2081.86-1.06l-7.61-30.446-2.022-8.086%2065.898-21.967%2010.866%2065.194c28.32%202.336%2056.907%204.82%2084.9%206.238%2014.357-4.67%2028.073-8.33%2040.43-14.36l7.78-46.682%201.732-10.39%2065.898%2021.968-9.578%2038.316c9.207%204.926%2020.403%2014.91%2023.97%2022.346%203.352%207.302%202.696%2015.333.256%2024.154%202.27%206.21%202.31%2012.947.43%2019.287-1.65%205.57-4.95%2010.974-9.844%2014.974.41%2010.106-5.414%2019.52-14.597%2023.353-5.045%2010.42-15.085%2022.05-25.146%2025.678a35.325%2035.325%200%200%201-7.943%201.7l-10.29%2041.16-47.98-23.99%207.107-42.647c-7.178-2.867-14.753-6.176-23.147-9.758-22.506%202.868-45.05%205.7-67.385%208.213l7.366%2044.193-47.98%2023.99-15.668-62.668c-25.372%202.034-50.16%203.29-73.943%203.288C126.423%20426.23%20197.21%20490%20256%20490c96%200%20224-170%20224-410-80%200-160-22-224-54zm-87.146%20145.87l-30.102%2010.034%2043.258%20173.028%2016.02-8.008-29.176-175.055zm174.292%200l-3.927%2023.562c9.757-4.082%2021.374-8.826%2031.514-3.473l2.514-10.058-30.102-10.033zm17.692%2035.696c-5.508.754-15.244%204.655-25.35%209.72-18.843%2011.052-35.297%2013.47-53.963%2020.448-29.314-1.518-59.264-3.89-84.43-5.912l10.538%2063.23c25.773-2.928%2050.59-5.99%2072.93-8.845%208.035%203.372%2016.415%207.06%2023.603%2010.05l5.156-30.943-.492-16.046c31.396-.965%2040.955-17.8%2046.625-26.14%202.25-3.306%204.94-9.64%205.424-13.554.162-1.32.03-1.567-.042-2.008zm14.598%2016.305c-2.703%205.724-5.283%209.687-7.97%2014.567%207.198%203.907%2015.487%205.786%2025.923%206.215.426-2.995.116-4.813-.605-6.382-1.195-2.604-5.27-6.648-13.826-12.715-1.51-.91-2.674-1.404-3.524-1.684zm-284.63%202.026c-22.55-.09-43.69%201.063-62.732%204.256-10.604%2021.43-9.975%2044.448%201.57%2071.08%2036.332%203.616%2077.178%202.643%20120.223-.662l-18.35-73.406c-13.955-.738-27.575-1.215-40.71-1.268zm263.41%2025.303a71.374%2071.374%200%200%201-5.972%204.34c2.293%209.34%2010.7%2011.83%2019.822%2013.91%207.76%201.73%2016.358%202.576%2023.13%202.802a14.133%2014.133%200%200%200%201.376-3.166c.653-2.202.702-4.555.38-6.48-14.655-.713-27.626-4.258-38.737-11.407zm-21.835%2012.025a73.26%2073.26%200%200%201-4.694%201.41l-2.053%2012.32a25.18%2025.18%200%200%201%208.056-10.383%2031.58%2031.58%200%200%201-1.31-3.347zm12.872%2017.345c-1.468.894-2.713%202.34-3.195%203.817-.638%201.953-1.09%203.368%201.755%205.533%203.645%202.138%209.51%204.437%2015.745%205.613%205.123.967%2010.54%201.276%2014.804%201.205l2.876-.467c1.974-.318%204.624-3.515%204.752-6.553-5.69-.506-11.804-1.355-17.836-2.7-6.592-1.47-13.14-3.327-18.9-6.447zm-21.23%206.04l-10.05%2060.314%2016.018%208.008%204.72-18.88c-9.425-5.795-14.6-14.962-14.468-23.888.085-5.812%202.58-11.444%206.653-15.617-1.686-3.174-2.65-6.586-2.872-9.936zm15.933%2021.91c-1.2.71-1.687%202-1.715%203.908-.04%202.678%201.262%206.588%208.574%209.61.664.133%203.335.59%207.618-.87%202.824-.963%206.072-2.797%209.226-6.81a108.078%20108.078%200%200%201-7.44-1.137c-5.542-1.045-11.13-2.444-16.263-4.7z%22%20fill%3D%22%23fff%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3C%2Fg%3E%3C%2Fsvg%3E';\r\n    const imageArmR = 'data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%20style%3D%22height%3A%20512px%3B%20width%3A%20512px%3B%22%3E%3Cpath%20d%3D%22M0%200h512v512H0z%22%20fill%3D%22%23000%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3Cg%20class%3D%22%22%20transform%3D%22translate(0%2C-6)%22%20style%3D%22%22%3E%3Cpath%20d%3D%22M122.1%2017.52L186.6%20161l104.5-44.9-44.5-98.58h-51.1l35.8%2080.75-16.4%207.23-39-87.98zm265.2%2077.75L110.4%20215.2l12%2028.2%20278.1-119.8zm-69.7%2098.53l-23.9%2011.5c12.8%205.4%2026%2013.7%2038.3%2015.6%2018.1-13.1-4.9-30.5-14.4-27.1zm-60.7%2011.1l-36.2%2016.7c-11.9%2018.4-14.8%2046-18.2%2069.7%2020.6%2030.1%2030.5%2062.4%2039.5%2094%2017.9-3.7%2032.2-6.8%2048.7-11.5-24.4-38.7-42.2-78.4-53.6-118.9%200%200%205.6-10.5%208.4-15.8%2011.9%207.3%2024.9%2012.4%2036.6%209.9%2010-4.1%2021.5-7.9%2027.7-16.6-17.6-6.9-37.1-17.5-52.9-27.5zm92.6%2026.6c-10.8%205.8-23%2011.2-31.9%2018.9-5.3%204.7-12.1%208.8-20.5%2012.3%201.1%207.3-.1%2019.6%208.1%2018.8%2020.5-6.2%2040.5-15%2059.7-28.4-.1-9.2-8-24.1-15.4-21.6zm-90.2%2034.2c11.3%2034.8%2027.6%2069%2049.3%20102.6%204.7-1.6%209.3-3.3%2013.5-5-7.3-6.2-11.7-15.9-12-25.3-16.6-4.1-20.8-29.4-17.2-41.6-9.5-7-13.6-18.1-14.2-28.7-7.2.7-13.6-.1-19.4-2zm103.3%2010.4c-13.6%208.1-27.6%2014.3-41.6%2019.2l-9%204.4c-4.4%204.6-4.5%2015.6%201%2020.3%209.7%203.5%2050.1-21.2%2057.7-27.9%201.3-5.8-3.5-14.9-8.1-16zm-178.1%2021.2L19.1%20335.8V495c95.7-25.3%20146.9-47.1%20209.7-90.2-10.8-38-20.5-74.8-44.3-107.5zm187.8%2016.9c-13.6%2010.2-27.2%2016.2-42.9%2021.4-.4%206.7%202.5%2018.1%2012.1%2016%2019.9-4.3%2036.3-17.5%2036.6-24.6.2-3.7-2-10.5-5.8-12.8zm-7.5%2048.6c-14.3%208.2-31.5%2015.9-46.7%2021.4l18.7%2031.8%2039.3-18.8zm22.2%2049.1L342.9%20433l3.1%2021.9c15.1.5%2046.6-11.3%2055.4-26.1v-.1z%22%20fill%3D%22%23fff%22%20fill-opacity%3D%221%22%20transform%3D%22translate(512%2C%200)%20scale(-1%2C%201)%20rotate(0%2C%20256%2C%20256)%20skewX(0)%20skewY(0)%22%3E%3C%2Fpath%3E%3C%2Fg%3E%3C%2Fsvg%3E';\r\n    const imageLegR = 'data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%20style%3D%22height%3A%20512px%3B%20width%3A%20512px%3B%22%3E%3Cpath%20d%3D%22M0%200h512v512H0z%22%20fill%3D%22%23000%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3Cg%20class%3D%22%22%20transform%3D%22translate(0%2C0)%22%20style%3D%22%22%3E%3Cpath%20d%3D%22M269%2023.95l-87.7.1c1.1%2061.4-2.4%20116.05-14%20159.45-9%2034-23.6%2061.6-45.2%2079-.1%209.5-.8%2019-2.1%2028.6-3.1%2022.9-13.5%2043.2-22.75%2065%2023.55-1.3%2043.55-11.6%2065.35-24.8%2020.6-12.5%2042.4-27.5%2068.9-37.8-.2-1.4-.4-2.9-.4-4.2-1.9-23.7.1-52.2%204.1-83.2C243%20147.6%20257.9%2081.05%20269%2023.95zm-105.7.1H80.65c-1.6%2036.5%2010.1%2076.15%2021.65%20119.15%208.3%2030.4%2016.5%2062.3%2019%2095.7%2012.6-14.3%2021.8-34.4%2028.6-60%2010.8-40.6%2014.4-94.15%2013.4-154.85zm41.8%2014.9a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm-2.4%2052.5a9%209%200%200%201%20.1%200%209%209%200%200%201%209%208.95%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-8.95zm-5.9%2056.25a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm-16%2060.6a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm-32%2048.1a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm85.7%2055.3c-22.6%209.6-42.3%2022.9-62.6%2035-24.6%2014.9-50.5%2027.9-81.85%2027.5-8.2%2022.7-13.8%2048-10%2079.9h82.35c13.2-41.4%2042.9-78%2095.1-106.8-1.4-1-2.9-2.1-4.3-3.2-9.6-7.6-15.3-18.8-18.7-32.4zm40.2%2046.7c-52.1%2026.2-80.4%2058.5-93.6%2095.7h127.4c0-14.3.6-29%203.9-43.6%202.6-11.5%207-22.9%2014-33.9-16.1-3.3-33.5-8.1-51.7-18.2zm70.8%2021.8c-8.2%2010.9-12.8%2022.3-15.5%2034.3-2.8%2012.5-3.5%2025.8-3.5%2039.6h104c-2-17.8-12.5-39.8-28.1-52.1-17.8-13.9-36-17.9-56.9-21.8zm8.3%2010.5a9%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%209-9zm-254.05%2035a9%209%200%200%201%20.1%200%209%209%200%200%201%208.95%209%209%209%200%200%201-8.95%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm44.85.6a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm201.5.1a9%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%209-9zM72.05%20470v18.1H440V470z%22%20fill%3D%22%23fff%22%20fill-opacity%3D%221%22%20transform%3D%22translate(512%2C%200)%20scale(-1%2C%201)%20rotate(0%2C%20256%2C%20256)%20skewX(0)%20skewY(0)%22%3E%3C%2Fpath%3E%3C%2Fg%3E%3C%2Fsvg%3E';\r\n    const imageLegL = 'data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%20style%3D%22height%3A%20512px%3B%20width%3A%20512px%3B%22%3E%3Cpath%20d%3D%22M0%200h512v512H0z%22%20fill%3D%22%23000%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3Cg%20class%3D%22%22%20transform%3D%22translate(0%2C0)%22%20style%3D%22%22%3E%3Cpath%20d%3D%22M269%2023.95l-87.7.1c1.1%2061.4-2.4%20116.05-14%20159.45-9%2034-23.6%2061.6-45.2%2079-.1%209.5-.8%2019-2.1%2028.6-3.1%2022.9-13.5%2043.2-22.75%2065%2023.55-1.3%2043.55-11.6%2065.35-24.8%2020.6-12.5%2042.4-27.5%2068.9-37.8-.2-1.4-.4-2.9-.4-4.2-1.9-23.7.1-52.2%204.1-83.2C243%20147.6%20257.9%2081.05%20269%2023.95zm-105.7.1H80.65c-1.6%2036.5%2010.1%2076.15%2021.65%20119.15%208.3%2030.4%2016.5%2062.3%2019%2095.7%2012.6-14.3%2021.8-34.4%2028.6-60%2010.8-40.6%2014.4-94.15%2013.4-154.85zm41.8%2014.9a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm-2.4%2052.5a9%209%200%200%201%20.1%200%209%209%200%200%201%209%208.95%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-8.95zm-5.9%2056.25a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm-16%2060.6a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm-32%2048.1a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm85.7%2055.3c-22.6%209.6-42.3%2022.9-62.6%2035-24.6%2014.9-50.5%2027.9-81.85%2027.5-8.2%2022.7-13.8%2048-10%2079.9h82.35c13.2-41.4%2042.9-78%2095.1-106.8-1.4-1-2.9-2.1-4.3-3.2-9.6-7.6-15.3-18.8-18.7-32.4zm40.2%2046.7c-52.1%2026.2-80.4%2058.5-93.6%2095.7h127.4c0-14.3.6-29%203.9-43.6%202.6-11.5%207-22.9%2014-33.9-16.1-3.3-33.5-8.1-51.7-18.2zm70.8%2021.8c-8.2%2010.9-12.8%2022.3-15.5%2034.3-2.8%2012.5-3.5%2025.8-3.5%2039.6h104c-2-17.8-12.5-39.8-28.1-52.1-17.8-13.9-36-17.9-56.9-21.8zm8.3%2010.5a9%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%209-9zm-254.05%2035a9%209%200%200%201%20.1%200%209%209%200%200%201%208.95%209%209%209%200%200%201-8.95%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm44.85.6a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm201.5.1a9%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%209-9zM72.05%20470v18.1H440V470z%22%20fill%3D%22%23fff%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3C%2Fg%3E%3C%2Fsvg%3E';\r\n\r\n    const infamyStat = useAppSelector(state => state.characteristics['INF']);\r\n    const armouryState = useAppSelector(state => state.armoury);\r\n    const dispatch = useAppDispatch()\r\n\r\n    const armour = armouryState.armour;\r\n    const maxHealth = armouryState.character.maxWounds;\r\n    const maxInfamy: number = Math.floor( infamyStat.value / 10 + infamyStat.bonus);\r\n\r\n    const [infamy, setInfamy] = useState(maxInfamy);\r\n    const [health, setHealth] = useState(armouryState.character.currentWounds);\r\n\r\n    return <div>\r\n\r\n        <Row>\r\n            <Col>\r\n                <h3>Armoury</h3>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col>\r\n                {/* BEGIN WEAPONS*/}\r\n                <Row>\r\n                    <Col>\r\n                        {Object.values(armouryState.weapons).map((weapon =>\r\n                                <div key={`wp-${weapon.name}`}>\r\n\r\n                                <WeaponCard weapon={weapon} />\r\n                                </div>\r\n                        ))}\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Col>\r\n            <Col>\r\n                <Row>\r\n                    <Col md={5}>\r\n                        {Object.values(armouryState.gear).map(gear => (\r\n                            <Row key={`gear-${gear.name}`}>\r\n                                <Col md={10}>{gear.name}</Col>\r\n                                <Col md={2}> <Badge variant={'danger'} style={{ cursor: 'pointer' }}\r\n                                             onClick={() => {\r\n                                                 dispatch(removeGear(gear));\r\n                                                 dispatch(addItem(gear))\r\n                                             }}>-</Badge>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        ))}\r\n                    </Col>\r\n                    <Col md={{ span: 3 }}><Card> <Card.Img src={imageHead}/> <Card.ImgOverlay> <Badge\r\n                        className={\"armoury-badge\"} variant={\"secondary\"} pill>{armour.head}</Badge> </Card.ImgOverlay></Card></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={{ offset: 2, span: 3 }}><Card> <Card.Img src={imageArmR}/> <Card.ImgOverlay> <Badge\r\n                        className={\"badge-armoury badge-secondary\"} pill>{armour.armR}</Badge> </Card.ImgOverlay>\r\n                    </Card></Col>\r\n                    <Col md={{ span: 3 }}><Card> <Card.Img src={imageBody}/> <Card.ImgOverlay> <Badge\r\n                        className={\"armoury-badge\"} variant={\"secondary\"} pill>{armour.body}</Badge> </Card.ImgOverlay>\r\n                    </Card></Col>\r\n                    <Col md={{ span: 3 }}><Card> <Card.Img src={imageArmL}/> <Card.ImgOverlay> <Badge\r\n                        className={\"armoury-badge\"} variant={\"secondary\"} pill>{armour.armL}</Badge> </Card.ImgOverlay>\r\n                    </Card></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={{ offset: 3, span: 3 }}><Card> <Card.Img src={imageLegR}/> <Card.ImgOverlay> <Badge\r\n                        className={\"armoury-badge\"} variant={\"secondary\"} pill>{armour.legR}</Badge> </Card.ImgOverlay>\r\n                    </Card></Col>\r\n                    <Col md={{ offset: 1, span: 3 }}><Card> <Card.Img src={imageLegL}/> <Card.ImgOverlay> <Badge\r\n                        className={\"armoury-badge\"} variant={\"secondary\"} pill>{armour.legL}</Badge> </Card.ImgOverlay>\r\n                    </Card></Col>\r\n                </Row>\r\n\r\n                {/* WOUNDS */}\r\n                <Row>\r\n                    <Col md={2}>Wounds:</Col>\r\n                    <Col md={8}>\r\n                        <ProgressBar>\r\n                            <ProgressBar variant={\"danger\"} animated={health < maxHealth / 2} now={health}\r\n                                         max={maxHealth} label={`${health}/${maxHealth}`}/>\r\n                            <ProgressBar variant={\"secondary\"} now={maxHealth - health} max={maxHealth}/>\r\n                        </ProgressBar>\r\n                    </Col>\r\n                    <Col md={2}>\r\n                        <div>\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => setHealth(Math.min(health + 1, maxHealth))}>+</Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => setHealth(Math.max(health - 1, 0))}>-</Badge>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* INFAMY */}\r\n                <Row>\r\n                    <Col md={2}>Infamy: </Col>\r\n                    <Col md={8}>\r\n                        <ProgressBar>\r\n                            <ProgressBar variant={\"success\"} now={infamy} max={maxInfamy}\r\n                                         label={`${infamy}/${maxInfamy}`}/>\r\n                            <ProgressBar variant={\"secondary\"} now={maxInfamy - infamy} max={maxInfamy}/>\r\n                        </ProgressBar>\r\n                    </Col>\r\n                    <Col md={2}>\r\n                        <div>\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => setInfamy(Math.min(infamy + 1, maxInfamy))}>+</Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => setInfamy(infamy - 1)}>-</Badge>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Col>\r\n\r\n        </Row>\r\n    </div>\r\n\r\n\r\n}\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { FormControl, InputGroup } from \"react-bootstrap\";\r\n\r\nconst baseStyle = {\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    borderWidth: 2,\r\n    borderRadius: 2,\r\n    borderColor: '#eeeeee',\r\n    borderStyle: 'dashed',\r\n    backgroundColor: '#fafafa',\r\n    color: '#bdbdbd',\r\n    outline: 'none',\r\n    transition: 'border .24s ease-in-out'\r\n};\r\n\r\nconst activeStyle = {\r\n    borderColor: '#2196f3'\r\n};\r\n\r\nconst acceptStyle = {\r\n    borderColor: '#00e676'\r\n};\r\n\r\nconst rejectStyle = {\r\n    borderColor: '#ff1744'\r\n};\r\n\r\nexport const FileUploadDrop = ({ importState, setImportState }\r\n                                   : { importState: string, setImportState: React.Dispatch<React.SetStateAction<string>> }) => {\r\n\r\n    const onDrop = useCallback((acceptedFiles) => {\r\n        acceptedFiles.forEach((file: any) => {\r\n            const reader = new FileReader()\r\n\r\n            reader.onabort = () => console.log('file reading was aborted')\r\n            reader.onerror = () => console.log('file reading has failed')\r\n            reader.onload = () => {\r\n                // Do whatever you want with the file contents\r\n                const binaryStr = reader.result;\r\n                const result: string = binaryStr as string\r\n                setImportState(result)\r\n            }\r\n            reader.readAsText(file)\r\n        })\r\n\r\n    }, [])\r\n    const {\r\n        getRootProps,\r\n        isDragActive,\r\n        isDragAccept,\r\n        isDragReject\r\n    } = useDropzone({ onDrop, accept: 'application/json' })\r\n\r\n    const style = useMemo(() => ({\r\n        ...baseStyle,\r\n        ...(isDragActive ? activeStyle : {}),\r\n        ...(isDragAccept ? acceptStyle : {}),\r\n        ...(isDragReject ? rejectStyle : {})\r\n    }), [\r\n        isDragActive,\r\n        isDragReject,\r\n        isDragAccept\r\n    ]);\r\n\r\n    return (\r\n        <div {...getRootProps()} style={style}>\r\n\r\n            <InputGroup>\r\n                {/*<input {...getInputProps()} />*/}\r\n                <FormControl as=\"textarea\" size={\"sm\"} rows={10}\r\n                             placeholder={\"Drag 'n' drop some files here and click on load\"}\r\n                             aria-label=\"Importfield\"\r\n                             value={importState}\r\n                             onChange={(event) => {\r\n                                 setImportState(event.target.value)\r\n                             }}/>\r\n            </InputGroup>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Col, Container, FormControl, InputGroup, Jumbotron, Row } from \"react-bootstrap\";\r\nimport { CharacteristicsCounter } from \"../characteristics/characteristicsCounter\";\r\nimport './character.scss';\r\nimport { SkillEntryFunction } from \"../skills/skillEntry\";\r\nimport { allSkills } from \"./resources\";\r\nimport {\r\n    characteristicsInitialState,\r\n    ICharacteristicsState,\r\n    importCharacteristics\r\n} from \"../characteristics/characteristicsSlice\";\r\nimport { TalentEntryFunction } from \"../talents/talentEntry\";\r\nimport { importTalents, ITalentState } from \"../talents/talentSlice\";\r\nimport { InventoryFunction } from \"../inventory/inventory\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\nimport { RootState } from \"../../general/store\";\r\nimport { importSkills } from \"../skills/skillSlice\";\r\nimport { importInventory } from \"../inventory/inventorySlice\";\r\nimport { TalentView } from \"../talents/talentView\";\r\nimport { Armoury } from \"../armoury/armoury\";\r\nimport { importArmoury } from \"../armoury/armourySlice\";\r\nimport { FileUploadDrop } from \"./fileUploadDrop\";\r\n\r\n\r\nexport const CharacterFunction = () => {\r\n    const [skillCols, setSkillCols] = useState(2);\r\n    const [mainCols, setMainCols] = useState(1);\r\n    const [showType, toggleShowType] = useState(true);\r\n    const [showSkilled, toggleShowSkilled] = useState(true);\r\n    const [importState, setImportState] = useState('');\r\n\r\n    const completeState = useAppSelector(state => state);\r\n    const dispatch = useAppDispatch()\r\n\r\n    function importStateFromJson(importState: string) {\r\n        if (!importState) {\r\n            return;\r\n        }\r\n        const state = JSON.parse(importState) as RootState;\r\n        dispatch(importCharacteristics(state.characteristics))\r\n        dispatch(importInventory(state.inventory))\r\n        dispatch(importSkills(state.skills))\r\n        dispatch(importTalents(state.talents))\r\n        dispatch(importArmoury(state.armoury))\r\n    }\r\n\r\n    function getCharacteristicsPane() {\r\n        return <Jumbotron>\r\n            <Container style={{ padding: 0 }}>\r\n                <Row>\r\n                    <Col>\r\n                        <h3>Characteristics</h3>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {createCharacteristicsObjects(characteristicsInitialState)}\r\n                </Row>\r\n            </Container>\r\n        </Jumbotron>\r\n    }\r\n\r\n    function getSkillsPane() {\r\n        return <Jumbotron>\r\n            <Row>\r\n                <Col>\r\n                    <h3>Skills</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row>Col: {skillCols}\r\n                <Button style={{ padding: 0, width: '10px', height: '25px' }} variant=\"outline-secondary\" size=\"sm\"\r\n                        onClick={() => setSkillCols(skillCols - 1)}>-</Button>\r\n                <Button style={{ padding: 0, width: '10px', height: '25px' }} variant=\"outline-secondary\" size=\"sm\"\r\n                        onClick={() => setSkillCols(skillCols + 1)}>+</Button>\r\n                <Button size={\"sm\"} style={{ padding: 0, height: '25px' }}\r\n                        onClick={() => toggleShowType(!showType)}>Type</Button>\r\n                <Button size={\"sm\"} style={{ padding: 0, height: '25px' }}\r\n                        onClick={() => toggleShowSkilled(!showSkilled)}>Skilled</Button>\r\n            </Row>\r\n            <Container fluid>\r\n                <Row>\r\n                    {createSkillMatrix(skillCols, showType, showSkilled).map((skillCols, index) => (\r\n                        <Col key={`skillcol-${index}`}>\r\n                            <Col>\r\n                                <Container>\r\n                                    <Row>\r\n                                        <Col md={5}><b>Skillname</b></Col>\r\n                                        <Col md={4}>\r\n                                            <span style={{ paddingLeft: 12, paddingRight: 12 }}><b>T</b></span>\r\n                                            <span style={{ paddingLeft: 5, paddingRight: 5 }}><b>+10</b></span>\r\n                                            <span style={{ paddingLeft: 5, paddingRight: 5 }}><b>+20</b></span>\r\n                                            <span style={{ paddingLeft: 5, paddingRight: 5 }}><b>+30</b></span>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            </Col>\r\n                            {skillCols}\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            </Container>\r\n        </Jumbotron>\r\n    }\r\n\r\n    function getTalentsPane() {\r\n        return <Jumbotron>\r\n            <TalentView/>\r\n        </Jumbotron>\r\n    }\r\n\r\n    function getInventoryPane() {\r\n        return <Jumbotron>\r\n            <Row>\r\n                <Col>\r\n                    <h3>Inventory</h3>\r\n                </Col>\r\n            </Row>\r\n            <InventoryFunction/>\r\n        </Jumbotron>\r\n    }\r\n\r\n    function getArmouryPane() {\r\n        return <Jumbotron>\r\n            <Armoury/>\r\n        </Jumbotron>\r\n    }\r\n\r\n    function getSettingsPane() {\r\n\r\n        return <Jumbotron>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <h3>Settings</h3>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={2}>\r\n                        <Row>\r\n                            <Col>\r\n                                <Button size={\"sm\"}\r\n                                        onClick={() => setImportState(JSON.stringify(completeState))}>Export</Button>\r\n\r\n                            </Col>\r\n                            <Col>\r\n                                <Button size={\"sm\"} onClick={() => importStateFromJson(importState)}>Load</Button>\r\n\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n\r\n                                <a href={`data:text/json;charset=utf-8,${encodeURIComponent(\r\n                                    JSON.stringify(completeState)\r\n                                )}`} download={\"DnD-Character.json\"}>\r\n\r\n                                    <Button size={\"sm\"}>Download</Button>\r\n                                </a>\r\n                            </Col>\r\n                            <Col>\r\n                                {/*<input type=\"file\" />*/}\r\n                                {/*<FileUploadDrop />*/}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            Cols: {mainCols}\r\n                            <Button style={{ padding: 0, width: '10px', height: '25px' }} variant=\"outline-secondary\"\r\n                                    size=\"sm\"\r\n                                    onClick={() => setMainCols(mainCols - 1)}>-</Button>\r\n                            <Button style={{ padding: 0, width: '10px', height: '25px' }} variant=\"outline-secondary\"\r\n                                    size=\"sm\"\r\n                                    onClick={() => setMainCols(mainCols + 1)}>+</Button>\r\n\r\n                        </Row>\r\n                    </Col>\r\n                    <Col sm={10}>\r\n                        <FileUploadDrop {...{ importState, setImportState }} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Jumbotron>\r\n    }\r\n\r\n    const allPanes = [\r\n        getCharacteristicsPane(),\r\n        getSkillsPane(),\r\n        getTalentsPane(),\r\n        getArmouryPane(),\r\n        getInventoryPane(),\r\n        getSettingsPane(),\r\n    ]\r\n\r\n    return <Container>\r\n        <Row>\r\n\r\n            <Col>\r\n                {allPanes.map(element =>\r\n                    element\r\n                )}\r\n            </Col>\r\n        </Row>\r\n\r\n\r\n    </Container>\r\n};\r\n\r\nfunction createCharacteristicsObjects(characteristics: ICharacteristicsState): JSX.Element[] {\r\n    const result: JSX.Element[] = [];\r\n    for (const short in characteristics) {\r\n        result.push(\r\n            <Col key={`stat-${short}`} style={{ padding: \"5px\" }}>\r\n                <CharacteristicsCounter short={short}/>\r\n            </Col>\r\n        )\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction createSkillMatrix(colCount: number = 2, showType: boolean, showSkilled: boolean) {\r\n    const skillObjects: JSX.Element[] = [];\r\n    for (const name in allSkills) {\r\n        skillObjects.push(\r\n            <SkillEntryFunction key={`skill-${name}`} name={name} showType={showType} showSkilled={showSkilled}/>\r\n        )\r\n    }\r\n\r\n    const skillMatrix: any[] = [];\r\n    for (let j = 0; j < colCount; j++) {\r\n        const part = ((skillObjects.length - 1) / colCount + 1 | 0);\r\n        skillMatrix[j] = new Array(part);\r\n        for (let i = part * j; i < part * (j + 1); i++) {\r\n            skillMatrix[j].push(skillObjects[i]);\r\n        }\r\n    }\r\n    return skillMatrix;\r\n}\r\n\r\n\r\nfunction createTalentObject(talents: ITalentState) {\r\n    const result: JSX.Element[] = [];\r\n    for (const name in talents) {\r\n        result.push(\r\n            <Col key={`talent-${name}`} style={{ padding: \"5px\" }}>\r\n                <TalentEntryFunction {...talents[name]} />\r\n            </Col>\r\n        )\r\n    }\r\n    return result;\r\n}\r\n","import React from 'react';\nimport './App.scss';\nimport { CharacterFunction } from \"./components/character/character\";\nimport { Col, Row } from \"react-bootstrap\";\n\nfunction App() {\n    return (\n        <div className=\"App\" style={{ backgroundColor: \"black\" }}>\n            {/*<header className=\"App-header\">*/}\n            {/*  <img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\n            {/*  <p>*/}\n            {/*    Edit <code>src/App.tsx</code> and save to reload.*/}\n            {/*  </p>*/}\n\n            {/*  <a*/}\n            {/*    className=\"App-link\"*/}\n            {/*    href=\"https://reactjs.org\"*/}\n            {/*    target=\"_blank\"*/}\n            {/*    rel=\"noopener noreferrer\"*/}\n            {/*  >*/}\n            {/*    Learn React*/}\n            {/*  </a>*/}\n            {/*</header>*/}\n            <div>\n                <CharacterFunction/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const characterSlice = createSlice({\r\n    name: 'character',\r\n    initialState: {},\r\n    reducers: {\r\n        importCompleteState: (state, action) => {\r\n\r\n            state = action.payload\r\n        }\r\n    },\r\n});\r\n\r\nexport const { importCompleteState } = characterSlice.actions\r\nexport default characterSlice.reducer\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { characteristicsSlice } from \"../components/characteristics/characteristicsSlice\";\r\nimport { skillSlice } from \"../components/skills/skillSlice\";\r\nimport { talentSlice } from \"../components/talents/talentSlice\";\r\nimport { inventorySlice } from \"../components/inventory/inventorySlice\";\r\nimport { characterSlice } from \"../components/character/characterSlice\";\r\nimport { armourySlice } from \"../components/armoury/armourySlice\";\r\n\r\n/**\r\n * Creates the Redux store and adds the default middlewares from redux toolkit as well as the router middleware\r\n */\r\nconst store = configureStore({\r\n    reducer: {\r\n        character: characterSlice.reducer,\r\n        characteristics: characteristicsSlice.reducer,\r\n        skills: skillSlice.reducer,\r\n        talents: talentSlice.reducer,\r\n        inventory: inventorySlice.reducer,\r\n        armoury: armourySlice.reducer\r\n    },\r\n    middleware: [...getDefaultMiddleware()],\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./general/store\";\n\n\nReactDOM.render(\n    <React.Fragment>\n        <Provider store={store}>\n            <link\n                rel=\"stylesheet\"\n                href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\"\n                integrity=\"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\"\n                crossOrigin=\"anonymous\"\n            />\n            <App/>\n        </Provider>\n    </React.Fragment>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}