{"version":3,"sources":["components/armoury/armourySlice.ts","general/hooks.ts","components/characteristics/characteristicsSlice.ts","components/talents/talentSlice.ts","components/character/EItemCategory.ts","components/character/resources.ts","components/character/Rolls.tsx","components/inventory/inventorySlice.ts","components/armoury/weaponCard.tsx","components/armoury/spellCard.tsx","components/armoury/armoury.tsx","components/characteristics/characteristicsCounter.tsx","components/skills/skillSlice.ts","components/skills/skillEntry.tsx","components/armoury/armourCard.tsx","components/inventory/inventory.tsx","components/talents/talentEntry.tsx","components/talents/talentView.tsx","components/character/fileUploadDrop.tsx","components/character/characterSlice.ts","components/character/character.tsx","App.tsx","reportWebVitals.ts","general/store.ts","fonts/CloisterBlack.ttf","index.tsx"],"names":["EWeaponCategory","ESpellType","EDamageType","useAppDispatch","useDispatch","useAppSelector","useSelector","characteristicsInitialState","name","value","short","bonus","characteristicsSlice","createSlice","initialState","reducers","increment","state","action","payload","decrement","incrementBonus","console","log","decrementBonus","importCharacteristics","characteristics","stat","actions","EGods","armourySlice","armour","head","body","armR","armL","legR","legL","gear","weapons","character","currentWounds","maxWounds","currentInfamy","setGear","removeGear","setWeapon","count","removeWeapon","setWounds","setMaxWounds","importArmoury","EItemCategory","talentSlice","tier","prerequisites","description","addTalent","talent","allTalents","removeTalent","importTalents","talents","ERollType","devotion","SLAANESH","UNALIGNED","NURGLE","TZEENTCH","KHORNE","SPECIAL","allWeapons","category","WEAPON","weaponCategory","PISTOL","damage","range","rof","clip","rld","type","IMPACT","pen","weight","CHAIN","RENDING","LASER","SPELL","ENERGY","exp","focusPower","sustained","subtype","ATTACK","CONCENTRATION","allArmour","ARMOUR","allItems","MISC","itemsInitialState","inventorySlice","addItem","oldCount","addItemByName","itemname","item","NONE","changeWeaponName","oldName","editWeapon","editArmour","removeItem","editDescription","editCategory","importInventory","inventory","WeaponCard","weapon","editMode","useState","newName","setNewName","weaponEquipped","armoury","testModifier","setTestModifier","dispatch","getJSXForWeaponCategory","cat","SWORD","getJSXForWeaponType","weaponType","SCHOCK","getWeaponTypeDropdown","Dropdown","Toggle","variant","id","Menu","Object","values","map","index","e","Item","onClick","getWeightField","col","Col","md","FormControl","size","placeholder","aria-label","onChange","event","parseInt","target","getDamageField","Badge","style","cursor","pill","Math","max","getRangeField","getMagazineField","getRemoveFromArmoury","getNameField","OverlayTrigger","overlay","Tooltip","Row","isMeeleWeapon","InputGroup","Append","Button","color","getRollDice","characteristic","dropItems","Header","i","push","DropdownButton","title","rollStatAndSendToDiscord","discordServer","characterName","username","d","split","amount","limit","rollResult","roll","rollType","DAMAGE","sendMessage","getEmbedsForRollType","rollDamageAndSendToDiscord","_","Card","Body","padding","SpellCard","spell","Armoury","infamyStat","toughnessStat","agilityStat","armouryState","agilityBonus","setAgilityBonus","agility","floor","maxHealth","maxInfamy","maxFatigue","infamy","setInfamy","fatigue","setFatigue","showTarget","setShowTarget","maxWoundsEditable","setMaxWoundsEditable","health","calcWoundLabel","heavilyWounded","span","Img","src","ImgOverlay","className","undefined","INIT","rollInitAndSendToDiscord","offset","FormGroup","as","FormLabel","column","sm","onMouseLeave","autoFocus","ProgressBar","animated","now","label","min","getHitLocation","rollValue","reverse","s","toString","length","join","reverseNumber","rollTestAndSendToDiscord","skill","rollTest","message","modifier","STAT","result","rollSum","colorCodeRed","colorCodeGreen","fields","inline","rolls","TEST","r","level","sum","discord","embeds","fetch","method","headers","JSON","stringify","content","random","CharacteristicsCounter","React","hideBtns","toggleBtns","Container","backgroundColor","alignItems","skillSlice","setLevel","setBonus","importSkills","skills","addSkill","parent","SkillEntryFunction","skillName","showType","showSkilled","callbackRoll","show","setShow","text","setText","setVariant","newLore","setNewLore","error","getDiceCol","toUpperCase","setTimeout","getNameCol","getSkilledRow","endsWith","getElement","Checkbox","checked","getEditRow","Alert","onClose","ArmourCard","InventoryFunction","readonly","toggleReadonly","newItem","setNewItem","activeFilter","setFilter","items","itemOptions","getJSXForItemCategory","Tab","defaultActiveKey","ListGroup","ButtonToolbar","ButtonGroup","itemsSorted","keys","sort","a","b","localeCompare","key","sortInventory","href","createListItems","Prepend","width","options","onInputChange","selection","Content","getItemButton","disabled","getTypeCard","Pane","eventKey","readOnly","rows","createTabPanes","TalentEntryFunction","setActiveTalent","specialization","TalentView","activeTalent","talentOptions","fluid","createTalentObject","paginationText","selected","aria-describedby","prerequisit","setNewTalent","baseStyle","flex","display","borderWidth","borderRadius","borderColor","borderStyle","outline","transition","activeStyle","acceptStyle","rejectStyle","FileUploadDrop","importState","setImportState","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","onerror","onload","binaryStr","readAsText","useDropzone","accept","getRootProps","isDragActive","isDragAccept","isDragReject","useMemo","characterSlice","importCompleteState","setCharacterName","setDiscordServer","CharacterFunction","skillCols","setSkillCols","mainCols","setMainCols","toggleShowType","toggleShowSkilled","editCharacterName","setEditCharacterName","editDiscord","setEditDiscord","customAmount","setCustomAmount","customLimit","setCustomLimit","completeState","allPanes","Jumbotron","fontFamily","fontSize","createCharacteristicsObjects","Form","rollAndSendToDiscord","height","colCount","skillObjects","skillNames","filter","mapElements","createSkillMatrix","paddingLeft","paddingRight","parse","importStateFromJson","encodeURIComponent","download","itemName","calcNewItems","elementCol","objects","matrix","j","part","Array","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","middleware","getDefaultMiddleware","ReactDOM","render","Fragment","rel","integrity","crossOrigin","document","getElementById"],"mappings":"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","file":"static/js/main.4d440f0c.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { IItem } from \"../inventory/inventorySlice\";\r\n\r\nexport enum EWeaponCategory {\r\n    PISTOL,\r\n    _,\r\n    SWORD,\r\n    CHAIN,\r\n}\r\n\r\n\r\nexport interface IWeapon extends IItem{\r\n    weaponCategory: EWeaponCategory,\r\n    damage: string,\r\n    range: number,\r\n    rof: string,\r\n    clip: number,\r\n    rld: string\r\n    type: EDamageType,\r\n    pen: number,\r\n    weight: number,\r\n\r\n}\r\n\r\nexport enum ESpellType {\r\n    ATTACK = \"Attack\",\r\n    CONCENTRATION = \"Concentration\"\r\n}\r\n\r\nexport interface ISpell extends IItem {\r\n    exp: number,\r\n    prerequisites: string,\r\n    action: string,\r\n    focusPower: string,\r\n    range: string,\r\n    sustained: boolean,\r\n    subtype: ESpellType[],\r\n    pen: number,\r\n    damage: string,\r\n    type: EDamageType,\r\n}\r\n\r\nexport interface IWeaponState {\r\n    [name: string]: IWeapon | ISpell\r\n}\r\n\r\nexport enum EDamageType {\r\n    IMPACT,\r\n    RENDING,\r\n    SCHOCK,\r\n    LASER,\r\n    ENERGY,\r\n\r\n    MISC,\r\n}\r\n\r\n\r\nexport interface IArmourStats {\r\n    head?: number,\r\n    body?: number,\r\n    armR?: number,\r\n    armL?: number,\r\n    legR?: number,\r\n    legL?: number\r\n}\r\n\r\nexport interface IArmour extends IItem, IArmourStats {}\r\n\r\nexport interface IArmouryState {\r\n    armour: IArmourStats,\r\n    gear: {[name: string]: IArmour},\r\n    weapons: IWeaponState,\r\n    character: {\r\n        currentWounds: number,\r\n        maxWounds: number,\r\n        currentInfamy: number,\r\n    }\r\n}\r\n\r\nexport const armouryInitalState = {\r\n    armour: {\r\n        head: 0,\r\n        body: 0,\r\n        armR: 0,\r\n        armL: 0,\r\n        legR: 0,\r\n        legL: 0,\r\n    },\r\n    gear: { },\r\n    weapons: {},\r\n    character: {\r\n        currentWounds: 5,\r\n        maxWounds: 7,\r\n        currentInfamy: 2\r\n    }\r\n} as IArmouryState\r\n\r\nexport const armourySlice = createSlice({\r\n    name: 'armoury',\r\n    initialState: armouryInitalState,\r\n    reducers: {\r\n        setGear: (state, action: PayloadAction<IArmour>) =>  {\r\n            const { head, body, armL, armR, legL, legR, name } = action.payload;\r\n\r\n            state.armour.head = head ? head : state.armour.head\r\n            state.armour.body = body ? body : state.armour.body\r\n            state.armour.armL = armL ? armL : state.armour.armL\r\n            state.armour.armR = armR ? armR : state.armour.armR\r\n            state.armour.legL = legL ? legL : state.armour.legL\r\n            state.armour.legR = legR ? legR : state.armour.legR\r\n\r\n          state.gear[name] = action.payload;\r\n        },\r\n        removeGear: (state, action: PayloadAction<IArmour>) =>  {\r\n            const { head, body, armL, armR, legL, legR, name } = action.payload;\r\n\r\n            state.armour.head = head ? 0 : state.armour.head\r\n            state.armour.body = body ? 0 : state.armour.body\r\n            state.armour.armL = armL ? 0 : state.armour.armL\r\n            state.armour.armR = armR ? 0 : state.armour.armR\r\n            state.armour.legL = legL ? 0 : state.armour.legL\r\n            state.armour.legR = legR ? 0 : state.armour.legR\r\n\r\n            delete state.gear[name]\r\n        },\r\n        setWeapon: (state, action: PayloadAction<IWeapon | ISpell>) => {\r\n            state.weapons[action.payload.name] = {...action.payload, count: 1};\r\n        },\r\n        removeWeapon: (state, action) => {\r\n            delete state.weapons[action.payload.name];\r\n        },\r\n        setWounds: (state, action: PayloadAction<number>) => {\r\n            state.character.currentWounds = action.payload\r\n        },\r\n        setMaxWounds: (state, action) => {\r\n            state.character.maxWounds = action.payload\r\n        },\r\n        importArmoury: (state, action: PayloadAction<IArmouryState>) => {\r\n            const { armour, gear, weapons, character  } = action.payload;\r\n            state.armour = armour;\r\n            state.gear = gear;\r\n            state.weapons = weapons;\r\n            state.character = character;\r\n        }\r\n    },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setGear, removeGear, setWeapon, removeWeapon, setWounds, setMaxWounds, importArmoury } = armourySlice.actions\r\nexport default armourySlice.reducer\r\n\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"./store\";\r\n\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport interface ICharacteristics {\r\n    name: string;\r\n    value: number;\r\n    short: string;\r\n    bonus: number;\r\n}\r\n\r\nexport interface ICharacteristicsState {\r\n    [short: string]: ICharacteristics\r\n}\r\n\r\nexport const characteristicsInitialState = {\r\n    'WS': { name: \"Weapon Skill\", value: 30, short: 'WS', bonus: 0  },\r\n    'BS': { name: \"Ballistic Skill\", value: 30, short: 'BS', bonus: 0 },\r\n    'S': { name: \"Strength\", value: 30, short: 'S', bonus: 0 },\r\n    'T': { name: \"Toughness\", value: 30, short: 'T', bonus: 0 },\r\n    'AG': { name: \"Agility\", value: 30, short: 'AG', bonus: 0 },\r\n    'INT': { name: \"Intelligence\", value: 30, short: 'INT', bonus: 0 },\r\n    'PER': { name: \"Perception\", value: 30, short: 'PER', bonus: 0 },\r\n    'WP': { name: \"Willpower\", value: 30, short: 'WP', bonus: 0 },\r\n    'FEL': { name: \"Fellowship\", value: 30, short: 'FEL', bonus: 0 },\r\n    'INF': { name: \"Infamy\", value: 30, short: 'INF', bonus: 0 },\r\n    'COR': { name: \"Corruption\", value: 0, short: 'COR', bonus: 0}\r\n} as ICharacteristicsState\r\n\r\n\r\nexport const characteristicsSlice = createSlice({\r\n    name: 'characteristics',\r\n    initialState: characteristicsInitialState,\r\n    reducers: {\r\n        increment: (state, action: PayloadAction<string>) => {\r\n            state[action.payload].value += 1\r\n        },\r\n        decrement: (state, action: PayloadAction<string>) => {\r\n            state[action.payload].value -= 1\r\n        },\r\n        incrementBonus: (state, action: PayloadAction<string>) => {\r\n            console.log(action.payload)\r\n            state[action.payload].bonus += 1\r\n        },\r\n        decrementBonus: (state, action: PayloadAction<string>) => {\r\n            state[action.payload].bonus > 0 ? state[action.payload].bonus -= 1 : state[action.payload].bonus = 0;\r\n        },\r\n        importCharacteristics: (state, action) => {\r\n            const characteristics = action.payload;\r\n            for (const stat in characteristics) {\r\n                state[stat] = characteristics[stat]\r\n            }\r\n        }\r\n    },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementBonus, decrementBonus, importCharacteristics } = characteristicsSlice.actions\r\nexport default characteristicsSlice.reducer\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { allTalents } from \"../character/resources\";\r\n\r\nexport interface ITalent {\r\n    name: string,\r\n    tier: number,\r\n    prerequisites?: string,\r\n    devotion?: EGods,\r\n    description?: string,\r\n    specialization?: string\r\n}\r\n\r\nexport enum EGods {\r\n    KHORNE = \"Khorne\",\r\n    NURGLE = \"Nurgle\",\r\n    SLAANESH = \"Slaanesh\",\r\n    TZEENTCH = \"Tzeentch\",\r\n    UNALIGNED = \"Unaligned\",\r\n    SPECIAL = \"Special\"\r\n}\r\n\r\nexport interface ITalentState {\r\n    [name: string]: ITalent\r\n}\r\n\r\nexport const talentsInitialState = {\r\n    'Total Recall': { name: \"Total Recall\", tier: 1, prerequisites: \"-\", description: \"The character can automatically remember trivial facts or pieces of information the character might feasibly have picked up in the past. When dealing with more detailed, complex or obscure facts, such as the exact layout of a defence network, the GM may require a successful Intelligence Test to recall the information.\" },\r\n} as ITalentState\r\n\r\nexport const talentSlice = createSlice({\r\n    name: 'skills',\r\n    initialState: talentsInitialState,\r\n    reducers: {\r\n        addTalent: (state, action: PayloadAction<ITalent>) => {\r\n            const talent = action.payload;\r\n            if (talent.name !== '') {\r\n                state[talent.name] = talent\r\n\r\n                if (!allTalents[talent.name]) {\r\n                    allTalents[talent.name] = talent;\r\n                }\r\n\r\n            }\r\n        },\r\n        removeTalent: (state, action) => {\r\n            delete state[action.payload.name];\r\n        },\r\n        importTalents: (state, action) => {\r\n            const talents = action.payload;\r\n            for (const name in talents) {\r\n                state[name] = talents[name];\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { addTalent, removeTalent, importTalents } = talentSlice.actions\r\nexport default talentSlice.reducer\r\n\r\n","export enum EItemCategory {\r\n    NONE = \"-\",\r\n    WEAPON = \"Weapon\",\r\n    ARMOUR = \"Armour\",\r\n    SPELL = \"Spells\",\r\n    MISC = \"Misc\",\r\n}\r\n","import { ISkillState } from \"../skills/skillSlice\";\r\nimport { IInventory } from \"../inventory/inventorySlice\";\r\nimport { EDamageType, ESpellType, EWeaponCategory, IArmour, ISpell, IWeapon, IWeaponState } from \"../armoury/armourySlice\";\r\nimport { EGods, ITalentState } from \"../talents/talentSlice\";\r\nimport { EItemCategory } from \"./EItemCategory\";\r\n\r\nexport const allSkills: ISkillState = {\r\n    'Acrobatics': { name: 'Acrobatics', level: 0, type: 'Ag', bonus: 0 },\r\n    'Athletics': { name: 'Athletics', level: 0, type: 'S', bonus: 0 },\r\n    'Awareness': { name: 'Awareness', level: 0, type: 'Per', bonus: 0 },\r\n    'Charm': { name: 'Charm', level: 0, type: 'Fel', bonus: 0 },\r\n    'Command': { name: 'Command', level: 0, type: 'Fel', bonus: 0 },\r\n    'Commerce': { name: 'Commerce', level: 0, type: 'Int', bonus: 0 },\r\n    'Common Lore': { name: 'Common Lore', level: 0, type: 'Int', bonus: 0 },\r\n    'Deceive': { name: 'Deceive', level: 0, type: 'Fel', bonus: 0 },\r\n    'Dodge': { name: 'Dodge', level: 0, type: 'Ag', bonus: 0 },\r\n    'Forbidden Lore': { name: 'Forbidden Lore', level: 0, type: 'Int', bonus: 0 },\r\n    'Interogate': { name: 'Interogate', level: 0, type: 'Fel', bonus: 0 },\r\n    'Inquiry': { name: 'Inquiry', level: 0, type: 'Fel', bonus: 0 },\r\n    'Intimidate': { name: 'Intimidate', level: 0, type: 'S', bonus: 0 },\r\n    'Linguistics': { name: 'Linguistics', level: 0, type: 'Int', bonus: 0 },\r\n    'Logic': { name: 'Logic', level: 0, type: 'Int', bonus: 0 },\r\n    'Medicae': { name: 'Medicae', level: 0, type: 'Int', bonus: 0 },\r\n    'Navigation (Surface)': { name: 'Navigation (Surface)', level: 0, type: 'Int', bonus: 0 },\r\n    'Navigation (Stellar)': { name: 'Navigation (Stellar)', level: 0, type: 'Int', bonus: 0 },\r\n    'Navigation (Warp)': { name: 'Navigation (Warp)', level: 0, type: 'Int', bonus: 0 },\r\n    'Operate (Aeronaut)': { name: 'Operate (Aeronaut)', level: 0, type: 'Ag', bonus: 0 },\r\n    'Operate (Surface)': { name: 'Operate (Surface)', level: 0, type: 'Ag', bonus: 0 },\r\n    'Operate (Voidship)': { name: 'Operate (Voidship)', level: 0, type: 'Ag', bonus: 0 },\r\n    'Parry': { name: 'Parry', level: 0, type: 'Ws', bonus: 0 },\r\n    'Psyniscience': { name: 'Psyniscience', level: 0, type: 'Per', bonus: 0 },\r\n    'Scholastic Lore': { name: 'Scholastic Lore', level: 0, type: 'Int', bonus: 0 },\r\n    'Scrutiny': { name: 'Scrutiny', level: 0, type: 'Per', bonus: 0 },\r\n    'Security': { name: 'Security', level: 0, type: 'Int', bonus: 0 },\r\n    'Sleight of Hand': { name: 'Sleight of Hand', level: 0, type: 'Ag', bonus: 0 },\r\n    'Stealth': { name: 'Stealth', level: 0, type: 'Ag', bonus: 0 },\r\n    'Tech-Use': { name: 'Tech-Use', level: 0, type: 'Int', bonus: 0 },\r\n    'Tracking': { name: 'Tracking', level: 0, type: 'Int', bonus: 0 },\r\n    'Trade': { name: 'Trade', level: 0, type: 'Ag', bonus: 0 },\r\n}\r\n\r\nexport const allTalents = {\r\n    'Air of Authority': { name: \"Air of Authority\", tier: 1, prerequisites: \"Fel 30\", devotion: EGods.SLAANESH, description: \"When making Command Skill Tests, the character may affect a number of targets equal to 10 times his Fellowship bonus. If the character has Minions (see page 135) they are also more devoted to him and add +10 to their Loyalty when in his presence. This talent has no effect on hostile targets, and only affects NPCs.\" },\r\n    'Ambidextrous': { name: \"Ambidextrous\", tier: 1, prerequisites: \"Ag 30\", devotion: EGods.UNALIGNED, description: \"The character may use either hand equally well for any task, and does not suffer the –20 penalty for actions using his off hand. Special: When combined with the Two-Weapon Wielder Talent, the penalty for making attacks with both weapons in the same Turn drops to –10.\" },\r\n    'Ancient Warrior': { name: \"Ancient Warrior\", tier: 1, devotion: EGods.UNALIGNED, description: \"This Talent must be taken at Character Creation. The character can command special respect from other veterans of the Long War and gains a +10 to all Fellowship Tests and Skill Tests based on Fellowship when dealing with such NPCs. In addition, Chaos Space Marine Minions of the character increase their loyalty by +10. Long War weaponry is also easier for him to obtain and all weapons with the word “Legion” in the title count as one Availability category easier than normal (i.e. Rare becomes Scarce, Scarce becomes Average, etc.). Finally, veterans of the Long War are despised by the Imperium and the Adeptus Astartes especially, and should the character’s past become known by these powers it is likely to end in blood…\" },\r\n    \"Armour-Monger\": { name: \"Armour-Monger\", tier: 2, prerequisites: \"Int 35, Tech Use, Trade (Armorer)\", devotion: EGods.UNALIGNED, description: \"The character increases the Armour Points of any armour he wears by 2 on all locations it would normally cover as long as he has at least an hour each day to clean and repair it or make minor modiﬁ cations. This bonus applies only to armour worn by the character as it combines his training as much as his skill at armoury.\" },\r\n    \"Arms Master\": { name: \"Arms Master\", tier: 3, prerequisites: \"WS 40, BS 40, Weapon Training (any two)\", devotion: EGods.UNALIGNED, description: \"When the Heretic uses a weapon he is untrained in, he only suffers a –10 penalty, rather than a –20. The only exceptions to the Arms Master Talent are exotic weapons, which are so unusual or rare that they always require their own weapon training Talents to use without penalty and gain no bonus when combined with this talent.\" },\r\n    \"Assassin Strike\": { name: \"Assassin Strike\", tier: 3, prerequisites: \"Ag 40, Acrobatics\", devotion: EGods.SLAANESH, description: \"After making a melee attack, a successful Acrobatics Skill Test allows the character to move at half rate as a Free Action. The character’s opponent does not receive a free attack resulting from this move. The character may only make this move once per round.\" },\r\n    \"Baleful Dirge\": { name: \"Baleful Dirge\", tier: 2, prerequisites: \"Disturbing Voice, Intimidate +10\", devotion: EGods.NURGLE, description: \"Singing the dirge takes some concentration and requires a Half Action each round to maintain. All creatures which can hear the character within a 30-metre radius must make a Willpower Test or suffer a –10 on their next roll. As long as the dirge is maintained, all those affected by it must test each turn to see if they suffer its effects. Once a creature passes a Willpower Test however, it has completely overcome the dirge and is not affected by it for the remainder of the encounter.\" },\r\n    \"Bastion of Iron Will\": { name: \"Bastion of Iron Will\", tier: 3, prerequisites: \"Psy Rating, Strong Minded, WP 40\", devotion: EGods.TZEENTCH, description: \"The character adds 5 x his Psy Rating on any Opposed Test involving defending against the Psyniscience Skill or Psychic Powers.\" },\r\n    \"Battle Rage\": { name: \"Battle Rage\", tier: 2, prerequisites: \"Frenzy\", devotion: EGods.KHORNE, description: \"The character may Parry while frenzied. In addition such is the character’s control he may reroll a failed roll to snap out of Frenzy or resist entering Frenzy if he so chooses.\" },\r\n    \"Berserk Charge\": { name: \"Berserk Charge\", tier: 1, devotion: EGods.KHORNE, description: \"If the character uses the Charge Action, he gains a +30 bonus to Weapon Skill instead of +20.\" },\r\n    \"Betrayer\": { name: \"Betrayer\", tier: 2, prerequisites: \"Cold Hearted, Intimidate\", devotion: EGods.UNALIGNED, description: \"Once per game session the character may kill either an allied NPC (i.e. an NPC which is openly friendly toward the PC and trusts him) or one of his own Minions. Such calculated cruelty boosts the Heretic’s reputation, granting him a +10 bonus on his next Infamy Test if the victim was an NPC and +20 if it was a Minion (and harder to replace). Killing NPCs and Minions usually has consequences as well which should be determined by the GM.\" },\r\n    \"Blade Dancer\": { name: \"Blade Dancer\", tier: 3, prerequisites: \"WS 40, Two-Weapon Wielder (Melee)\", devotion: EGods.UNALIGNED, description: \"When attacking with any bladed weapon, including chainswords, axes, and powerswords, the character may reroll one missed attack per round.\" },\r\n    \"Blademaster\": { name: \"Blademaster\", tier: 3, prerequisites: \"WS 30, Weapon Training (Any melee)\", devotion: EGods.KHORNE, description: \"When armed with two singled handed melee weapons with the Balanced Quality, the character reduces the penalties for Two-Weapon Fighting (see page 243) by 10 (so –20 would drop to –10). If taken with the Ambidextrous Talent, this drops the penalty to +0.\" },\r\n    \"Blasphemous Incantation\": { name: \"Blasphemous Incantation\", tier: 3, prerequisites: \"Psy Rating\", devotion: EGods.TZEENTCH, description: \"Using a power with an incantation increases the Focus Power Test by a Half Action, as the psyker requires a few moments to speak the required words. Powers for which the Focus Power Test takes a Reaction cannot be used with an invocation. Using a power with an invocation grants the psyker a +1 bonus to his Psy Rating, after determining Psychic Strength. This bonus to PR does not inﬂuence the Psychic Strength in any way; their beneﬁt is applied after determining whether a power is used at the Unfettered, Fettered or Push level. However, the psyker must add +20 to any roll on the Psychic Phenomena table. Finally, any result of 91 or higher on the Focus Power Test is an automatic failure that results in Perils of the Warp.\" },\r\n    \"Blind Fighting\": { name: \"Blind Fighting\", tier: 1, prerequisites: \"Per 30\", devotion: EGods.TZEENTCH, description: \"This talent reduces all penalties for ﬁghting with a melee weapon while suffering from obscured vision by half (rounded up), permitting the character to ﬁght in fog, smoke or darkness more effectively. See page 245 for a full list of attack penalties based on lighting and vision. Note this talent only improves a character’s chances to hit with melee weapons and has not effect on ranged weapon attacks.\" },\r\n    \"Blood God's Contempt\": { name: \"Blood God's Contempt\", tier: 3, prerequisites: \"Frenzy, WP 40\", devotion: EGods.KHORNE, description: \"The character spends the time before battle armouring himself against the power of the warp by cursing the names of sorcerers and showing his fearlessness before his feeble power and all those who wield the power of the warp. This talent may be used at any time by a character as long as he has at least an hour to perform his ritual of contempt (a player may say his character has already performed the ritual before play begins if the GM agrees). The character must also spend one Infamy Point. During the game session whenever the character is the subject of the effects of a psychic power, daemonic power or other warp based power, he may make a Willpower Test (make this test before any tests he would normally be permitted to resist the effects of the power). If the Willpower test is passed the character is unaffected by the psychic power. If the test is failed then the psychic power affects him as normal and he becomes Frenzied in addition to any other effects. The effects of this talent only apply to powers that directly affect the character (such as targeted powers or powers which catch him in their area of effect) and not powers which may harm him indirectly (such as attack from summoned daemons or falling or flung debris from a telekinetic). In addition, powers used by friendly psykers must also be resisted (and also cause Frenzy should he fail to resist them). A power that is resisted by a character using this talent is not nullified an others are affected by it as normal.\" },\r\n    \"Bolter Drill\": { name: \"Bolter Drill\", tier: 3, prerequisites: \"Weapon Training (Bolt), BS 40\", devotion: EGods.UNALIGNED, description: \"When ﬁring any class of Bolt weapon on full or semi-auto the character may score one additional Degree of Success (provided the Test is successful) if he does not take a Move Action in his turn.\" },\r\n    \"Bugling Biceps\t\": { name: \"Bugling Biceps\", tier: 2, prerequisites: \"S 45\", devotion: EGods.NURGLE, description: \"The character can ﬁre heavy weapons using Semi-Auto Burst or Full Auto Burst without bracing, and he does not suffer the -30 penalty for failing to brace. In addition whenever the character uses the Athletics Heft Special Skill Use (see page 96) he may add +20 to his Athletics Skill Test to reﬂect his massive muscles.\" },\r\n    \"Catfall\": { name: \"Catfall\", tier: 1, devotion: EGods.SLAANESH, description: \"The character automatically reduces the distance of all falls by a number of metres equal to his Agility Bonus, ignoring this distance as if it did not exist. In addition the character adds +20 to his Acrobatics Skill Tests when using the Jump Special Skill Use as it pertains to reducing Damage from falling.\" },\r\n    \"Child of the Warp\": { name: \"Child of the Warp\", tier: 2, prerequisites: \"Psy Rating\", devotion: EGods.UNALIGNED, description: \"This grants greater connection to the warp and increases the character’s Psy Rating by +1 when he chooses to Push . The downside, however, is that the warp is always partially manifest in his presence and he generates constant psychic phenomena. At the start of each game session the character should roll 1d10 on Table 4-4: Child of the Warp to determine the nature of these persistent effects which follow him for the duration of the session.\" },\r\n    \"Cold Hearted\": { name: \"Cold Hearted\", tier: 1, devotion: EGods.UNALIGNED, description: \"Seduction attempts against him automatically fail, and he gains a +20 to his Willpower when making Opposed Tests against an opponent using the Charm Skill. Taking this Talent gives the character one Corruption Point.\" },\r\n    \"Combat Formation\": { name: \"Combat Formation\", tier: 1, prerequisites: \"Int 40\", devotion: EGods.TZEENTCH, description: \"Before rolling initiative, all members of the group (including the character) add +1 to his Initiative Rolls. Any member of the group may also choose to use the Intelligence Bonus of the character for their initiative roll rather than their own Agility Bonus.\" },\r\n    \"Combat Master\": { name: \"Combat Master\", tier: 2, prerequisites: \"WS 30\", devotion: EGods.KHORNE, description: \"Opponents ﬁghting the character in hand-to-hand combat gain no bonuses for Ganging Up (see page 245).\" },\r\n    \"Combat Sense\": { name: \"Combat Sense\", tier: 1, prerequisites: \"Per 30\", devotion: EGods.UNALIGNED, description: \"The character may use his Perception Bonus in place of his Agility Bonus when rolling Initiative.\" },\r\n    \"Corpus Conversion\": { name: \"Corpus Conversion\", tier: 2, prerequisites: \"Psy Rating, Human\", devotion: EGods.NURGLE, description: \"A psyker with the Corpus Conversion Talent gains access to this Path to Power, and may elect to use it before he attempts his Focus Power Test. The psyker may gain a number of bonus Degrees of Success no greater than his Toughness Bonus on his Focus Power Test. However, for every Degree of Success gained in this way, the psyker suffers 1d10 Toughness Damage (note, this is not permanent Toughness Damage) and one Corruption Point as the energies of the warp poison his body from within. Traitor Legion characters may not beneﬁt from Corpus Conversion; the taint-resistant metabolism of the Astartes makes them incapable of burning away his ﬂesh to fuel warp-based powers.\" },\r\n    \"Counter Attack\": { name: \"Counter Attack\", tier: 2, prerequisites: \"WS 40\", devotion: EGods.UNALIGNED, description: \"After successfully parrying an opponent’s attack, the character may immediately make an attack against that opponent using the weapon with which he parried as a Free Action even though it is not his turn. This attack suffers a –20 penalty and may not be combined with any ability which allows more than one hit or attack such as Lighting Attack or Two-Weapon Fighting.\" },\r\n    \"Crack Shot\": { name: \"Crack Shot\", tier: 2, prerequisites: \"BS 50\", devotion: EGods.TZEENTCH, description: \"When the character’s ranged attack causes Critical Damage, add +2 to the Damage result.\" },\r\n    \"Crippling Strike\": { name: \"Crippling Strike\", tier: 2, prerequisites: \"WS 50\", devotion: EGods.SLAANESH, description: \"When the character’s melee attack causes Critical Damage add +2 to the Damage result.\" },\r\n    \"Crushing Blow\": { name: \"Crushing Blow\", tier: 3, prerequisites: \"WS 40\", devotion: EGods.KHORNE, description: \"The character adds half his Weapon Skill Bonus to Damage he inﬂicts in melee.\" },\r\n    \"Cursed Heirloom\": { name: \"Cursed Heirloom\", tier: 1, devotion: EGods.UNALIGNED, description: \"Passed down through the ages, the character has come into possession of an ancient ancestral heirloom. He must roll a 1d5 on the Cursed Heirloom Table for any weapon or armour giving it a permanent curse. He is now bonded to the item and even if it is lost, destroyed, or stolen it always somehow turns up in its original condition at the start of the next game session. Such items also usually come with a history of their own and the GM should feel free to have the item’s past come back to haunt the character from time to time\" },\r\n    \"Deadeye Shot\": { name: \"Deadeye Shot\", tier: 1, prerequisites: \"BS 30\", devotion: EGods.TZEENTCH, description: \"When making a Called Shot (see page 234) ranged attack, the character reduces the penalty by 10 (so a –20 becomes a –10 instead).\" },\r\n    \"Deflect Shot\": { name: \"Deflect Shot\", tier: 2, prerequisites: \"Ag 50\", devotion: EGods.UNALIGNED, description: \"When the character is armed with a readied melee weapon they add his Weapon Skill Bonus to his armour points on all locations (even unarmed locations) when calculating Damage from hits from ranged weapons with the Primitive Special Quality or Thrown weapons.\" },\r\n    \"Demagogue\": { name: \"Demagogue\", tier: 3, prerequisites: \"Inspire Wrath\", devotion: EGods.SLAANESH, description: \"When the character uses the Charm or Intimidate Skill to affect more than one person they may affect up to a 100 times his Fellowship Bonus. In addition such is the character’s natural magnetism and charisma that he adds +10 to the loyalty of all his Minions.\" },\r\n    \"Die Hard\": { name: \"Die Hard\", tier: 1, prerequisites: \"WP 40\", devotion: EGods.NURGLE, description: \"When he suffers from blood loss, he may roll twice to avoid death.\" },\r\n    \"Disarm\": { name: \"Disarm\", tier: 1, prerequisites: \"Ag 30\", devotion: EGods.UNALIGNED, description: \"If in close combat, the character may use a Full Action to disarm his foe by making an Opposed Weapon Skill Test. If the character wins the test, the enemy drops his weapon at his feet. Should the character obtain three or more Degrees of Success, he may take the enemy’s weapon from him.\" },\r\n    \"Disturbing Voice\": { name: \"Disturbing Voice\", tier: 1, devotion: EGods.NURGLE, description: \"The character gains a +10 bonus to all Intimidate Skill Tests, but suffers a –10 penalty to Fellowship Tests when dealing with others in a non-threatening manner, such as animals, children or the easily startled. In addition, the character is more adept at instilling fear in his followers and when using the Special Skill Use Terrify (see page 97), and adds +10 to his Command Skill Test to counter the effects of Fear.\" },\r\n    \"Double Team\": { name: \"Double Team\", tier: 1, devotion: EGods.UNALIGNED, description: \"When ganging up on an opponent, the character gains an additional +10 bonus to Weapon Skill Tests. If one or more of the other allies ganging up on the opponent have this Talent, both gain an additional +10 bonus, for a total of +20. This bonus is in addition to the normal bonus gained from Ganging Up on an opponent (see page 245).\" },\r\n    \"Electro Graft Use\": { name: \"Electro Graft Use\", tier: 1, prerequisites: \"Mechanicus Implants\", devotion: EGods.UNALIGNED, description: \"Grants and additional +10 to common lore, inquiry, or Tech-Use whilst connected to a data Port.\" },\r\n    \"Enemy\": { name: \"Enemy\", tier: 1, devotion: EGods.UNALIGNED, description: \"The character suffers an additional –10 multiplied X times penalty to Fellowship Tests when dealing with this group and the GM may use them to complicate his life from time to time. Unlike other talents this talent does not cost any experience points to purchase and cannot be taken as an advance.\" },\r\n    \"Excessive Wealth\": { name: \"Excessive Wealth\", tier: 1, prerequisites: \"Inf 40\", devotion: EGods.SLAANESH, description: \"The character gains a +10 bonus to his Infamy whenever he makes an Acquisition Test representing his increased ability to buy goods.\" },\r\n    \"Exotic Weapon Training\": { name: \"Exotic Weapon Training\", tier: 2, devotion: EGods.UNALIGNED, description: \"The character is trained to use a particularly obscure type of weapon, allowing him to use armaments few others have ever seen. Weapons requiring this unique talent are noted in their armoury descriptions. When a character attempts to use a weapon he does not have the correct Weapon Training Talent for, he suffers a –20 penalty to any relevant Weapon Skill or Ballistic Skill Test. Unlike other kinds of weapons training this talent applies only to a single weapon and not a class of weapons\" },\r\n    \"Eye of Vengeance\": { name: \"Eye of Vengeance\", tier: 3, prerequisites: \"BS 50\", devotion: EGods.TZEENTCH, description: \"Before making a Standard Attack ranged attack action, the character may spend an Infamy Point. If he does so, his attack deals +X Damage and gains +X Pen, where X equals the number of Degrees of Success scored on the attack roll.\" },\r\n    \"Favoured by the Warp\": { name: \"Favoured by the Warp\", tier: 3, prerequisites: \"WP 35\", devotion: EGods.TZEENTCH, description: \"Whenever a Power Roll results in Psychic Phenomena, the character may roll one additional time on that table and take the more favourable result. Perils of the Warp affect him as normal—such is the capacious nature of the gods that not even the “favoured” can avoid their gaze from time to time…\" },\r\n    \"Fearless\": { name: \"Fearless\", tier: 3, prerequisites: \"Nerves of Steel\", devotion: EGods.NURGLE, description: \"The character is immune to the effects of Fear and Pinning, but disengaging from combat or backing down from a ﬁght is difﬁcult for him to stomach and as such requires a successful Willpower Test.\" },\r\n    \"Ferric Summons\": { name: \"Ferric Summons\", tier: 1, prerequisites: \"Ferric Lure Implants\", devotion: EGods.UNALIGNED, description: \"The Heretic can call an unsecured metal object to his hand as with Ferric Lure Implants, but may summon objects of up to 2 kilograms per point of his Willpower Bonus and may summon objects up to 40 metres distant.\" },\r\n    \"Flesh Render\": { name: \"Flesh Render\", tier: 1, prerequisites: \"Weapon Training (Chain)\", devotion: EGods.KHORNE, description: \"When inﬂicting Damage with a melee weapon that has the Tearing Quality, the character rolls two additional die for Damage, rather than the normal one for using a Tearing weapon, and discards the lowest two Damage dice results.\" },\r\n    \"Foresight\": { name: \"Foresight\", tier: 2, prerequisites: \"Int 30\", devotion: EGods.TZEENTCH, description: \"By spending ten minutes studying or analysing a problem, the character gains a +10 bonus to his next Intelligence Test or a Skill Test based on Intelligence.\" },\r\n    \"Frenzy\": { name: \"Frenzy\", tier: 1, devotion: EGods.KHORNE, description: \"If the character spend one full round fuelling anger (through flagellation, drugs, or other means), next round go into an uncontrolled rage, gaining a +10 bonus to Weapon Skill, Strength, Toughness, and Willpower, but suffering a –20 penalty to Ballistic Skill, Intelligence and Fellowship. The character must attack the nearest enemy in melee combat if possible. While Frenzied, he is immune to Fear, Pinning, stunning effects, the effects of Fatigue, and he may not Parry, retreat, or flee. He remains Frenzied for the duration of the combat. Characters may not use psychic powers whilst in Frenzy. After combat ends, or if there are no more eligible targets for the character to attack he can make a Willpower Test to snap out of his Frenzy. If he fails he must continue to attack, favouring NPCs over PCs. Each successive round however he may make another Willpower Test, with a cumulative +10 Bonus to return to a stable state of mind and come out of Frenzy.\" },\r\n    \"Furious Assault\": { name: \"Furious Assault\", tier: 2, prerequisites: \"WS 35\", devotion: EGods.KHORNE, description: \"If the character successfully hits his target using the All Out Attack Action, he may spend his Reaction (and thus not being able to parry or dodge until his next turn) to make an additional attack using the same bonuses or penalties as the original attack.\" },\r\n    \"Greater Minion of Chaos\": { name: \"Greater Minion of Chaos\", tier: 3, prerequisites: \"Fel 55, Infamy 50\", devotion: EGods.UNALIGNED, description: \"Details on creating a Greater Minion can be found on page 135. This talent may be taken more than once, each time adding another Greater Minion to the character’s retinue.\" },\r\n    \"Gunslinger\": { name: \"Gunslinger\", tier: 3, prerequisites: \"BS 40, Two-Weapon Wielder (Ballistic)\", devotion: EGods.UNALIGNED, description: \"When armed with two pistol-class weapons, both of which he can use single-handedly, the character reduces the penalty for Two-Weapon Fighting by 10 (so –20 would drop to –10). If taken with the Ambidextrous Talent, this drops the penalty to +0.\" },\r\n    \"Hammer Blow\": { name: \"Hammer Blow\", tier: 3, prerequisites: \"Crushing Blow\", devotion: EGods.KHORNE, description: \"When the character makes an All Out Attack manoeuvre to make a single melee attack he may add half his Strength Bonus to the weapon’s Armour Penetration. The attack also counts as having the Concussive (2) Special Quality to represent the shocking force of the blow’s impact.\" },\r\n    \"Hard Target\": { name: \"Hard Target\", tier: 2, prerequisites: \"Ag 50\", devotion: EGods.SLAANESH, description: \"When the character performs a Charge or Run action, opponents suffer a –20 penalty to Ballistic Skill Tests made to hit the character with a ranged weapon. This penalty continues until the start of the character’s next turn.\" },\r\n    \"Hardy\": { name: \"Hardy\", tier: 2, prerequisites: \"T 40\", devotion: EGods.NURGLE, description: \"When undergoing medical treatment or healing from injures , the character always recovers Damage as if lightly wounded regardless of the level of Damage he has sustained.\" },\r\n    \"Hatred\": { name: \"Hatred\", tier: 2, devotion: EGods.KHORNE, description: \"A group, organisation or race has wronged the character in the past, fuelling this animosity. When fi ghting opponents of that group in close combat, the character gains a +10 bonus to all Weapon Skill Tests made against him. The character also finds it difficult to back down from a fight with his hated foe and must make a Willpower Test to retreat or surrender when fighting him unless massively outnumbered or outclassed\" },\r\n    \"Heightened Senses\": { name: \"Heightened Senses\", tier: 1, devotion: EGods.TZEENTCH, description: \"When the character gains this Talent, select one of the ﬁve senses: The character gains a +10 bonus to any tests speciﬁcally involving this sense. Thus, Heightened Senses (Sight) would apply to an Awareness Test to see a ﬂock of Shale Crows, but not to a Ballistic Skill Test simply because the character is using his eyes. This talent may be taken more than once, each time with a different specialisation.\" },\r\n    \"Hip Shooting\": { name: \"Hip Shooting\", tier: 2, prerequisites: \"BS 40, Ag 40\", devotion: EGods.UNALIGNED, description: \"As a Full Action, the character may both move up to his Full Move rate and make a single attack with a ranged weapon. This attack can only be a single shot and may not be a semi or full automatic ranged attack. Characters with the Two-Weapon Fighting talent may use this talent with Hip Shooting to make two single shots if he is armed with a ranged weapon in either hand.\" },\r\n    \"Hotshot Pilot\": { name: \"Hotshot Pilot\", tier: 2, prerequisites: \"Ag 40, Operate (any)\", devotion: EGods.UNALIGNED, description: \"The character counts as having all Operate Skills (essentially, he can drive or ﬂy anything) at Rank 1 (Known). If he wishs to later improve his Operate Skills they must be bought using experience points (from Rank 1) as normal. Such is his skill he also adds one Degree of Success to any successful Operate Tests.\" },\r\n    \"Independent Targeting\": { name: \"Independent Targeting\", tier: 2, prerequisites: \"BS 40\", devotion: EGods.UNALIGNED, description: \"When ﬁring two weapons as part of a single action (using the Two-Weapon Fighting talent), the targets need not be less than 10 metres apart.\" },\r\n    \"Infused Knowledge\": { name: \"Infused Knowledge\", tier: 3, prerequisites: \"Int 40, Lore (any)\", devotion: EGods.TZEENTCH, description: \"The character counts as having all Common Lore and Scholastic Lore (essentially, he knows something about everything) at Rank 1 (Known). If he wishes to later improve his Lore Skills they must be bought using experience points (from Rank 1) as normal. Such is his skill that he also adds one Degree of Success to any successful Common or Scholastic Lore Tests.\" },\r\n    \"Inspire Wrath\": { name: \"Inspire Wrath\", tier: 2, prerequisites: \"Air of Authority\", devotion: EGods.SLAANESH, description: \"As a Full Action, the character can make a Charm Test to grant the effects of the Hatred Talent to any people in his immediate vicinity. Success on the test grants the Hatred Talent to the listeners (with the object of hate chosen by the character) for the duration of an encounter. Listeners can resist the effects of the characters speech (and therefore not be burdened with his chosen hatred) by passing an Opposed Willpower Test against the character’s Charm Skill Test. Inspire Wrath affects up to 10 times the character’s Fellowship, which can be increased with the use of the Demagogue Talent as normal. Both players and GMs should bear in mind, however, that once a crowd has been inspired to hatred or mindless anger the effects can be unpredictable…\" },\r\n    \"Into the Jaws of Hell\": { name: \"Into the Jaws of Hell\", tier: 3, prerequisites: \"Iron Discipline, Fel 50\", devotion: EGods.SLAANESH, description: \"His followers become immune to the effects of Fear and Pinning as long as he is physically there to lead them and they can see him leading by example. Heretics cannot beneﬁt from the Into the Jaws of Hell of another Heretic.\" },\r\n    \"Iron Jaw\": { name: \"Iron Jaw\", tier: 1, prerequisites: \"T 40\", devotion: EGods.NURGLE, description: \"If ever Stunned, a successful Toughness Test allows the character to ignore the effects.\" },\r\n    \"Iron Discipline\": { name: \"Iron Discipline\", tier: 2, prerequisites: \"Fel 30\", devotion: EGods.SLAANESH, description: \"If the character is visible to his followers, either in person or via vox- or pict-caster, they may reroll failed Willpower Tests made to resist Fear and Pinning. Heretics cannot beneﬁt from the Iron Discipline of another Heretic.\" },\r\n    \"Jaded\": { name: \"Jaded\", tier: 1, prerequisites: \"WP 40\", devotion: EGods.NURGLE, description: \"Dead bodies, xenos creatures, and other terrifying but natural occurrences do not elicit Fear Tests. Terrors of the Warp still affect the character normally.\" },\r\n    \"Killing Strike\": { name: \"Killing Strike\", tier: 2, prerequisites: \"WS 50\", devotion: EGods.KHORNE, description: \"When making an All Out Attack, the character may spend one Infamy Point to choose to make that melee attack unavoidable with the Parry or Dodge Skills. Other means of stopping attacks (such as Shadow Fields or Displacement Fields) are unaffected.\" },\r\n    \"Leap Up\": { name: \"Leap Up\", tier: 1, prerequisites: \"Ag 30\", devotion: EGods.SLAANESH, description: \"The character may stand up as a Free Action\" },\r\n    \"Legion Weapon Training\": { name: \"Legion Weapon Training\", tier: 1, prerequisites: \"Chaos Space Marine\", devotion: EGods.UNALIGNED, description: \"Chaos Space Marines are proﬁcient with all weapons of the Bolt, Chain, Melta, Plasma, Power, Flame, Primary, Las, Solid Projectile, Thrown, and Launcher categories. In essence the only weapons that a Chaos Space Marine is not proﬁcient with are Exotic Weapons; for these he must acquire individual Talents as normal.\" },\r\n    \"Lesser Minion of Chaos\": { name: \"Lesser Minion of Chaos\", tier: 1, prerequisites: \"Fel 40\", devotion: EGods.UNALIGNED, description: \"Details on creating a Lesser Minion can be found on page 135. This Talent may be taken more than once, each time adding another Lesser Minion to the character’s retinue.\" },\r\n    \"Light Sleeper\": { name: \"Light Sleeper\", tier: 1, prerequisites: \"Per 30\", devotion: EGods.TZEENTCH, description: \"The character is always assumed to be awake, even when asleep, for the purposes of Awareness Tests or surprise. Unfortunately, the character’s sleep is not deep and can be frequently interrupted, resulting in a less-than-cheery disposition when awake.\" },\r\n    \"Lightning Attack\": { name: \"Lightning Attack\", tier: 3, prerequisites: \"Swift Attack\", devotion: EGods.KHORNE, description: \"A Heretic with this Talent may make the Lightning Attack Combat Action (see page 238).\" },\r\n    \"Lightning Reflexes\": { name: \"Lightning Reflexes\", tier: 1, devotion: EGods.SLAANESH, description: \"When making an Initiative Roll the character may roll twice and add the highest of the two dice result to his Agility Bonus.\" },\r\n    \"Lumimen Shock\": { name: \"Lumimen Shock\", tier: 2, prerequisites: \"Luminen Capacitors, Mechanicus Implants\", devotion: EGods.UNALIGNED, description: \"By making a successful melee attack (without penalties for being unarmed), the Heretic may deal 1d10 plus his Willpower Bonus in Energy Damage with Pen 2 and the Shocking Quality.\" },\r\n    \"Luminen Blast\": { name: \"Luminen Blast\", tier: 3, prerequisites: \"Luminen Shock\", devotion: EGods.UNALIGNED, description: \"The energies charged in the Heretic’s Luminen Capacitors can be expelled in a ranged attack with a Ballistic Skill Test directing this energy against a single target within 10 metres inﬂicting 1d10 plus twice the character’s Willpower Bonus in Energy Damage with Pen 2 and the Shocking and Blast (X) Quality. X equals any value between 1 and the Heretic’s Intelligence Bonus, chosen by the Heretic at the time of ﬁring. The attack uses a Half Action to accomplish (counting as a Single Attack Action) and the character must pass a Toughness Test when he uses this ability or gain a level of Fatigue.\" },\r\n    \"Maglev Transcendence\": { name: \"Maglev Transcendence\", tier: 2, prerequisites: \"Maglev Coils/Mechanicus Impants\", devotion: EGods.UNALIGNED, description: \"He may hover for a number of minutes equal to 1d10 plus twice his Toughness bonus. He may move his Run speed when making a Half Move Action, and suffers no Damage from falling if the Coils are active. Each use expends half the power stored in the coils (therefore he may use the Coils twice before recharging them).\" },\r\n    \"Marksman\": { name: \"Marksman\", tier: 2, prerequisites: \"BS 35\", devotion: EGods.UNALIGNED, description: \"Distance is no protection against the character’s marksmanship and he suffers no penalties for Ballistic Skill Tests at long or extended range.\" },\r\n    \"Master Chirurgeon\": { name: \"Master Chirurgeon\", tier: 3, prerequisites: \"Medicae +10\", devotion: EGods.NURGLE, description: \"The character gains a +10 bonus on all Medicae Skill Tests. Any successful heal attempt (including Heavily and Critically wounded patients) by the character heals 2 additional Wounds. If his patient is in danger of losing a limb from a Critical Hit (see Chapter VII: Combat), the character provides the patient with a +20 bonus to the Toughness Test to prevent limb loss.\" },\r\n    \"Master Engineer\": { name: \"Master Engineer\", tier: 3, prerequisites: \"Tech Use +20, Mechanicus Implants\", devotion: EGods.UNALIGNED, description: \"The character gains a +10 bonus on Tech-Use Skill Tests. The Heretic may spend an Infamy Point to automatically succeed on a Tech-Use Skill Test for enhancement, repair, or upgrade of a machine’s system, taking the minimum amount of time possible on the task. In addition at the GM’s discretion the character may repair objects without all the parts at hand, jury-rigging a working device as good as the original.\" },\r\n    \"Mastery\": { name: \"Mastery\", tier: 3, prerequisites: \"Rank 4 in selected Skill\", devotion: EGods.UNALIGNED, description: \"The character may spend an Infamy Point to automatically pass a Skill Test with his chosen skill provided the ﬁnal modiﬁer to his Skill Test is 0 or greater. In addition to simply passing the test the character passes it by a number of Degrees of Success equal to the Characteristic Bonus of its associated Characteristic. This Talent may be taken more than once, each time for a different Skill.\" },\r\n    \"Mechadendrite Use\": { name: \"Mechadendrite Use\", tier: 2, prerequisites: \"Mechanicus Implants\", devotion: EGods.UNALIGNED, description: \"The character is trained in the use of a particular kind of Mechendrite (Weapon or Utility) See gear/cybernetics.\" },\r\n    \"Meditation\": { name: \"Meditation\", tier: 1, devotion: EGods.TZEENTCH, description: \"10 minutes without interruption results in a success on a Willpower Test and removes one level of Fatigue.\" },\r\n    \"Mighty Shot\": { name: \"Mighty Shot\", tier: 3, prerequisites: \"BS 40\", devotion: EGods.NURGLE, description: \"The character adds half his Ballistic Skill Bonus to Damage the character inﬂict with a ranged weapon.\" },\r\n    \"Mimic\": { name: \"Mimic\", tier: 1, devotion: EGods.SLAANESH, description: \"The character must study the voice patterns of his intended target for at least one hour for proper imitation, and speak the same language. The character cannot accurately copy the voice of a xenos due to the difference in physiology and the subtle complexities of most alien languages. Listeners must pass a Scrutiny Skill Test with a –10 penalty to penetrate the deception. If the character’s study relied on vox recordings, or comm-link conversations rather than in-person observation, then there is no penalty to the Scrutiny Skill Test to see through it. The character’s deception automatically fails if the listener can clearly see him.\" },\r\n    \"Minion of Chaos\": { name: \"Minion of Chaos\", tier: 2, prerequisites: \"Fel 45, Infamy 30\", devotion: EGods.UNALIGNED, description: \"Details on creating a Minion can be found on page 135. This talent may be taken more than once, each time adding another Minion to the character’s retinue.\" },\r\n    \"Nerves of Steel\": { name: \"Nerves of Steel\", tier: 2, devotion: EGods.NURGLE, description: \"The character may reroll failed Willpower Tests to avoid or recover from Pinning. In addition is seldom impressed by the aggressive displays of his enemies and gains a +10 to Willpower Tests when resisting the effects of enemy Intimidation Skill attempts.\" },\r\n    \"Never Die\": { name: \"Never Die\", tier: 3, prerequisites: \"WP 50, T 50\", devotion: EGods.NURGLE, description: \"The character can spend one Infamy Point to ignore the effects of injury, Fatigue, and Stunning for a single combat. This talent does not prevent the Damage, but allows the character to temporarily ignore its effects for the duration of the combat. Death still affects him normally.\" },\r\n    \"Orthoproxy\": { name: \"Orthoproxy\", tier: 1, devotion: EGods.UNALIGNED, description: \"The character receives a +20 bonus to Willpower Tests made to resist mind control or interrogation. He tends not to get jokes, however.\" },\r\n    \"Paranoia\": { name: \"Paranoia\", tier: 2, devotion: EGods.TZEENTCH, description: \"The character gains a +2 bonus on Initiative rolls, and the GM may secretly test using the character’s Perception to notice hidden threats. The price of this eternal vigilance is a twitchy disposition and the inability to relax.\" },\r\n    \"Peer\": { name: \"Peer\", tier: 1, prerequisites: \"Fel 30\", devotion: EGods.UNALIGNED, description: \"The character knows how to deal with a particular social group or organisation. The character gains a +10 bonus to all Fellowship Tests when interacting with this chosen group and at the GM’s discretion my call upon them for favours from time to time.  In game terms, the bonus to Fellowship Tests increases to +10 times X, with X being the number of times the Talent has been awarded.\" },\r\n    \"Pity the Weak\": { name: \"Pity the Weak\", tier: 1, prerequisites: \"S 35, WP 35\", devotion: EGods.KHORNE, description: \"The character has nothing but contempt for those less powerful than himself and gains a +10 on Command, Commerce, Deception, and Intimidation Skill Tests when opposed by someone with either a Strength or Willpower Characteristic lower than themselves. Unfortunately, the character also has trouble hiding his contempt from such people and suffers a –10 to Charm Skill Tests when dealing the same people.\" },\r\n    \"Polyglot\": { name: \"Polyglot\", tier: 1, prerequisites: \"Int 40, Fel 30\", devotion: EGods.TZEENTCH, description: \"The character can make untrained Skill Tests with the Linguistics Skill even though it is a Specialist Skill. Being a Polyglot is not the same as having a true knowledge of a language, and characters must make a Linguistics Skill Test (along with the –20 modiﬁer for being untrained) to have more than the most basic conversations or exchanges of ideas.\" },\r\n    \"Precise Blow\": { name: \"Precise Blow\", tier: 2, prerequisites: \"WS 40, Sure Strike\", devotion: EGods.SLAANESH, description: \"When making a Called Shot (see page 234) melee attack, the character reduces the penalty by 10 (so a –20 becomes a –10 instead). If combined with Sure Strike, this reduces the penalty to 0.\" },\r\n    \"Preternatural Speed\": { name: \"Preternatural Speed\", tier: 3, prerequisites: \"WS 40, Ag 40\", devotion: EGods.SLAANESH, description: \"When making a Charge Move the character doubles his normal charge movement (i.e. a character with an AB of 3 has a charge movement of 9 metres, which is then doubled to 18 metres by the Preternatural Speed Talent).\" },\r\n    \"Prosanguine\": { name: \"Prosanguine\", tier: 2, prerequisites: \"Autosanguine\", devotion: EGods.NURGLE, description: \"He must spend 10 minutes in mediation and make a Tech-Use Test. If he succeeds, he heals 1d5 points of Damage plus one additional point of Damage for every two Degrees of Success. If he rolls a 96 or higher, he loses the ability to use his Black Blood implants or the Prosanguine Talent for one week.\" },\r\n    \"Psy Rating\": { name: \"Psy Rating\", tier: 3, prerequisites: \"Psyker\", devotion: EGods.UNALIGNED, description: \"Grants +1 Psy Rating to a maximum of 10\" },\r\n    \"Psychic Power\": { name: \"Psychic Power\", tier: 1, prerequisites: \"Psyker\", devotion: EGods.SPECIAL, description: \"Either through training or natural development, the character has learned an additional Psychic Power. This power must be selected from one of the powers presented in Chapter VI: Psychic Powers. The experience cost and requirements for psychic powers are not the same as other Talents (as detailed on page 77) and can instead be found in Chapter VI: Psychic Powers. Characters must have the Psyker trait to take this talent.\" },\r\n    \"Quick Draw\": { name: \"Quick Draw\", tier: 1, devotion: EGods.UNALIGNED, description: \"The character can draw and ready a weapon as a Free Action when the character is armed with a Pistol or Basic-class ranged weapon, or a melee weapon that can be wielded in one hand.\" },\r\n    \"Radiant Presence\": { name: \"Radiant Presence\", tier: 1, prerequisites: \"Fel\", devotion: EGods.SLAANESH, description: \"Everyone within 20 metres that can see the character feels a touch of euphoria just by being near him and suffer lessened effects from things that would upset of distress them. Those affected gain a +10 to Willpower Tests to resist Fear or against Intimidation attempts. This ability affects all those close to the character indiscriminately, though not the character himself.\" },\r\n    \"Rapid Reaction\": { name: \"Rapid Reaction\", tier: 2, prerequisites: \"Ag 40\", devotion: EGods.SLAANESH, description: \"When surprised or ambushed, a successful Agility Test allows the character to act normally.\" },\r\n    \"Rapid Reload\": { name: \"Rapid Reload\", tier: 1, devotion: EGods.SLAANESH, description: \"The character halves all reload times, rounding down. Thus, Half Action reload become a Free Action, a Full Action reload becomes a Half Action and so on.\" },\r\n    \"Raptor\": { name: \"Raptor\", tier: 1, prerequisites: \"Operate (Aeronautica)\", devotion: EGods.UNALIGNED, description: \"When the character makes a Charge Action using a Jump Pack his melee attack deals an extra d10 of Damage for every two Degrees of Success he scores on his Weapon Skill Test to a maximum of two extra d10.\" },\r\n    \"Resistance\": { name: \"Resistance\", tier: 1, devotion: EGods.NURGLE, description: \"Each time the character select this talent, choose one area of resistance. The character gains a +10 bonus when making tests to resist the effects of this group. The character’s GM may wish to approve certain choices or have them justified by the character’s past.\" },\r\n    \"Sacrifice\": { name: \"Sacrifice\", tier: 2, prerequisites: \"Psy Rating\", devotion: EGods.UNALIGNED, description: \"A psyker with the Sacriﬁce Talent may ritually prepare and slay a sacriﬁcial victim (which must be a human or intelligent xenos). It takes a Forbidden Lore (Warp) Skill Test, taking 2d5 minutes to prepare and anoint a bound and helpless sacrificial victim. Once prepared, it takes a Full Round action to slay the victim. In the subsequent turn, the psyker gains a +5 bonus to his Focus Power Test for every Degree of Success scored on Forbidden Lore (Warp) Skill Test. In addition, should any Psychic Phenomena or Perils of the Warp occur, the effects are focused through the dying victim. Any effects that would normally affect the psyker instead cause the body to burn to ash in a blaze of iridescent warp-flame, dealing 1d10 Energy Damage to anyone within three metres of the victim (gaining the Warp Weapon trait and increasing the area to a ﬁve-metre radius if it was caused by Perils of the Warp).\" },\r\n    \"Sharpshooter\": { name: \"Sharpshooter\", tier: 2, prerequisites: \"BS 40, Deadaye Shot\", devotion: EGods.UNALIGNED, description: \"When making a Called Shot (see page 234), the character reduces the penalty by 10 (so a –20 becomes a –10 instead). If combined with Deadeye shot, this reduces the penalty to 0.\" },\r\n    \"Sidearm\": { name: \"Sidearm\", tier: 3, prerequisites: \"WS 40, BS 40, Two-Weapon Wielder (Ballistic, Melee)\", devotion: EGods.UNALIGNED, description: \"When armed with a pistol and melee weapon in either hand (which the character could normally use single-handedly), the character reduces the penalty for Two-Weapon Fighting by 10 (so –20 would drop to –10). If taken with the Ambidextrous Talent, this drops the penalty to +0.\" },\r\n    \"Sound Constitution\": { name: \"Sound Constitution\", tier: 1, devotion: EGods.NURGLE, description: \"The character gains an additional Wound.  The character may purchase this Talent multiple times up to his Toughness Bonus.\" },\r\n    \"Sprint\": { name: \"Sprint\", tier: 3, devotion: EGods.SLAANESH, description: \"When taking a Full Move Action, the character can move an extra number of metres equal to his Agility Bonus. When taking the run action, the character may double his movement for one round. The character gains one level of Fatigue if he uses this Talent two turns in a row.\" },\r\n    \"Step Aside\": { name: \"Step Aside\", tier: 3, prerequisites: \"Ag 40, Dodge, Parry\", devotion: EGods.UNALIGNED, description: \"The character may make an additional Evasion attempt (either a dodge or a parry) once per round. In effect, this gives the character a second Reaction that may only be used for Dodge or Parry attempts, allowing two dodges, two parries or a dodge and a parry in a turn. However, the character may still only attempt a single dodge or parry against each individual attack.\" },\r\n    \"Storm of Iron\": { name: \"Storm of Iron\", tier: 2, prerequisites: \"BS 45, Weapon Training (any ranged)\", devotion: EGods.KHORNE, description: \"When the Heretic deals Damage to a Horde with a semi-auto burst, a full-auto burst, or a weapon with the Spray or Blast Qualities, the Heretic deals additional Damage to the Horde equal to half his Ballistic Skill Bonus. This additional Damage is applied once per attack, not once per hit.\" },\r\n    \"Street Fighting\": { name: \"Street Fighting\", tier: 1, prerequisites: \"WS 30\", devotion: EGods.KHORNE, description: \"When armed with a knife (powered, chain or otherwise), similar small weapon, or simply armed with his bare hands, he adds his Weapon Skill Bonus to any Critical Damage he inflicts.\" },\r\n    \"Strong Minded\": { name: \"Strong Minded\", tier: 2, prerequisites: \"WP 30, Resistance (Psychic Techniques)\", devotion: EGods.TZEENTCH, description: \"He may reroll failed Willpower Tests to resist any Psychic Powers that affect his mind. Psychic Powers that have a physical effect, such as Doombolt, are unaffected by this Talent.\" },\r\n    \"Sure Strike\": { name: \"Sure Strike\", tier: 1, prerequisites: \"WS 30\", devotion: EGods.SLAANESH, description: \"When making a Called Shot (see page 234) melee attack, the character reduces the penalty by 10 (so a – 20 becomes a –10 instead).\" },\r\n    \"Swift Attack\": { name: \"Swift Attack\", tier: 2, prerequisites: \"WS 30\", devotion: EGods.KHORNE, description: \"When a character makes a melee attack, he scores one hit on the initial Degree of Success on his Weapon Skill Test, plus one additional hit for every two additional Degrees of Success. Additional hits are counted as separate hits for all intents and purposes, roll their Damage separately and are reduced by Armour and Toughness as normal. Additional hits are made against the same body location as the original hit. When using Dodge or Parry against a Swift Attack then each Degree of Success scored with a Dodge or Parry Skill Test negates one hit from the Swift Attack. If a character is fi ghting with a weapon in either hand or benefits from a Talent or Power which allows him to make more than one attack in his turn only one of his attacks may be a Lightning Attack and have the chance of scoring additional hits. Melee weapons with the Unwieldy Special Quality cannot be used to make Lightning Attacks\" },\r\n    \"Takedown\": { name: \"Takedown\", tier: 1, devotion: EGods.UNALIGNED, description: \"As a Half Action or when making a Charge Attack the character may declare that he is attempting a takedown against an opponent in melee combat. He then roll to hit (using his Weapon Skill) as normal; using any modiﬁers for weapons and talents (or the +20 bonus from Charging). If the character hits and would have done at least one point of Damage (after reduction for Armour and Toughness) it is ignored, but the character’s opponent must make a Challenging (+0) Toughness Test or be stunned for 1 round and knocked prone. In addition, when performing a Stun Action, the character does not suffer a –20 penalty to his Weapon Skill.\" },\r\n    \"Target Selection\": { name: \"Target Selection\", tier: 3, prerequisites: \"BS 30\", devotion: EGods.UNALIGNED, description: \"The character may shoot into melee with no penalty. If he aims beforehand, he can avoid any chance of hitting friendly targets.\" },\r\n    \"Technical Knock\": { name: \"Technical Knock\", tier: 1, prerequisites: \"Int 30\", devotion: EGods.UNALIGNED, description: \"The character may un-jam any gun as a Half Action, but may only use this talent on one weapon per round. The character must touch the weapon (often quickly and violently) to make this talent work.\" },\r\n    \"Thunder Charge\": { name: \"Thunder Charge\", tier: 3, prerequisites: \"S 50\", devotion: EGods.KHORNE, description: \"When the character makes a Charge Action he can barrel through foes to get to his target. Make an Opposed Strength Test between the character and each foe in his way (i.e., each foe his charge would take him past or through). Those that fail are knocked to the ground. Once the character has tested to knock down those in his way, he may complete his Charge and make his attacks against his intended target.\" },\r\n    \"Total Recall\": { name: \"Total Recall\", tier: 1, prerequisites: \"Int 30\", devotion: EGods.TZEENTCH, description: \"The character can automatically remember trivial facts or pieces of information the character might feasibly have picked up in the past. When dealing with more detailed, complex or obscure facts, such as the exact layout of a defence network, the GM may require a successful Intelligence Test to recall the information.\" },\r\n    \"True Grit\": { name: \"True Grit\", tier: 3, prerequisites: \"T 40\", devotion: EGods.NURGLE, description: \"Whenever the character suffers Critical Damage (after reduction for Armour and Toughness) reduce the amount by his Toughness Bonus (to a minimum of 1).\" },\r\n    \"Two-Weapon Wielder\": { name: \"Two-Weapon Wielder\", tier: 2, devotion: EGods.UNALIGNED, description: \"Allows the character to use a weapon in each hand. This allow the character to attack twice in a round, once from each weapon. Both tests suffer a -20 penalty. Taken once for melee or range weapons. If both types are acquired he may fight with ine melee and one ranged weapon. \" },\r\n    \"Unarmed Master\": { name: \"Unarmed Master\", tier: 2, prerequisites: \"WS 45, Ag 40, Unarmed Warrior\", devotion: EGods.KHORNE, description: \"He counts as having the Deadly Natural Weapon Trait.\" },\r\n    \"Unarmed Warrior\": { name: \"Unarmed Warrior\", tier: 1, prerequisites: \"WS 35, Ag 35\", devotion: EGods.KHORNE, description: \"Due to extensive training in techniques of unarmed combat the character has gained the Natural Weapon Trait (see page 142) improving all his unarmed attacks from 1d5-3 to 1d10 Primitive (7) and meaning he counts as armed even when facing opponents with weapons while bare handed.\" },\r\n    \"Unholy Devotion\": { name: \"Unholy Devotion\", tier: 3, prerequisites: \"Minion of Chaos\", devotion: EGods.UNALIGNED, description: \"The character’s Minions are fanatically devoted to him and would gladly die in his name. Whenever the character would be hit by a ranged attack he can make an Agility Test for any of his Minions which are no further away from him than his Agility Bonus in metres. If he passes the test then they suffer the hit instead as they have thrown themselves in front of their master, and all the hits effects are worked out against the Minion.\" },\r\n    \"Unremarkable\": { name: \"Unremarkable\", tier: 1, devotion: EGods.SLAANESH, description: \"Any attempts to recall the character’s face or spot him in a crowd suffer a –20 penalty. In addition the character gains a +20 when using the Deceive Skill to either convince someone he has never seen or met him before or if he is trying to appear harmless and ordinary. Naturally this Talent doesn’t work if the character wears distinctive clothes or armour, or carries unique weaponry—a Chaos Space Marine hiding in a crowd of Imperial citizens is pretty easy to spot, especially since they are probably running screaming in all directions…\" },\r\n    \"Unshakable Will\": { name: \"Unshakable Will\", tier: 2, prerequisites: \"WP 35\", devotion: EGods.NURGLE, description: \"The character may reroll any failed Willpower Tests to avoid the effects of Fear.\" },\r\n    \"War Cry\": { name: \"War Cry\", tier: 3, prerequisites: \"S 50, WP 50, Disturbing Voice\", devotion: EGods.NURGLE, description: \"The character may declare at the start of any of his turns that he is making a war cry as a Free Action. All creatures within a 50-metre radius treat the character as if he had a Fear Rating of 1 provided they can hear him (though they do not need to be able to see him) until the start of his next turn. While screaming his bloodcurdling war cry, the character may not communicate in any other way. Making a war cry is taxing however and at the end of any encounter in which it is used (even if only for a single turn) the character suffers a level of Fatigue.\" },\r\n    \"Warp Conduit\": { name: \"Warp Conduit\", tier: 2, prerequisites: \"Psy Rating, Strong Minded, WP 50\", devotion: EGods.TZEENTCH, description: \"When Pushing (see page 207), the character may spend one Infamy Point to add 1d5 to his Psy Rating. Channelling such vast amounts of power is dangerous, however, and he must add +30 to any resultant Psychic Phenomenon rolls.\" },\r\n    \"Warp Lock\": { name: \"Warp Lock\", tier: 3, prerequisites: \"Psy Rating, Strong Minded, WP 50\", devotion: EGods.TZEENTCH, description: \"Once per game session the character may ignore a Psychic Phenomenon result he has rolled (including a result which would indicate rolling on the Perils of the Warp Table) completely negating its effects. Such rapid dislocation from the warp is stressful and traumatic to the character’s mind, however, and he suffers 1d5 Damage (not reduced by armour or Toughness) as a result, and may not make any Focus Power Tests or sustain other Psychic Powers until the beginning of his next Turn.\" },\r\n    \"Warp Sense\": { name: \"Warp Sense\", tier: 1, prerequisites: \"Psy Rating, Psyniscience, Per 30\", devotion: EGods.TZEENTCH, description: \"After gaining this talent, using the Psyniscience Skill requires a Free Action instead of a Half Action. In addition, the character can passively detect psychic effects and entities without the need to actively seek them out. Whenever the character could detect such warp signature or creature the GM may allow him to make a Psyniscience Skill Test to detect it, in the same way he might use Awareness to spot an ambush without knowing it is there.\" },\r\n    \"Weapon Training\": { name: \"Weapon Training\", tier: 1, devotion: EGods.UNALIGNED, description: \"The character can use all weapons with Class: Pistol, Basic, Heavy, Throwing, and Melee within the group he has selected with this talent. When a character attempts to use a weapon he does not have the correct Weapon Training Talent for, he suffers a –20 penalty to any relevant Weapon Skill or Ballistic Skill Test. This talent may be taken more than once, each time with a different specialisation.\" },\r\n    \"Weapon Tech\": { name: \"Weapon Tech\", tier: 1, prerequisites: \"Tech Use +10, Int 40\", devotion: EGods.UNALIGNED, description: \"Once per combat, the character can enhance his weapon increasing it ﬁrepower and deadliness. For one Round per combat Encounter, a weapon personally wielded by the character from the Melta, Plasma, Power, or Exotic category increases its Damage and Penetration by an amount equal to his Intelligence Bonus.\" },\r\n    \"Whirlwind of Death\": { name: \"Whirlwind of Death\", tier: 2, prerequisites: \"WS 40\", devotion: EGods.UNALIGNED, description: \"When attacking a Horde, the character deals additional Magnitude damage equal to half his Weapon Skill Bonus.\" },\r\n    \"Wisdom of the Ancients\": { name: \"Wisdom of the Ancients\", tier: 2, prerequisites: \"Int 40\", devotion: EGods.TZEENTCH, description: \"The character may spend an Infamy Point to get insight on a situation and ask the GM a question (which he should answer as helpfully as possible) about the immediate situation which his character faces. The question can be anything the character might legitimately know from stories he has heard or his own experience. For example, when raiding an Imperial cruiser the question might be “where are the Navigator’s quarters.”\" },\r\n\r\n    \"Amphibious\": {name: \"Amphibious\", tier: 0, description: \"The creature can breathe water as well as air and can stay underwater indefi nitely without the need to surface. If this trait is taken by a creature with the ability to breathe a substance other than air (i.e. water, ammonia, carbon-dioxide etc) then it can breathe air as well as its native atmosphere.\"},\r\n    \"Amorphous\": {name: \"Amorphous\", tier: 0, description: \"An amorphous creature which has a malleable form, capable of squeezing its body or expanding it. It can change size by one-step in either direction, though doing so does not change its speed. Creatures with this trait determine their movement rates using one-half their Agility Bonus rounded up. Amorphous creatures are often missing senses and so rely on the Unnatural Senses Trait to perceive their surroundings.\"},\r\n    \"Auto-Stabilised\": {name: \"Auto-Stabilised\", tier: 0, description: \"The creature always counts as braced when firing heavy weapons and therefore may fire a ranged weapon on full or semi-automatic without taking the Brace action first without suffering any penalties to hit.\"},\r\n    \"Bestial\": {name: \"Bestial\", tier: 0, description: \"A creature with this trait is animalistic, tending to behave instinctively rather than rationally. No matter how high its Intelligence score is, it is still bestial. A creature with this trait never needs to make a Survival Skill Test whilst in its natural habitat. Unless starving or desperate, a bestial creature must make a Willpower Test when frightened, startled or injured. On a failed test, the creature flees.\"},\r\n    \"Blind\": {name: \"Blind\", tier: 0, description: \"Blind creatures automatically fail all tests based on vision and automatically fail all Ballistic Skill Tests. Such creatures take a –30 penalty to Weapon Skill Tests and most other tests that ordinarily involve or are benefited by vision. Note that this Trait indicates not only that the creature cannot see but that it also has no other senses which would provide the same benefit as eyes. The Blind Fighting Talent reduces the penalties to Weapon Skill Tests as normal for Blind creatures, reducing it from –30 to –15.\"},\r\n    \"Brutal Charge\": {name: \"Brutal Charge\", tier: 0, description: \"A creature with this trait deals an extra (X) points of damage per attack when it charges in the same round.\"},\r\n    \"Burrower\": {name: \"Burrower\", tier: 0, description: \"A creature with this trait can move through solid objects by burrowing through them. The number in parenthesis (X) indicates its speed when burrowing. Such creatures can burrow through soil, rock, sand, and so on, though some (expressed in the creature entry) can burrow through metal. When a creature burrows, it leaves behind a tunnel. Creatures of one-size smaller than the creature that created the tunnel can enter these areas without impediment. There’s a 50% chance each round that the tunnel collapses behind the creature.\"},\r\n    \"Crawler\": {name: \"Crawler\", tier: 0, description: \"Worms, serpents, and similar creatures crawl and slither rather than walk. The base move for a creature with this trait is half their normal movement rate (round up) as determined by their Agility Bonus, but they do not take penalties for moving over difficult terrain.\"},\r\n    \"Daemonic\": {name: \"Daemonic\", tier: 0, description: \"Daemonic creatures are creatures of the warp, but can manifest in real space either through sheer strength of will, hunger, or occult rituals. Creatures with this trait increase their Toughness Bonus against all Damage by the number indicated in the parenthesis (X) in the same manner as an Unnatural Characteristic (see Unnatural Characteristics trait on page 144). The effects of this trait stack with the effects of the Unnatural Characteristic trait. This increase is negated by Damage inflicted by force weapons, psychic powers, holy attacks, or other creatures with this trait. Daemonic creatures are also immune to poison and disease. Creatures with the Daemonic trait also gain benefits when using Psychic Powers as detailed in Chapter VI: The Powers of the Warp.\"},\r\n    \"Dark-Sight\": {name: \"Dark-Sight\", tier: 0, description: \"A creature with this trait sees normally even in areas of total darkness, and never takes a penalty for fighting in areas of dim or no lighting.\"},\r\n    \"Fear\": {name: \"Fear\", tier: 0, description: \"A creature with this trait has an unnerving appearance. The fear of it always has an associated rating (1–4) to reflect just how awful the creature is to behold and is indicated by the number in parenthesis (X). The higher the Fear Rating the harder it is for others to resist going encounter, as shown on Table 4-7: Fear Ratings. When a character encounters a creature with this Trait, they must make a Willpower Test, modified by the severity of the creature’s trait. On a success, the character may act as normal. On a failure, the character must roll on Table 8-4: Shock (see page 277), adding +10 to the roll for every Degree of Failure by which the Willpower Test was failed.\"},\r\n    \"Flyer\": {name: \"Flyer\", tier: 0, description: \"A creature with this trait has the natural ability to fly, whether with broad leathery wings, strange Warp energies, or inflatable gas sacs. The number in parenthesis (X) indicates its speed when flying. This number replaces the creature’s Agility Bonus for movement Actions. For more details on flying, see Chapter I: Playing the Game.\"},\r\n    \"From Beyond\": {name: \"From Beyond\", tier: 0, description: \"The mind of a creature with this trait is beyond the petty frailties and precarious sanity of a mortal mind. It is immune to Fear, Pinning, Insanity Points, and psychic powers used to cloud, control, or delude its minds.\"},\r\n    \"Deadly Natural Weapons\": {name: \"Deadly Natural Weapons\", tier: 0, description: \"This creature’s natural attacks are powerful enough to crush plasteel or punch through armour. The creature gains all the benefits of the Natural Weapons Trait, except that its attacks no longer have the Primitive Special Quality.\"},\r\n    \"Hoverer\": {name: \"Hoverer\", tier: 0, description: \"Creatures with this trait have a limited capability for flight, flying no higher than two metres. The number in parenthesis (X) indicates its speed when hovering. This number replaces its Agility Bonus for purposes of calculating Movement. For more details on flying, see Chapter I: Playing the Game.\"},\r\n    \"Incorporeal\": {name: \"Incorporeal\", tier: 0, description: \"Incorporeal creatures are insubstantial and weightless, able to pass through solid objects such as walls and weapons. An incorporeal creature gains a +30 bonus on Stealth Tests due to their ability to merge with objects and the fact they make practically no sounds when they move. Incorporeal creatures gain the Hoverer (6) trait. An incorporeal creature is also immune to normal weapons—they simply pass through its body as if it wasn’t there. Daemons, psychic powers, warp creatures, other incorporeal creatures, and opponents armed with force weapons may all injure an incorporeal creature normally. An incorporeal creature can’t normally affect the mortal world, and thus can’t Damage non-incorporeal opponents unless it has a suitable special ability or Talent. Creatures with the Incorporeal trait can Damage other creatures with the Incorporeal trait normally. Certain devices can keep an incorporeal creature at bay, most notably the Gellar Field of a spaceship. Creatures with this trait cannot pass through such a field.\"},\r\n    \"Machine\": {name: \"Machine\", tier: 0, description: \"A creature with the Machine trait is fashioned from inorganic materials and is generally more rigorous then fleshy folks. Machines do not breathe, are immune to the effects of a vacuum, extremes of cold, any mind-influencing psychic effect, and their Armour Points apply toward fire Damage. Machines have a certain number of Armour Points (indicated by the number in parentheses). This armour stacks with worn armour, but not with the Natural Armour Trait.\"},\r\n    \"Multiple Arms\": {name: \"Multiple Arms\", tier: 0, description: \"This creature has more than one pair of arms. The exact number of arms is indicated in parenthesis (X), so a Genestealer with Multiple Arms (4) has four arms total. It gains a +10 bonus on Athletics Tests involving climbing and swimming. In addition, for each pair of arms it has—the Multiple Arms value divided by 2—it may make an additional attack as if wielding multiple melee weapons (the creature must either have natural weapons or actual melee weapons to wield for this to take effect). Note, that a creature still requires Two Weapon Wielder (Melee) to make multiple attacks in the same turn.\"},\r\n    \"Natural Armor\": {name: \"Natural Armor\", tier: 0, description: \"This creature has a naturally tough hide or an exoskeleton, affording it some protection against attacks. The number in parenthesis (X) indicates how many Armour Points the creature gains to all locations. This trait does not stack with armour. This armour stacks with worn armour, but not with the Machine Trait.\"},\r\n    \"Natural Weapons\": {name: \"Natural Weapons\", tier: 0, description: \"This creature has sharp claws, teeth, spines or some other natural weapon with which it can slice and dice its foes. It counts as being armed even when not wielding weapons. Its attacks deal 1d10 points of Damage plus its Strength Bonus. The creature may make attacks with its Natural Weapons using its Weapon Skill, though it cannot parry with its natural weapons, nor can it be disarmed—unless, of course its limbs are hacked off ! (In general, creatures with Natural Weapons are immune to the Power Field quality, as it’s assumed they have enough teeth, claws, or spines to ignore a few being removed.) Natural weapons have the Primitive (7) Special Quality, unless stated otherwise in the profile.\"},\r\n    \"Phase\": {name: \"Phase\", tier: 0, description: \"A creature with this trait can transform its body into an insubstantial state, passing ghost-like through solid objects or barriers of any sort. This trait functions exactly like the Incorporeal trait, except the creature may become solid or insubstantial by spending a Half Action. Phase carries additional limitations. A creature in a phased state cannot cross psychically charged barriers, holy wards, or energy fields designed to flux space or manipulate the warp, such as a Gellar Field or a Void Shield.\"},\r\n    \"Psyker\": {name: \"Psyker\", tier: 0, description: \"Whether due to unnatural influences, the study of forbidden lore, or simply sheer force of will, this individual is a Psyker, and can bend the Immaterium to his will. Though this Trait has no benefits on its own, it allows characters to purchase the Psyniscience Skill and the Psy Rating and Psychic Power Talents.\"},\r\n    \"Possession\": {name: \"Possession\", tier: 0, description: \"Certain spirit-beings and denizens of the warp have the ability to possess mortal bodies. This is a far more insidious and damaging process than most forms of mental control, or even the power of the strongest psykers to “wear” the bodies of others, as the very fabric of the assaulting warp being is merged with the victim’s living body on a fundamental level so as to allow it to remain in our reality. The mechanisms by which these possessions occur in the game are detailed below, although circumstance and the nature of the entity itself may vary. Note that Daemonhosts, being extraordinary powerful examples of deliberate, ritualistic possessions, designed to bind and control daemons in living vessels, are a special case and dealt with separately.\"},\r\n    \"Quadruped\": {name: \"Quadruped\", tier: 0, description: \"Quadrupeds are much quicker over a distance than their bipedal counterparts. There movement is double that normally indicated by their Agility Bonus (see page 39). This trait is intended to cover creatures with hind legs and forepaws. Creatures with more than four legs may gain this Trait as well increasing their movement as indicated above but adding an addition 2 to their final movement rate (after doubling) for each set of legs beyond the first two (i.e. +2 for 6 legs, +4 for 8 legs etc).\"},\r\n    \"Regeneration\": {name: \"Regeneration\", tier: 0, description: \"Creatures with this trait heal very quickly. Each round, at the start of its turn, the creature makes a Toughness Test to removes an amount of Damage indicated in the parenthesis after the trait. It loses this trait when slain.\"},\r\n    \"Size\": {name: \"Size\", tier: 0, description: \"Creatures come in one of ten different size categories, as shown on Table 4-8: Size. Size affects movement, how well the creature can hide and move undetected and how easy or hard it is to strike in combat. When calculating movement, apply the size modifier first, and then other modifiers from other Traits or Talents (such as Quadruped). For the purposes of comparison, a human is a Size (4) creature. Note, a creature’s movement cannot be reduced to less than 1.\"},\r\n    \"Sonar Sense\": {name: \"Sonar Sense\", tier: 0, description: \"A creature with this trait perceives its surroundings by emitting a frequency noise, allowing the creature to locate the position of any solid object within 30 metres. Other creatures within this 30 metre range, and that succeed on an Awareness Skill Test at -10, may detect the curious keening.\"},\r\n    \"Soul Bound\": {name: \"Soul Bound\", tier: 0, description: \"The soul of this creature is bound to a higher power or being, in return for a measure of protection. When this Trait is fi rst gained, the entity to which the soul is bound must be decided. Many Imperial psykers, especially Astropaths, are soul-bound to the Emperor, for example, whereas Chaos Sorcerers may be bound to one of the Ruinous Powers. A soul-bound psyker rolls an additional die when forced to roll on the Perils of the Warp table, discarding whichever one he chooses to get a more favourable result. (Essentially, he may replace either the ones die or the tens die with the extra die he rolls) Upon becoming soul-bound, a character must choose one of the following effects: 1d10 Insanity Points (this does not apply to Heretics, as they do not suffer Insanity), the permanent loss of their sight, permanent loss of 1d10 from one Characteristic, or a random mutation. In addition, a soul-bound character is permanently indebted to the entity, which undoubtedly entails all manner of other duties and consequences.\"},\r\n    \"Stampede\": {name: \"Stampede\", tier: 0, description: \"Whenever a creature with this trait fails a Willpower Test, it automatically stampedes, charging in a straight line forwards as far as possible, overrunning anything in its path until the source of danger has escaped or is crushed under hoof, taking Damage equal to the creature’s Natural Weapon Damage (or 1d5+SB I if it doesn’t have one). One stampeding creature automatically causes all other creatures within sight to stampede. The stampede lasts until the source of danger is no longer visible or for 1d10 minutes, whichever occurs last.\"},\r\n    \"Strange Physiology\": {name: \"Strange Physiology\", tier: 0, description: \"A creature with this Trait has an unusual, alien, or altogether bizarre anatomy. All hits count as Body hits and death results when damage equals or exceeds the creature’s Wounds.\"},\r\n    \"Sturdy\": {name: \"Sturdy\", tier: 0, description: \"Sturdy creatures are hard to move and thus gain a +20 bonus to tests made to resist grappling and uses of the Takedown Talent.\"},\r\n    \"Swarm\": {name: \"Swarm\", tier: 0, description: \"Too small to do much on their own, swarms overwhelm their opponents via sheer weight of numbers. A swarm is often a mass of Miniscule or Puny creatures. Any attack from a weapon that does not either have the Blast, Flame, Spray, or Scatter Qualities only inflicts half Damage. In most circumstances, a swarm creature cannot be Grappled, Knocked Down, or Pinned, and the swarm may “pour” through suitable small openings such as ducts, vents, and the like, but they may not Jump. The swarm is counted as being destroyed once all its Wounds are lost. The swarm’s attacks have a variable Penetration value (roll each time an attack lands), representing its ability to engulf their victims and attack vulnerable areas.\"},\r\n    \"The Stuff of Nightmares\": {name: \"The Stuff Of Nightmares\", tier: 0, description: \"Some warp entities are so terribly powerful the will perpetuating their bodies in our reality is almost impossible to break or disrupt. Such entities are completely immune to the effects of poisons, diseases, the need to breathe, most environmental hazards, bleeding, stunning. They also ignore any critical result other than one that would destroy them outright, unless it was caused by a psychic power, force weapon, or holy attack.\"},\r\n    \"Touched by the Fates\": {name: \"Touched by the Fates\", tier: 0, description: \"The creature or NPC has a number of Fate Points shown in parenthesis (X). It may use these Fate Points in exactly the same way as Player Characters and may even ‘burn’ a Fate Point to survive death and destruction at the GM’s discretion. The rules for Zealous Hatred also apply to this creature or NPC.\"},\r\n    \"Toxic\": {name: \"Toxic\", tier: 0, description: \"A creature with this trait is poisonous Some weapons rely on toxins and poisons to do their damage. Anyone that successfully deals damage to a Toxic creature must make a Toughness Test with a penalty equal to 10 times the number in parenthesis (X) or suffer 1d10 points of Damage (of the same type as the weapon which inflicted the hit) not reduced by armour or Toughness. For example a creature with Toxic (4) would impose a –40 on Toughness Tests. Some creatures may carry additional effects with their toxins or inflict more Damage as indicated in their individual descriptions.\"},\r\n    \"Undying\": {name: \"Undying\", tier: 0, description: \"This creature has a strange and ill understood physiology. It cannot be harmed by diseases, poisons, or toxic effects. It has no need to breathe and can survive unaided in a vacuum.\"},\r\n    \"Unnatural Characteristic\": {name: \"Unnatural Characteristic\", tier: 0, description: \"One or more of the creature’s Characteristics is unnatural. This is indicated by a number which is then added directly to the creature’s Characteristic Bonus. For example, a creature with a Strength of 41 normally has a 4 Strength Bonus. If the creature had Unnatural Characteristic Strength (3) then its Strength Bonus increases to 7 (4+3). A creature may have this Trait more than once. Each time, it is applied to a new Characteristic. In addition, whenever someone with an Unnatural Characteristic succeeds on a Test utilizing that Characteristic, they gain a number of bonus Degrees of Success equal to half of their Unnatural Characteristic.\"},\r\n    \"Unnatural Senses\": {name: \"Unnatural Senses\", tier: 0, description: \"The creature can perceive its surroundings using senses other than sight or hearing, using special organs, fine hairs, or some other disturbing trait to make itself aware of what’s around it. This trait always includes a range in metres indicated by the number in parenthesis (X)\"},\r\n    \"Warp Instability\": {name: \"Warp Instability\", tier: 0, description: \"Most warp-entities have a tenuous hold on our reality, often maintained only by horror and bloodshed, and may be disrupted if sufficient harm can be done to their manifested forms. If a creature with this trait takes Damage and does not deal Damage or Insanity Points on other creatures by the end of its next turn, it must make a Willpower Test. The creature takes 1d5 Damage for failure, plus 1 Damage for each Degree of Failure. This Damage cannot be prevented by any means including armour and Toughness. If this would deal Damage equal to or in excess of the creature’s Wounds, it is cast back into the warp.\"},\r\n    \"Warp Weapons\": {name: \"Warp Weapons\", tier: 0, description: \"Creatures with this trait have weapons that are partially insubstantial, able to ignore such mundane things as armour or cover. Natural weapons and attacks made by a creature with this trait ignore physical armour unless it is created from psychoactive materials or is somehow warded against the warp. Force fields still work against these attacks normally\"},\r\n} as ITalentState\r\n\r\n\r\nexport const allWeapons: IWeaponState = {\r\n    'Autopistol': { name: 'Autopistol', category: EItemCategory.WEAPON, count: 1, weaponCategory: EWeaponCategory.PISTOL, damage: '1d10+2', range: 30, rof: 's/-/6', clip: 18, rld: 'FULL', type: EDamageType.IMPACT, pen: 0, weight: 1.5 } as IWeapon,\r\n    \"Chaindagger\": { name: 'Chaindagger', category: EItemCategory.WEAPON, count: 1, weaponCategory: EWeaponCategory.CHAIN, damage: '1d10+1', range: 0, rof: '', clip: 0, rld: '', type: EDamageType.RENDING, pen: 0, weight: 1.5 } as IWeapon,\r\n    \"Splinter Rifle\": { name: \"Splinter Rifle\", category: EItemCategory.WEAPON, count: 1, damage: \"1d10+2\", clip: 200, range: 100, pen: 3, rof: \"s/3/5\", rld: \"FULL\", description: \"Toxic (4) - (-40 Thougness Test or 1d10 pure)\", weaponCategory: EWeaponCategory.PISTOL, type: EDamageType.LASER, weight: 0 } as IWeapon,\r\n\r\n\r\n//    SPELLS\r\n    \"Doombolt\" : { name: \"Doombolt\", category: EItemCategory.SPELL, count: 1, damage: \"1d10 + Psy Rating\", pen: 8, type: EDamageType.ENERGY, exp: 200, prerequisites: \"None\", action: \"Half\", focusPower: \"Challenging (+0) WP\", range: \"20m x Psy Rating\", sustained: false, subtype: [ESpellType.ATTACK, ESpellType.CONCENTRATION], description: \"Known by a variety of names, the Doombolt is a common destructive power utilised by a great many Chaos magos to strike down their foes. Formed from the coalesced spite and loathing of the Sorcerer, they are corrosive bolts of dark energy, raining down like black hail upon the enemy. As the Sorcerer conjures these bitter projectiles with clenched fi sts, he fi lls the air with the stench of brimstone and the booming roar of daemons for the brief moment of the power’s manifestation. Doombolt is a Psychic Barrage that deals 1d10+ Psy Rating Energy Damage with a Pen of 8.\" } as ISpell,\r\n    // \"Foul Cage\": {name: \"Foul Cage\",  }\r\n}\r\n\r\n\r\n\r\nexport const allArmour: {[name: string]: IArmour} = {\r\n    \"Light Carapace\": {\r\n        name: \"Light Carapace\",\r\n        count: 1,\r\n        category: EItemCategory.ARMOUR,\r\n        armL: 5,\r\n        legL: 5,\r\n        legR: 5,\r\n        armR: 5,\r\n        body: 5\r\n    },\r\n    \"Carapace Helm\": {\r\n        name: \"Carapace Helm\",\r\n        count: 1,\r\n        category: EItemCategory.ARMOUR,\r\n        head: 4\r\n    },\r\n}\r\n\r\nexport const allItems: IInventory = {\r\n    'Medipack': {\r\n        name: \"Medipack\",\r\n        count: 3,\r\n        category: EItemCategory.MISC,\r\n        description: \"Basic Medi-Pack kits will usually contain drugs and bandages to treat a variety of injuries and illnesses, such as cataplasm patches and contraseptics. More advanced models might include a diagnostic Cogitator with bio-scanner and probes to determine the patient's ailments. The most advanced types, available to the elite of the Imperium, can include cast sprays, tox wands, synthskin applicators and more.\"\r\n    },\r\n    'Data Slate': {\r\n        name: 'Data Slate',\r\n        count: 1,\r\n        category: EItemCategory.MISC,\r\n        description: 'Data Slate which can contain various informations.'\r\n    },\r\n    ...allWeapons,\r\n    ...allArmour,\r\n}\r\n\r\n\r\n\r\n","import { ISkill } from \"../skills/skillSlice\";\r\nimport { EDamageType, IWeapon } from \"../armoury/armourySlice\";\r\nimport { ICharacteristics } from \"../characteristics/characteristicsSlice\";\r\nimport { getHitLocation, reverseNumber } from \"../armoury/armoury\";\r\n\r\nenum ERollType {\r\n    NONE,\r\n    TEST,\r\n    STAT,\r\n    INIT,\r\n    DAMAGE\r\n}\r\n\r\nexport interface IRollResult {\r\n    rollType: ERollType,\r\n    rolls: number[],\r\n    rollSum: number,\r\n    amount: number,\r\n    limit: number,\r\n}\r\n\r\nexport interface IStatRoll extends IRollResult {\r\n    characteristics: ICharacteristics,\r\n    modifier: number,\r\n    result?: boolean,\r\n}\r\n\r\nexport interface ITestRoll extends IRollResult {\r\n    stat?: number,\r\n    level?: number,\r\n    sum?: number,\r\n    result?: boolean,\r\n}\r\n\r\nexport interface IDamageRoll extends IRollResult {\r\n    damage: number,\r\n    type: EDamageType,\r\n    pen: number,\r\n\r\n}\r\n\r\nexport interface IInitRoll extends IRollResult {\r\n    bonus: number,\r\n}\r\n\r\nexport function rollTestAndSendToDiscord(discordServer: string, username: string, characteristics: number, skill?: ISkill, amount: number = 1, limit: number = 100, bonus: number = 0): IRollResult {\r\n    const rollResult = rollTest(characteristics, amount, limit, bonus, skill);\r\n    const message = skill ? `tried ${skill.name} Test` : \"\"\r\n\r\n    sendMessage(discordServer, message, getEmbedsForRollType(rollResult), username);\r\n\r\n    return rollResult\r\n}\r\n\r\nexport function rollAndSendToDiscord(discordServer: string, username: string, amount: number = 1, limit: number = 100) {\r\n    const rollResult = roll(amount, limit);\r\n    sendMessage(discordServer, ` made custom roll`, getEmbedsForRollType(rollResult), username);\r\n    return rollResult;\r\n}\r\n\r\nexport function rollDamageAndSendToDiscord(discordServer: string, username: string, weapon: IWeapon): IRollResult {\r\n\r\n    // Damage Calc\r\n    const d = weapon.damage.split(\"d\")\r\n    const amount = parseInt(d[0]);\r\n    const limit = parseInt(d[1].split(\"+\")[0]);\r\n    const damage = parseInt(d[1].split(\"+\")[1]);\r\n\r\n    const rollResult: IDamageRoll = { ...roll(amount, limit), rollType: ERollType.DAMAGE, ...weapon, damage };\r\n\r\n    sendMessage(discordServer, `attacks with ${weapon.name} `, getEmbedsForRollType(rollResult), username);\r\n\r\n    return rollResult\r\n}\r\n\r\nexport function rollInitAndSendToDiscord(discordServer: string, username: string, bonus: number, amount: number = 1, limit: number = 100): IRollResult {\r\n    const rollResult: IInitRoll = { ...roll(amount, limit), rollType: ERollType.INIT, bonus };\r\n\r\n    sendMessage(discordServer, \"rolled Init\", getEmbedsForRollType(rollResult), username);\r\n\r\n    return rollResult\r\n}\r\n\r\nexport function rollStatAndSendToDiscord(discordServer: string, username: string, characteristics: ICharacteristics, modifier: number = 0, amount: number = 1, limit: number = 100): IRollResult {\r\n    const rollResult: IStatRoll = { ...roll(amount, limit), rollType: ERollType.STAT, characteristics, modifier };\r\n    rollResult.result = rollResult.rollSum < characteristics.value + rollResult.modifier;\r\n\r\n    sendMessage(discordServer, `rolled for ${characteristics.name}`, getEmbedsForRollType(rollResult), username);\r\n\r\n    return rollResult\r\n}\r\n\r\n\r\nfunction getEmbedsForRollType(roll: IRollResult) {\r\n    const colorCodeRed = 14159922;\r\n    const colorCodeGreen = 4113681;\r\n\r\n    switch (roll.rollType) {\r\n        case ERollType.NONE: {\r\n            const rollResult = roll\r\n            return [{\r\n                fields: [\r\n                    { name: \"Roll\", value: `${rollResult.amount}d${rollResult.limit}`, inline: true },\r\n                    { name: \"Results\", value: `${rollResult.rolls}`, inline: true },\r\n                    { name: \"Sum\", value: `${rollResult.rollSum}`, inline: true },\r\n                ]\r\n            }]\r\n        }\r\n        case ERollType.INIT: {\r\n            const rollResult = roll as IInitRoll\r\n            return [{\r\n                fields: [\r\n                    { name: \"Roll\", value: `${rollResult.amount}d${rollResult.limit}`, inline: true },\r\n                    { name: \"Roll\", value: `${rollResult.rolls}`, inline: true },\r\n                    {\r\n                        name: \"Sum\",\r\n                        value: `${rollResult.rollSum} ${rollResult.bonus < 0 ? rollResult.bonus : `+ ${rollResult.bonus}`} = **${rollResult.rollSum + rollResult.bonus}**`, inline: true},\r\n                ]\r\n            }]\r\n        }\r\n        case ERollType.TEST: {\r\n            const rollResult = roll as ITestRoll;\r\n            const r = rollResult.result ? '>' : '<';\r\n            return [\r\n                {\r\n                    color: rollResult.result ? colorCodeGreen : colorCodeRed,\r\n                    // description: JSON.stringify(rollResult),\r\n                    fields: [\r\n                        { name: \"Roll\", value: `${rollResult.amount}\r\n                        d${ rollResult.limit }`, inline: true },\r\n                        { name: \"Results\", value: `${rollResult.rolls}`, inline: true },\r\n                        { name: \"Sum\", value: `${rollResult.rollSum}`, inline: true },\r\n                        { name: \"Stat\", value: `${rollResult.stat}`, inline: true },\r\n                        { name: \"Level\", value: `${rollResult.level}`, inline: true },\r\n                        { name: \"Sum\", value: `${rollResult.sum}`, inline: true },\r\n                        {\r\n                            name: \"**Result**\",\r\n                            value: `${rollResult.sum} ${r} ${rollResult.rollSum} = ${rollResult.result ? '**SUCCESS**' : '**FAILURE**'}`\r\n                        },\r\n\r\n                    ],\r\n                },\r\n            ]\r\n        }\r\n        case ERollType.DAMAGE: {\r\n            const rollResult = roll as IDamageRoll\r\n            return [\r\n                {\r\n                    fields: [\r\n                        { name: \"Roll\", value: `${rollResult.amount}\r\n                        d${ rollResult.limit }`, inline: true },\r\n                        { name: \"Results\", value: `${rollResult.rolls}`, inline: true },\r\n                        { name: \"Damage\", value: `${rollResult.damage}`, inline: true },\r\n                        { name: \"Sum\", value: ` **${rollResult.rollSum + rollResult.damage}\r\n                        *\r\n                        *`, inline: true },\r\n                        { name: \"Pen\", value: `${rollResult.pen}`, inline: true },\r\n                        { name: \"Type\", value: `${EDamageType[rollResult.type]}`, inline: true },\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n        case ERollType.STAT: {\r\n            const rollResult = roll as IStatRoll\r\n            const r = rollResult.result ? '>' : '<';\r\n            return [{\r\n                color: rollResult.result ? colorCodeGreen : colorCodeRed,\r\n                fields: [\r\n                    { name: \"Roll\", value: `${rollResult.amount}\r\n                        d${ rollResult.limit }`, inline: true },\r\n                    { name: \"Sum\", value: `${rollResult.rollSum}`, inline: true },\r\n                    {\r\n                        name: \"Stat\",\r\n                        value: `${rollResult.characteristics.value} ${rollResult.modifier < 0 ? rollResult.modifier : `+${rollResult.modifier}`}`,\r\n                        inline: true\r\n                    },\r\n                    {\r\n                        name: \"**Result**\",\r\n                        value: `${rollResult.characteristics.value + rollResult.modifier} ${r} ${rollResult.rollSum} = ${rollResult.result ? '**HIT**' : '**MISSED**'}`\r\n                    },\r\n                    { name: \"Hit Location\", value: `${getHitLocation(rollResult.rollSum)}` },\r\n                ]\r\n            }]\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction sendMessage(discord: string, message: string, embeds: any, username?: string) {\r\n    fetch(discord,\r\n        {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n\r\n                username: username,\r\n                content: message,\r\n                embeds: embeds\r\n\r\n            })\r\n        });\r\n\r\n}\r\n\r\nexport function getRndInteger(min: number, max: number) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction roll(amount: number, limit: number): IRollResult {\r\n    const rollResult: ITestRoll = { rollType: ERollType.NONE, rolls: [], rollSum: 0, amount, limit };\r\n    for (let count = 0; count < rollResult.amount; count++) {\r\n        const roll = getRndInteger(0, rollResult.limit);\r\n        rollResult.rolls[count] = roll;\r\n        rollResult.rollSum += roll;\r\n    }\r\n    return rollResult\r\n}\r\n\r\n\r\nfunction rollTest(characteristics: number, amount: number, limit: number, bonus: number, skill?: ISkill): IRollResult {\r\n    const rollResult: ITestRoll = roll(amount, limit);\r\n    rollResult.rollType = ERollType.TEST\r\n\r\n    rollResult.stat = characteristics + bonus + (skill?.bonus ? skill?.bonus : 0);\r\n    rollResult.level = skill ? (skill.level === 0 ? -20 : (skill.level - 1) * 10) : 0\r\n    rollResult.sum = rollResult.level + rollResult.stat;\r\n    rollResult.result = rollResult.rollSum - rollResult.sum < 0\r\n\r\n    return rollResult\r\n}\r\n\r\n\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { allItems } from \"../character/resources\";\r\nimport { EWeaponCategory, EDamageType, IArmour, IWeapon } from \"../armoury/armourySlice\";\r\nimport { EItemCategory } from \"../character/EItemCategory\";\r\n\r\nexport interface IItem {\r\n    name: string,\r\n    count: number,\r\n    category: EItemCategory\r\n    description?: string\r\n}\r\n\r\nexport type TItem = IItem | IWeapon | IArmour;\r\n\r\nexport interface IInventory {\r\n    [name: string]: TItem\r\n}\r\n\r\nexport const itemsInitialState = {\r\n    'Data Slate': {\r\n        name: 'Data Slate',\r\n        count: 1,\r\n        category: EItemCategory.MISC,\r\n        description: 'Data Slate which can contain various informations.'\r\n    },\r\n    'Autopistol': {\r\n        name: 'Autopistol',\r\n        category: EItemCategory.WEAPON,\r\n        count: 1,\r\n        weaponCategory: EWeaponCategory.PISTOL,\r\n        damage: '1d10+2',\r\n        range: 30,\r\n        rof: 's/-/6',\r\n        clip: 18,\r\n        rld: 'FULL',\r\n        type: EDamageType.IMPACT,\r\n        pen: 0,\r\n        weight: 1.5\r\n    },\r\n    [`Chaindagger`]: {\r\n        name: 'Chaindagger',\r\n        category: EItemCategory.WEAPON,\r\n        count: 1,\r\n        weaponCategory: EWeaponCategory.CHAIN,\r\n        damage: '1d10+1',\r\n        range: 0,\r\n        rof: '',\r\n        clip: 0,\r\n        rld: '',\r\n        type: EDamageType.RENDING,\r\n        pen: 0,\r\n        weight: 1.5\r\n    },\r\n    ['DummyArmour']: {\r\n        name: 'DummyArmour',\r\n        count: 1,\r\n        category: EItemCategory.ARMOUR,\r\n        body: 95\r\n\r\n    }\r\n} as IInventory\r\n\r\nexport const inventorySlice = createSlice({\r\n    name: 'items',\r\n    initialState: itemsInitialState,\r\n    reducers: {\r\n        addItem: (state, action: PayloadAction<IItem>) => {\r\n            const { name } = action.payload;\r\n            const oldCount = state[name]?.count\r\n            state[name] = { ...action.payload, count: oldCount ? oldCount + 1 : 1 };\r\n        },\r\n        addItemByName: (state, action: PayloadAction<string>) => {\r\n            const itemname = action.payload;\r\n            if (state[itemname]) {\r\n                state[itemname].count++;\r\n            } else {\r\n                console.log(itemname)\r\n                console.log(allItems[itemname])\r\n                console.log()\r\n                const item = allItems[itemname];\r\n\r\n                item ? state[itemname] = item\r\n                    : state[itemname] = { name: itemname, count: 1, category: EItemCategory.NONE };\r\n            }\r\n        },\r\n        changeWeaponName: (state, action: PayloadAction<IWeapon & { oldName: string }>) => {\r\n            state[action.payload.name] = action.payload;\r\n            delete state[action.payload.oldName]\r\n        },\r\n        editWeapon: (state, action: PayloadAction<IWeapon>) => {\r\n            state[action.payload.name] = action.payload;\r\n        },\r\n        editArmour: (state, action: PayloadAction<IArmour>) => {\r\n            state[action.payload.name] = action.payload;\r\n        },\r\n        removeItem: (state, action: PayloadAction<TItem>) => {\r\n            const item = action.payload;\r\n            if (item.count === 1) {\r\n                delete state[item.name];\r\n            } else {\r\n                state[item.name].count--;\r\n            }\r\n        },\r\n        editDescription: (state, action: PayloadAction<IItem>) => {\r\n            const item = action.payload;\r\n            state[item.name].description = item.description\r\n        },\r\n        editCategory: (state, action: PayloadAction<IItem>) => {\r\n            const item = action.payload;\r\n            state[item.name].category = item.category\r\n        },\r\n        importInventory: (state, action) => {\r\n            const inventory = action.payload;\r\n            //clear existing\r\n            for(const item in state) {\r\n                delete state[item];\r\n            }\r\n            for (const name in inventory) {\r\n                state[name] = inventory[name];\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {\r\n    addItem,\r\n    addItemByName,\r\n    changeWeaponName,\r\n    editWeapon,\r\n    editArmour,\r\n    removeItem,\r\n    editDescription,\r\n    editCategory,\r\n    importInventory\r\n} = inventorySlice.actions\r\nexport default inventorySlice.reducer\r\n\r\n","import {\r\n    Badge,\r\n    Button,\r\n    Card,\r\n    Col,\r\n    Dropdown, DropdownButton,\r\n    FormControl,\r\n    InputGroup,\r\n    OverlayTrigger,\r\n    Row,\r\n    Tooltip\r\n} from \"react-bootstrap\";\r\nimport {\r\n    BiCrosshair,\r\n    BiQuestionMark, FaDiceD20,\r\n    GiAncientSword,\r\n    GiArrowScope, GiBulletImpacts,\r\n    GiChainsaw, GiElectric,\r\n    GiLaserPrecision,\r\n    GiMachineGunMagazine,\r\n    GiPistolGun,\r\n    GiReloadGunBarrel,\r\n    GiShieldImpact,\r\n    GiWeight,\r\n    IoMdCheckmarkCircle\r\n} from \"react-icons/all\";\r\nimport React, { useState } from \"react\";\r\nimport './weaponCard.scss';\r\nimport { EWeaponCategory, EDamageType, IWeapon, removeWeapon } from \"./armourySlice\";\r\nimport { addItem, editWeapon, changeWeaponName } from \"../inventory/inventorySlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\nimport { rollDamageAndSendToDiscord, rollStatAndSendToDiscord } from \"../character/Rolls\";\r\n\r\n\r\nexport const WeaponCard = ({ weapon, editMode = false }: { weapon: IWeapon, editMode?: boolean }) => {\r\n    const [newName, setNewName] = useState(weapon.name);\r\n\r\n    const weaponEquipped = useAppSelector(state => state.armoury.weapons[weapon.name]);\r\n    const character = useAppSelector(state => state.character);\r\n    const characteristics = useAppSelector(state => state.characteristics);\r\n    const [testModifier, setTestModifier] = useState(10);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n\r\n    function getJSXForWeaponCategory(cat: EWeaponCategory) {\r\n        switch (cat) {\r\n            case EWeaponCategory.SWORD:\r\n                return <GiAncientSword/>;\r\n            case EWeaponCategory.PISTOL:\r\n                return <GiPistolGun/>\r\n            case EWeaponCategory.CHAIN:\r\n                return <GiChainsaw/>\r\n        }\r\n        return <BiQuestionMark/>\r\n    }\r\n\r\n\r\n    function getJSXForWeaponType(weaponType: EDamageType) {\r\n        switch (weaponType) {\r\n            case EDamageType.IMPACT:\r\n                return <GiBulletImpacts/>\r\n            case EDamageType.RENDING:\r\n                return <GiChainsaw/>\r\n            case EDamageType.SCHOCK:\r\n                return <GiElectric/>\r\n            case EDamageType.LASER:\r\n                return <GiLaserPrecision/>\r\n\r\n        }\r\n\r\n        return <BiQuestionMark/>;\r\n    }\r\n\r\n    function getWeaponTypeDropdown() {\r\n        return <Dropdown>\r\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                {getJSXForWeaponCategory(weapon.weaponCategory)}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n                {Object.values(EWeaponCategory).map((value, index) => {\r\n                        // @ts-ignore\r\n                        const e = EWeaponCategory[index]\r\n                        return e ? <Dropdown.Item\r\n                            key={`category-dropdown-${e}`}\r\n                            onClick={() => {\r\n                                dispatch(editWeapon({ ...weapon, weaponCategory: index }))\r\n                            }}>{e}</Dropdown.Item> : null\r\n                    }\r\n                )}\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    }\r\n\r\n    function getWeightField(col = 2) {\r\n        return editMode ?\r\n            <Col md={col}> <GiWeight/> <FormControl size={\"sm\"}\r\n                                                    value={weapon.weight}\r\n                                                    placeholder={\"1\"}\r\n                                                    aria-label=\"Weight\"\r\n                                                    onChange={(event) => dispatch(editWeapon({\r\n                                                        ...weapon,\r\n                                                        weight: parseInt(event.target.value)\r\n                                                    }))}/> </Col>\r\n            : <Col md={col}> <GiWeight/> {weapon.weight} </Col>\r\n    }\r\n\r\n\r\n    function getDamageField() {\r\n        return editMode ?\r\n            <Col md={4}>\r\n                Damage\r\n                <FormControl size={\"sm\"}\r\n                             value={weapon.damage}\r\n                             placeholder={\"xd10+y\"}\r\n                             aria-label=\"Damage in Form xd10 + y\"\r\n                             onChange={(event) => dispatch(editWeapon({ ...weapon, damage: event.target.value }))}/>\r\n                <div>\r\n                    <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                           onClick={() => dispatch(editWeapon({\r\n                               ...weapon,\r\n                               pen: weapon.pen ? weapon.pen + 1 : 1\r\n                           }))}>+</Badge>\r\n                    <Badge pill={true} variant={\"secondary\"}> <GiShieldImpact/> {weapon.pen ? weapon.pen : 0} </Badge>\r\n                    <Badge variant={'danger'} style={{ cursor: 'pointer' }}\r\n                           onClick={() => dispatch(editWeapon({\r\n                               ...weapon,\r\n                               pen: weapon.pen ? Math.max(weapon.pen - 1, 0) : 0\r\n                           }))}>-</Badge>\r\n                </div>\r\n\r\n                <Dropdown>\r\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                        {getJSXForWeaponType(weapon.type)}\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                        {Object.values(EDamageType).map((value, index) => {\r\n                                // @ts-ignore\r\n                                const e = EDamageType[index]\r\n                                return e ? <Dropdown.Item\r\n                                    key={`category-dropdown-${e}`}\r\n                                    onClick={() => {\r\n                                        dispatch(editWeapon({ ...weapon, type: index }))\r\n                                    }}\r\n                                >{e}</Dropdown.Item> : null\r\n                            }\r\n                        )}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n            </Col>\r\n            : <Col md={4}>{weapon.damage} <Badge pill={true} variant={\"secondary\"}> <GiShieldImpact/> {weapon.pen}\r\n            </Badge> </Col>\r\n    }\r\n\r\n    function getRangeField() {\r\n        return editMode ?\r\n            <Col> <GiArrowScope/> Range<FormControl size={\"sm\"}\r\n                                                    placeholder={\"30\"}\r\n                                                    value={weapon.range}\r\n                                                    aria-label=\"Range in m\"\r\n                                                    onChange={(event) => dispatch(editWeapon({\r\n                                                        ...weapon,\r\n                                                        range: parseInt(event.target.value)\r\n                                                    }))}/>\r\n                Rate of Fire\r\n                <FormControl size={\"sm\"}\r\n                             value={weapon.rof}\r\n                             placeholder={\"s/-/6\"}\r\n                             aria-label=\"Rate of Fire\"\r\n                             onChange={(event) => dispatch(editWeapon({ ...weapon, rof: event.target.value }))}/>\r\n            </Col>\r\n            : <Col> <GiArrowScope/> {weapon.range}m - {weapon.rof} </Col>\r\n    }\r\n\r\n    function getMagazineField() {\r\n        return editMode ?\r\n            <Col> <GiMachineGunMagazine/> Magazine <FormControl size={\"sm\"}\r\n                                                                value={weapon.clip}\r\n                                                                placeholder={\"8\"}\r\n                                                                aria-label=\"Magazine\"\r\n                                                                onChange={(event) => dispatch(editWeapon({\r\n                                                                    ...weapon,\r\n                                                                    clip: parseInt(event.target.value)\r\n                                                                }))}/>\r\n                <GiReloadGunBarrel/> Reload <FormControl size={\"sm\"}\r\n                                                         value={weapon.rld}\r\n                                                         placeholder={\"FULL | HALF\"}\r\n                                                         aria-label=\"Magazine\"\r\n                                                         onChange={(event) => dispatch(editWeapon({\r\n                                                             ...weapon,\r\n                                                             rld: event.target.value\r\n                                                         }))}/>\r\n\r\n            </Col>\r\n            : <Col> <GiMachineGunMagazine/> {weapon.clip} <GiReloadGunBarrel/> {weapon.rld} </Col>\r\n    }\r\n\r\n    function getRemoveFromArmoury() {\r\n        return weaponEquipped ?\r\n            <Col md={1}>\r\n                <Badge variant={'danger'} style={{ cursor: 'pointer' }}\r\n                       onClick={() => {\r\n                           dispatch(removeWeapon(weapon));\r\n                           dispatch(addItem(weapon))\r\n                       }}>-\r\n                </Badge>\r\n            </Col> : <></>\r\n    }\r\n\r\n    function getNameField() {\r\n        return <Col>\r\n            <OverlayTrigger\r\n                key={`weaponCardTooltip-${weapon.name}`}\r\n                overlay={\r\n                    <Tooltip\r\n                        id={`tooltip-${weapon.name}`}>{weapon.description ? weapon.description : \"Add description\"}</Tooltip>\r\n                }>\r\n                {editMode ? <Row>\r\n                        {!isMeeleWeapon() ?\r\n                            <Col md={4}>\r\n                                {getWeaponTypeDropdown()}\r\n                            </Col>\r\n                            : <></>\r\n                        }\r\n                        <Col>\r\n                            {isMeeleWeapon() ? getWeaponTypeDropdown() : <></>}\r\n                            <InputGroup>\r\n                                <FormControl size={\"sm\"}\r\n                                             value={newName}\r\n                                             placeholder={\"Description\"}\r\n                                             aria-label=\"Description\"\r\n                                             onChange={(event) => setNewName(event.target.value)}/>\r\n                                <InputGroup.Append>\r\n                                    <Button size={\"sm\"}\r\n                                            placeholder={\"Name\"}\r\n                                            onClick={(event) => {\r\n                                                dispatch(changeWeaponName({\r\n                                                    ...weapon,\r\n                                                    name: newName,\r\n                                                    oldName: weapon.name\r\n                                                }))\r\n                                            }}>\r\n                                        <IoMdCheckmarkCircle cursor={\"pointer\"} color={\"white\"}/>\r\n                                    </Button>\r\n                                </InputGroup.Append>\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    <div>{getJSXForWeaponCategory(weapon.weaponCategory)} {getJSXForWeaponType(weapon.type)} {weapon.name}</div>\r\n                }\r\n\r\n            </OverlayTrigger>\r\n        </Col>\r\n    }\r\n\r\n    function getRollDice() {\r\n        const characteristic = isMeeleWeapon() ? characteristics[\"WS\"] : characteristics[\"BS\"];\r\n        const dropItems = [<Dropdown.Header key={`aim-header-${weapon.name}`}>Aim Modifier</Dropdown.Header>];\r\n\r\n        // dropItems.push();\r\n        for (let i = 60; i > -70; i-= 10) {\r\n            dropItems.push(<Dropdown.Item key={`${weapon.name}-modifier-${i}`} onClick={() => setTestModifier(i)} >{i}</Dropdown.Item>);\r\n        }\r\n\r\n        return <Row>\r\n            <Col>\r\n                <DropdownButton size=\"sm\" title={testModifier} variant={'secondary'}>\r\n                    {dropItems}\r\n                </DropdownButton>\r\n            </Col>\r\n            <Col>\r\n                <Button size=\"sm\" variant=\"light\" onClick={() => rollStatAndSendToDiscord(character.discordServer, character.characterName, characteristic, testModifier)}>\r\n                    <BiCrosshair style={{ cursor: \"pointer\" }}\r\n                    /> Aim\r\n                </Button>\r\n            </Col>\r\n            <Col>\r\n                <Button size=\"sm\" variant=\"light\" onClick={() => rollDamageAndSendToDiscord(character.discordServer, character.characterName, weapon)}>\r\n                    <FaDiceD20 color={\"darkred\"}\r\n                               style={{ cursor: \"pointer\" }}\r\n                    /> Damage\r\n                </Button>\r\n            </Col>\r\n        </Row>;\r\n    }\r\n\r\n    function isMeeleWeapon() {\r\n        return weapon.weaponCategory > EWeaponCategory._\r\n    }\r\n\r\n    function getWeaponCard() {\r\n        if (isMeeleWeapon()) {\r\n            return getWeaponCardMeele()\r\n        } else {\r\n            return getWeaponCardRange()\r\n        }\r\n    }\r\n\r\n    function getWeaponCardMeele() {\r\n        return <Card key={`weaponCard${weapon.name}`}>\r\n            <Card.Header>\r\n                <Row>\r\n                    {getNameField()}\r\n                    {getDamageField()}\r\n                    {getWeightField()}\r\n                    {getRemoveFromArmoury()}\r\n                </Row>\r\n            </Card.Header>\r\n            <Card.Body style={{padding: 10}}>\r\n                {getRollDice()}\r\n\r\n            </Card.Body>\r\n        </Card>;\r\n    }\r\n\r\n\r\n    function getWeaponCardRange() {\r\n        return <Card key={`weaponCard${weapon.name}`}>\r\n            <Card.Header>\r\n                <Row>\r\n                    {getNameField()}\r\n                    {getDamageField()}\r\n                    {getWeightField()}\r\n                    {getRemoveFromArmoury()}\r\n                </Row>\r\n            </Card.Header>\r\n            <Card.Body style={{padding: 5}}>\r\n                <Row>\r\n                    {getRangeField()}\r\n                    {getMagazineField()}\r\n                </Row>\r\n                {getRollDice()}\r\n            </Card.Body>\r\n        </Card>;\r\n    }\r\n\r\n    return getWeaponCard()\r\n\r\n}\r\n","import { Badge, Card, Col, Row } from \"react-bootstrap\";\r\nimport { ISpell } from \"./armourySlice\";\r\nimport { FcElectricity, GiArrowScope, GiShieldImpact, RiFocus3Line } from \"react-icons/all\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const SpellCard = ({ spell }: { spell: ISpell }) => {\r\n\r\n\r\n    return <Card>\r\n        <Card.Header>\r\n            <FcElectricity />{spell.name}\r\n        </Card.Header>\r\n        <Card.Body>\r\n            <Row>\r\n                <Col >{spell.damage} <Badge pill={true} variant={\"secondary\"}> <GiShieldImpact/> {spell.pen} </Badge> </Col>\r\n                <Col> <GiArrowScope/> {spell.range} </Col>\r\n                {/*<Col></Col>*/}\r\n            </Row>\r\n            <Row>\r\n                <Col><RiFocus3Line /> {spell.focusPower}</Col>\r\n                <Col>Sustained: {spell.sustained ? \"Yes\" : \"No\"}</Col>\r\n            </Row>\r\n\r\n        </Card.Body>\r\n    </Card>\r\n}\r\n","import { WeaponCard } from \"./weaponCard\";\r\nimport { Badge, Button, Card, Col, Dropdown, DropdownButton, FormControl, FormGroup, FormLabel, ProgressBar, Row } from \"react-bootstrap\";\r\nimport React, { useState } from \"react\";\r\nimport \"./armoury.scss\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\nimport { addItem } from \"../inventory/inventorySlice\";\r\nimport { ISpell, IWeapon, removeGear, setMaxWounds, setWounds } from \"./armourySlice\";\r\nimport { SpellCard } from \"./spellCard\";\r\nimport { BiTargetLock, FaDiceD20 } from \"react-icons/all\";\r\nimport { rollInitAndSendToDiscord } from \"../character/Rolls\";\r\nimport { EItemCategory } from \"../character/EItemCategory\";\r\n\r\nexport const Armoury = () => {\r\n\r\n    const imageHead = 'data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%20style%3D%22height%3A%20512px%3B%20width%3A%20512px%3B%22%3E%3Cpath%20d%3D%22M0%200h512v512H0z%22%20fill%3D%22%23000%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3Cg%20class%3D%22%22%20transform%3D%22translate(0%2C0)%22%20style%3D%22%22%3E%3Cpath%20d%3D%22M257.375%2032.03C139.957%2087.197%2042.343%20247.886%2017.5%20367.75c71.742%200%20124.22%2022.845%20162.094%2063.03l10.47-11.436c-28.06-28.873-64.935-52.446-113.564-75.906%2026.142-65.033%2066.028-163.458%20116.72-169.188%2019.835-2.243%2041.05%209.735%2064.155%2043.438%2072.33-120.27%20141.014%2038.54%20180.875%20125.75-47.687%2025.854-84.5%2049.463-112.97%2078.718l9.25%2010.406c37.335-39.758%2089.657-64.812%20162.72-64.812C467.784%20249.384%20377.24%2090.37%20257.375%2032.03zm-79.72%20243.314c-15.3-.083-26.405%206.436-26.405%2016.656%200%2012.58%2016.834%2026.038%2037.594%2030.063%2020.76%204.024%2037.594-2.92%2037.594-15.5s-16.835-26.038-37.594-30.063c-3.893-.755-7.657-1.137-11.188-1.156zm156.345%200c-3.53.02-7.295.4-11.188%201.156-20.76%204.025-37.593%2017.483-37.593%2030.063%200%2012.58%2016.833%2019.524%2037.592%2015.5%2020.76-4.025%2037.594-17.484%2037.594-30.063%200-10.22-11.105-16.74-26.406-16.656z%22%20fill%3D%22%23fff%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3C%2Fg%3E%3C%2Fsvg%3E';\r\n    const imageBody = 'data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%20style%3D%22height%3A%20512px%3B%20width%3A%20512px%3B%22%3E%3Cpath%20d%3D%22M0%200h512v512H0z%22%20fill%3D%22%23000%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3Cg%20class%3D%22%22%20transform%3D%22translate(-1%2C-7)%22%20style%3D%22%22%3E%3Cpath%20d%3D%22M208%2056.643l-16%2064-98.568%2014.082L256%20175.365l162.568-40.64L320%20120.643l-16-64-27.268%2018.18-12.002%2048.003h-17.46l-12.002-48.004zm-138.621%2090.62L16%20200.644l48%2064%2025.77-25.77%2026.619-79.857zm373.242%200l-47.01%2011.753%2026.62%2079.857L448%20264.643l48-64zm-308.717%2016.132l-20.123%2060.369%2013.81%2055.246L247%20345.348V191.67zm244.192%200L265%20191.67v153.678l119.408-66.338%2013.81-55.246zM144%20308.715v56.314l103%2030.627v-29.719zm224%200l-103%2057.223v29.718l103-30.627zm-224%2075.54v56.388l103%2014.714V414.88zm224%200L265%20414.88v40.478l103-14.714z%22%20fill%3D%22%23fff%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3C%2Fg%3E%3C%2Fsvg%3E';\r\n    const imageArmL = 'data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%20style%3D%22height%3A%20512px%3B%20width%3A%20512px%3B%22%3E%3Cpath%20d%3D%22M0%200h512v512H0z%22%20fill%3D%22%23000%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3Cg%20class%3D%22%22%20transform%3D%22translate(-1%2C-7)%22%20style%3D%22%22%3E%3Cpath%20d%3D%22M256%2026C192%2058%20112%2080%2032%2080c0%2046.047%204.726%2089.503%2013.02%20129.69%2025.495-2.558%2053.13-2.433%2081.86-1.06l-7.61-30.446-2.022-8.086%2065.898-21.967%2010.866%2065.194c28.32%202.336%2056.907%204.82%2084.9%206.238%2014.357-4.67%2028.073-8.33%2040.43-14.36l7.78-46.682%201.732-10.39%2065.898%2021.968-9.578%2038.316c9.207%204.926%2020.403%2014.91%2023.97%2022.346%203.352%207.302%202.696%2015.333.256%2024.154%202.27%206.21%202.31%2012.947.43%2019.287-1.65%205.57-4.95%2010.974-9.844%2014.974.41%2010.106-5.414%2019.52-14.597%2023.353-5.045%2010.42-15.085%2022.05-25.146%2025.678a35.325%2035.325%200%200%201-7.943%201.7l-10.29%2041.16-47.98-23.99%207.107-42.647c-7.178-2.867-14.753-6.176-23.147-9.758-22.506%202.868-45.05%205.7-67.385%208.213l7.366%2044.193-47.98%2023.99-15.668-62.668c-25.372%202.034-50.16%203.29-73.943%203.288C126.423%20426.23%20197.21%20490%20256%20490c96%200%20224-170%20224-410-80%200-160-22-224-54zm-87.146%20145.87l-30.102%2010.034%2043.258%20173.028%2016.02-8.008-29.176-175.055zm174.292%200l-3.927%2023.562c9.757-4.082%2021.374-8.826%2031.514-3.473l2.514-10.058-30.102-10.033zm17.692%2035.696c-5.508.754-15.244%204.655-25.35%209.72-18.843%2011.052-35.297%2013.47-53.963%2020.448-29.314-1.518-59.264-3.89-84.43-5.912l10.538%2063.23c25.773-2.928%2050.59-5.99%2072.93-8.845%208.035%203.372%2016.415%207.06%2023.603%2010.05l5.156-30.943-.492-16.046c31.396-.965%2040.955-17.8%2046.625-26.14%202.25-3.306%204.94-9.64%205.424-13.554.162-1.32.03-1.567-.042-2.008zm14.598%2016.305c-2.703%205.724-5.283%209.687-7.97%2014.567%207.198%203.907%2015.487%205.786%2025.923%206.215.426-2.995.116-4.813-.605-6.382-1.195-2.604-5.27-6.648-13.826-12.715-1.51-.91-2.674-1.404-3.524-1.684zm-284.63%202.026c-22.55-.09-43.69%201.063-62.732%204.256-10.604%2021.43-9.975%2044.448%201.57%2071.08%2036.332%203.616%2077.178%202.643%20120.223-.662l-18.35-73.406c-13.955-.738-27.575-1.215-40.71-1.268zm263.41%2025.303a71.374%2071.374%200%200%201-5.972%204.34c2.293%209.34%2010.7%2011.83%2019.822%2013.91%207.76%201.73%2016.358%202.576%2023.13%202.802a14.133%2014.133%200%200%200%201.376-3.166c.653-2.202.702-4.555.38-6.48-14.655-.713-27.626-4.258-38.737-11.407zm-21.835%2012.025a73.26%2073.26%200%200%201-4.694%201.41l-2.053%2012.32a25.18%2025.18%200%200%201%208.056-10.383%2031.58%2031.58%200%200%201-1.31-3.347zm12.872%2017.345c-1.468.894-2.713%202.34-3.195%203.817-.638%201.953-1.09%203.368%201.755%205.533%203.645%202.138%209.51%204.437%2015.745%205.613%205.123.967%2010.54%201.276%2014.804%201.205l2.876-.467c1.974-.318%204.624-3.515%204.752-6.553-5.69-.506-11.804-1.355-17.836-2.7-6.592-1.47-13.14-3.327-18.9-6.447zm-21.23%206.04l-10.05%2060.314%2016.018%208.008%204.72-18.88c-9.425-5.795-14.6-14.962-14.468-23.888.085-5.812%202.58-11.444%206.653-15.617-1.686-3.174-2.65-6.586-2.872-9.936zm15.933%2021.91c-1.2.71-1.687%202-1.715%203.908-.04%202.678%201.262%206.588%208.574%209.61.664.133%203.335.59%207.618-.87%202.824-.963%206.072-2.797%209.226-6.81a108.078%20108.078%200%200%201-7.44-1.137c-5.542-1.045-11.13-2.444-16.263-4.7z%22%20fill%3D%22%23fff%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3C%2Fg%3E%3C%2Fsvg%3E';\r\n    const imageArmR = 'data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%20style%3D%22height%3A%20512px%3B%20width%3A%20512px%3B%22%3E%3Cpath%20d%3D%22M0%200h512v512H0z%22%20fill%3D%22%23000%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3Cg%20class%3D%22%22%20transform%3D%22translate(0%2C-6)%22%20style%3D%22%22%3E%3Cpath%20d%3D%22M122.1%2017.52L186.6%20161l104.5-44.9-44.5-98.58h-51.1l35.8%2080.75-16.4%207.23-39-87.98zm265.2%2077.75L110.4%20215.2l12%2028.2%20278.1-119.8zm-69.7%2098.53l-23.9%2011.5c12.8%205.4%2026%2013.7%2038.3%2015.6%2018.1-13.1-4.9-30.5-14.4-27.1zm-60.7%2011.1l-36.2%2016.7c-11.9%2018.4-14.8%2046-18.2%2069.7%2020.6%2030.1%2030.5%2062.4%2039.5%2094%2017.9-3.7%2032.2-6.8%2048.7-11.5-24.4-38.7-42.2-78.4-53.6-118.9%200%200%205.6-10.5%208.4-15.8%2011.9%207.3%2024.9%2012.4%2036.6%209.9%2010-4.1%2021.5-7.9%2027.7-16.6-17.6-6.9-37.1-17.5-52.9-27.5zm92.6%2026.6c-10.8%205.8-23%2011.2-31.9%2018.9-5.3%204.7-12.1%208.8-20.5%2012.3%201.1%207.3-.1%2019.6%208.1%2018.8%2020.5-6.2%2040.5-15%2059.7-28.4-.1-9.2-8-24.1-15.4-21.6zm-90.2%2034.2c11.3%2034.8%2027.6%2069%2049.3%20102.6%204.7-1.6%209.3-3.3%2013.5-5-7.3-6.2-11.7-15.9-12-25.3-16.6-4.1-20.8-29.4-17.2-41.6-9.5-7-13.6-18.1-14.2-28.7-7.2.7-13.6-.1-19.4-2zm103.3%2010.4c-13.6%208.1-27.6%2014.3-41.6%2019.2l-9%204.4c-4.4%204.6-4.5%2015.6%201%2020.3%209.7%203.5%2050.1-21.2%2057.7-27.9%201.3-5.8-3.5-14.9-8.1-16zm-178.1%2021.2L19.1%20335.8V495c95.7-25.3%20146.9-47.1%20209.7-90.2-10.8-38-20.5-74.8-44.3-107.5zm187.8%2016.9c-13.6%2010.2-27.2%2016.2-42.9%2021.4-.4%206.7%202.5%2018.1%2012.1%2016%2019.9-4.3%2036.3-17.5%2036.6-24.6.2-3.7-2-10.5-5.8-12.8zm-7.5%2048.6c-14.3%208.2-31.5%2015.9-46.7%2021.4l18.7%2031.8%2039.3-18.8zm22.2%2049.1L342.9%20433l3.1%2021.9c15.1.5%2046.6-11.3%2055.4-26.1v-.1z%22%20fill%3D%22%23fff%22%20fill-opacity%3D%221%22%20transform%3D%22translate(512%2C%200)%20scale(-1%2C%201)%20rotate(0%2C%20256%2C%20256)%20skewX(0)%20skewY(0)%22%3E%3C%2Fpath%3E%3C%2Fg%3E%3C%2Fsvg%3E';\r\n    const imageLegR = 'data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%20style%3D%22height%3A%20512px%3B%20width%3A%20512px%3B%22%3E%3Cpath%20d%3D%22M0%200h512v512H0z%22%20fill%3D%22%23000%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3Cg%20class%3D%22%22%20transform%3D%22translate(0%2C0)%22%20style%3D%22%22%3E%3Cpath%20d%3D%22M269%2023.95l-87.7.1c1.1%2061.4-2.4%20116.05-14%20159.45-9%2034-23.6%2061.6-45.2%2079-.1%209.5-.8%2019-2.1%2028.6-3.1%2022.9-13.5%2043.2-22.75%2065%2023.55-1.3%2043.55-11.6%2065.35-24.8%2020.6-12.5%2042.4-27.5%2068.9-37.8-.2-1.4-.4-2.9-.4-4.2-1.9-23.7.1-52.2%204.1-83.2C243%20147.6%20257.9%2081.05%20269%2023.95zm-105.7.1H80.65c-1.6%2036.5%2010.1%2076.15%2021.65%20119.15%208.3%2030.4%2016.5%2062.3%2019%2095.7%2012.6-14.3%2021.8-34.4%2028.6-60%2010.8-40.6%2014.4-94.15%2013.4-154.85zm41.8%2014.9a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm-2.4%2052.5a9%209%200%200%201%20.1%200%209%209%200%200%201%209%208.95%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-8.95zm-5.9%2056.25a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm-16%2060.6a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm-32%2048.1a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm85.7%2055.3c-22.6%209.6-42.3%2022.9-62.6%2035-24.6%2014.9-50.5%2027.9-81.85%2027.5-8.2%2022.7-13.8%2048-10%2079.9h82.35c13.2-41.4%2042.9-78%2095.1-106.8-1.4-1-2.9-2.1-4.3-3.2-9.6-7.6-15.3-18.8-18.7-32.4zm40.2%2046.7c-52.1%2026.2-80.4%2058.5-93.6%2095.7h127.4c0-14.3.6-29%203.9-43.6%202.6-11.5%207-22.9%2014-33.9-16.1-3.3-33.5-8.1-51.7-18.2zm70.8%2021.8c-8.2%2010.9-12.8%2022.3-15.5%2034.3-2.8%2012.5-3.5%2025.8-3.5%2039.6h104c-2-17.8-12.5-39.8-28.1-52.1-17.8-13.9-36-17.9-56.9-21.8zm8.3%2010.5a9%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%209-9zm-254.05%2035a9%209%200%200%201%20.1%200%209%209%200%200%201%208.95%209%209%209%200%200%201-8.95%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm44.85.6a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm201.5.1a9%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%209-9zM72.05%20470v18.1H440V470z%22%20fill%3D%22%23fff%22%20fill-opacity%3D%221%22%20transform%3D%22translate(512%2C%200)%20scale(-1%2C%201)%20rotate(0%2C%20256%2C%20256)%20skewX(0)%20skewY(0)%22%3E%3C%2Fpath%3E%3C%2Fg%3E%3C%2Fsvg%3E';\r\n    const imageLegL = 'data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%20style%3D%22height%3A%20512px%3B%20width%3A%20512px%3B%22%3E%3Cpath%20d%3D%22M0%200h512v512H0z%22%20fill%3D%22%23000%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3Cg%20class%3D%22%22%20transform%3D%22translate(0%2C0)%22%20style%3D%22%22%3E%3Cpath%20d%3D%22M269%2023.95l-87.7.1c1.1%2061.4-2.4%20116.05-14%20159.45-9%2034-23.6%2061.6-45.2%2079-.1%209.5-.8%2019-2.1%2028.6-3.1%2022.9-13.5%2043.2-22.75%2065%2023.55-1.3%2043.55-11.6%2065.35-24.8%2020.6-12.5%2042.4-27.5%2068.9-37.8-.2-1.4-.4-2.9-.4-4.2-1.9-23.7.1-52.2%204.1-83.2C243%20147.6%20257.9%2081.05%20269%2023.95zm-105.7.1H80.65c-1.6%2036.5%2010.1%2076.15%2021.65%20119.15%208.3%2030.4%2016.5%2062.3%2019%2095.7%2012.6-14.3%2021.8-34.4%2028.6-60%2010.8-40.6%2014.4-94.15%2013.4-154.85zm41.8%2014.9a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm-2.4%2052.5a9%209%200%200%201%20.1%200%209%209%200%200%201%209%208.95%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-8.95zm-5.9%2056.25a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm-16%2060.6a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm-32%2048.1a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm85.7%2055.3c-22.6%209.6-42.3%2022.9-62.6%2035-24.6%2014.9-50.5%2027.9-81.85%2027.5-8.2%2022.7-13.8%2048-10%2079.9h82.35c13.2-41.4%2042.9-78%2095.1-106.8-1.4-1-2.9-2.1-4.3-3.2-9.6-7.6-15.3-18.8-18.7-32.4zm40.2%2046.7c-52.1%2026.2-80.4%2058.5-93.6%2095.7h127.4c0-14.3.6-29%203.9-43.6%202.6-11.5%207-22.9%2014-33.9-16.1-3.3-33.5-8.1-51.7-18.2zm70.8%2021.8c-8.2%2010.9-12.8%2022.3-15.5%2034.3-2.8%2012.5-3.5%2025.8-3.5%2039.6h104c-2-17.8-12.5-39.8-28.1-52.1-17.8-13.9-36-17.9-56.9-21.8zm8.3%2010.5a9%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%209-9zm-254.05%2035a9%209%200%200%201%20.1%200%209%209%200%200%201%208.95%209%209%209%200%200%201-8.95%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm44.85.6a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm201.5.1a9%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%209-9zM72.05%20470v18.1H440V470z%22%20fill%3D%22%23fff%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3C%2Fg%3E%3C%2Fsvg%3E';\r\n\r\n    const infamyStat = useAppSelector(state => state.characteristics['INF']);\r\n    const toughnessStat = useAppSelector(state => state.characteristics[\"T\"]);\r\n    const agilityStat = useAppSelector(state => state.characteristics[\"AG\"]);\r\n    const armouryState = useAppSelector(state => state.armoury);\r\n    const character = useAppSelector(state => state.character);\r\n    const dispatch = useAppDispatch()\r\n\r\n    const [agilityBonus, setAgilityBonus] = useState(2);\r\n\r\n    const agility = Math.floor(agilityStat.value / 10 + agilityStat.bonus + agilityBonus);\r\n    const armour = armouryState.armour;\r\n    const maxHealth = armouryState.character.maxWounds;\r\n    const maxInfamy: number = Math.floor(infamyStat.value / 10 + infamyStat.bonus);\r\n    const maxFatigue: number = Math.floor(toughnessStat.value / 10 + toughnessStat.bonus);\r\n\r\n    const [infamy, setInfamy] = useState(maxInfamy);\r\n    const [fatigue, setFatigue] = useState(0);\r\n    const [showTarget, setShowTarget] = useState(true);\r\n    const [maxWoundsEditable, setMaxWoundsEditable] = useState(false)\r\n\r\n    const health = armouryState.character.currentWounds;\r\n\r\n    function calcWoundLabel() {\r\n        const heavilyWounded = (health > (toughnessStat.value / 10 + toughnessStat.bonus) * 2) ? \"Heavy Wounded - \" : \"\";\r\n        return `${heavilyWounded}${health > maxHealth ? `CRIT: ${health - maxHealth}` : `${health}/${maxHealth}`}`;\r\n    }\r\n\r\n    const dropItems = [<Dropdown.Header key={`init-modifier-header`}>Init Modifier</Dropdown.Header>];\r\n    for (let i = 10; i > -10; i -= 1) {\r\n        dropItems.push(<Dropdown.Item key={`init-modifier-${i}`} onClick={() => setAgilityBonus(i)}>{i}</Dropdown.Item>);\r\n    }\r\n\r\n    return <div>\r\n        <Row>\r\n            <Col>\r\n                <h3>Armoury</h3>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col>\r\n                {/* BEGIN WEAPONS*/}\r\n                <Row>\r\n                    <Col>\r\n                        {Object.values(armouryState.weapons).map(((weapon) =>\r\n                                <div key={`wp-${weapon.name}`}>\r\n                                    {weapon.category === EItemCategory.WEAPON ? <WeaponCard weapon={weapon as IWeapon}/>\r\n                                        : weapon.category === EItemCategory.SPELL ?\r\n                                            <SpellCard spell={weapon as ISpell}/> : <></>\r\n                                    }\r\n                                </div>\r\n                        ))}\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col>\r\n                <Row>\r\n                    <Col md={5}>\r\n                        {Object.values(armouryState.gear).map(gear => (\r\n                            <Row key={`gear-${gear.name}`}>\r\n                                <Col md={10}>{gear.name}</Col>\r\n                                <Col md={2}> <Badge variant={'danger'} style={{ cursor: 'pointer' }}\r\n                                                    onClick={() => {\r\n                                                        dispatch(removeGear(gear));\r\n                                                        dispatch(addItem(gear))\r\n                                                    }}>-</Badge>\r\n                                </Col>\r\n                            </Row>\r\n                        ))}\r\n                    </Col>\r\n                    <Col md={{ span: 3 }}><Card> <Card.Img src={imageHead}/>\r\n                        <Card.ImgOverlay>\r\n                            <Badge className={\"armoury-badge\"} variant={\"secondary\"} pill>{armour.head}</Badge>\r\n                            {showTarget ? <Badge variant={\"dark\"}>(1-10)</Badge> : undefined}\r\n                        </Card.ImgOverlay></Card>\r\n                    </Col>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col>\r\n                                <Row>\r\n                                    <Button variant={showTarget ? \"primary\" : \"secondary\"} onClick={() => setShowTarget(!showTarget)}><BiTargetLock/> </Button>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Button\r\n                                        onClick={() => rollInitAndSendToDiscord(character.discordServer, character.characterName, agility, 1, 10)}\r\n                                        variant={\"light\"}><FaDiceD20 color={\"darkred\"} style={{ cursor: \"pointer\" }}/> Init\r\n                                    </Button>\r\n                                    <DropdownButton size=\"sm\" title={agilityBonus} variant={'secondary'}>\r\n                                        {dropItems}\r\n                                    </DropdownButton>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={{ offset: 2, span: 3 }}><Card> <Card.Img src={imageArmR}/>\r\n                        <Card.ImgOverlay>\r\n                            <Badge className={\"badge-armoury badge-secondary\"} pill>{armour.armR} </Badge>\r\n                            {showTarget ? <Badge variant={\"dark\"}>(11-20)</Badge> : undefined}\r\n                        </Card.ImgOverlay>\r\n                    </Card></Col>\r\n                    <Col md={{ span: 3 }}><Card> <Card.Img src={imageBody}/>\r\n                        <Card.ImgOverlay>\r\n                            <Badge className={\"armoury-badge\"} variant={\"secondary\"} pill>{armour.body}</Badge>\r\n                            {showTarget ? <Badge variant={\"dark\"}>(31-70)</Badge> : undefined}\r\n                        </Card.ImgOverlay>\r\n                    </Card></Col>\r\n                    <Col md={{ span: 3 }}><Card> <Card.Img src={imageArmL}/>\r\n                        <Card.ImgOverlay>\r\n                            <Badge className={\"armoury-badge\"} variant={\"secondary\"} pill>{armour.armL}</Badge>\r\n                            {showTarget ? <Badge variant={\"dark\"}>(21-30)</Badge> : undefined}\r\n                        </Card.ImgOverlay>\r\n                    </Card></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={{ offset: 3, span: 3 }}><Card> <Card.Img src={imageLegR}/>\r\n                        <Card.ImgOverlay>\r\n                            <Badge className={\"armoury-badge\"} variant={\"secondary\"} pill>{armour.legR}</Badge>\r\n                            {showTarget ? <Badge variant={\"dark\"}>(71-85)</Badge> : undefined}\r\n                        </Card.ImgOverlay>\r\n                    </Card></Col>\r\n                    <Col md={{ offset: 1, span: 3 }}><Card> <Card.Img src={imageLegL}/>\r\n                        <Card.ImgOverlay>\r\n                            <Badge className={\"armoury-badge\"} variant={\"secondary\"} pill>{armour.legL}</Badge>\r\n                            {showTarget ? <Badge variant={\"dark\"}>(86-100)</Badge> : undefined}\r\n                        </Card.ImgOverlay>\r\n                    </Card></Col>\r\n                </Row>\r\n\r\n                {/* WOUNDS */}\r\n                <Row>\r\n                    <Col md={2}>Wounds:</Col>\r\n                    <Col md={8}>\r\n                        {maxWoundsEditable ?\r\n                            <FormGroup as={Row}>\r\n                                <FormLabel column sm={5}>Max Wounds:</FormLabel>\r\n                                <Col sm={7}>\r\n\r\n                                    <FormControl value={maxHealth}\r\n                                                 onChange={(event) => dispatch(setMaxWounds(event.target.value))}\r\n                                                 onMouseLeave={() => setMaxWoundsEditable(false)}\r\n                                                 autoFocus/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            :\r\n                            <ProgressBar>\r\n                                <ProgressBar variant={\"danger\"} animated={health > maxHealth} now={health}\r\n                                             max={maxHealth}\r\n                                             label={health >= maxHealth / 2 ? calcWoundLabel() : undefined}\r\n                                             onClick={() => setMaxWoundsEditable(true)}/>\r\n                                <ProgressBar variant={\"secondary\"}\r\n                                             label={health < maxHealth / 2 ? calcWoundLabel() : undefined}\r\n                                             now={maxHealth + 10 - health} max={maxHealth + 10}\r\n                                             onClick={() => setMaxWoundsEditable(true)}/>\r\n                            </ProgressBar>\r\n                        }\r\n                    </Col>\r\n                    <Col md={2}>\r\n                        <div>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(setWounds(Math.max(health - 1, 0)))}>-</Badge>\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(setWounds(Math.min(health + 1, maxHealth + 10)))}>+</Badge>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* INFAMY */}\r\n                <Row>\r\n                    <Col md={2}>Infamy: </Col>\r\n                    <Col md={8}>\r\n                        <ProgressBar>\r\n                            <ProgressBar variant={\"success\"} now={infamy} max={maxInfamy}\r\n                                         label={`${infamy}/${maxInfamy}`}/>\r\n                            <ProgressBar variant={\"secondary\"} now={maxInfamy - infamy} max={maxInfamy}/>\r\n                        </ProgressBar>\r\n                    </Col>\r\n                    <Col md={2}>\r\n                        <div>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => setInfamy(infamy - 1)}>-</Badge>\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => setInfamy(Math.min(infamy + 1, maxInfamy))}>+</Badge>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* FATIGUE */}\r\n                <Row>\r\n                    <Col md={2}>Fatigue: </Col>\r\n                    <Col md={8}>\r\n                        <ProgressBar>\r\n                            <ProgressBar variant={\"warning\"} now={fatigue} max={maxFatigue}\r\n                                         label={`${fatigue}/${maxFatigue}`}/>\r\n                            <ProgressBar variant={\"secondary\"} now={maxFatigue - fatigue} max={maxFatigue}/>\r\n                        </ProgressBar>\r\n                    </Col>\r\n                    <Col md={2}>\r\n                        <div>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => setFatigue(fatigue - 1)}>-</Badge>\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => setFatigue(Math.min(fatigue + 1, maxFatigue))}>+</Badge>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Col>\r\n\r\n        </Row>\r\n    </div>\r\n\r\n\r\n}\r\n\r\nexport function reverseNumber(value: number) {\r\n    const s = value.toString().length === 1 ? '0' + value.toString() : value.toString()\r\n\r\n    return parseInt(s.split(\"\").reverse().join(\"\"));\r\n}\r\n\r\nexport function getHitLocation(rollValue: number) {\r\n    const reverse = reverseNumber(rollValue);\r\n\r\n    if (reverse < 11) {\r\n        return \"Head\";\r\n    } else if (reverse < 21) {\r\n        return \"Right Hand\";\r\n    } else if (reverse < 31) {\r\n        return \"Left Hand\";\r\n    } else if (reverse < 71) {\r\n        return \"Body\";\r\n    } else if (reverse < 86) {\r\n        return \"Right Leg\";\r\n    } else {\r\n        return \"Left Leg\"\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Badge, Col, Container, Row } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\nimport { decrement, decrementBonus, increment, incrementBonus } from './characteristicsSlice'\r\nimport { rollStatAndSendToDiscord } from \"../character/Rolls\";\r\nimport { FaDiceD20 } from \"react-icons/all\";\r\n\r\nexport const CharacteristicsCounter = ({ short = '' }) => {\r\n    const [hideBtns, toggleBtns] = React.useState(true);\r\n\r\n    const characteristic = useAppSelector(state => state.characteristics[short]);\r\n    const character = useAppSelector(state => state.character);\r\n    const dispatch = useAppDispatch()\r\n\r\n\r\n    return <Container id={`stat-${characteristic.name}`} style={{ backgroundColor: \"lightgrey\", padding: 0 }}>\r\n        <Row onClick={() => toggleBtns(!hideBtns)}>\r\n            <Col>\r\n                <Badge variant=\"secondary\" pill style={{ cursor: 'pointer' }}>\r\n                    {characteristic.name}\r\n                </Badge>\r\n            </Col>\r\n        </Row>\r\n        <Row style={{ alignItems: 'stretch' }}>\r\n            <Col>\r\n                {!hideBtns\r\n                    ? <>\r\n                        <div>\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(incrementBonus(characteristic.short))}>+</Badge>\r\n                            <Badge variant={'secondary'}>\r\n                                {characteristic.bonus ? characteristic.bonus : 0}\r\n                            </Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(decrementBonus(characteristic.short))}>-</Badge>\r\n                        </div>\r\n                        <div>\r\n                            <Badge pill variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(increment(characteristic.short))}>+</Badge>\r\n                            <Badge\r\n                                variant={\"dark\"}\r\n                                pill\r\n                                onClick={() => toggleBtns(!hideBtns)}>\r\n                                {characteristic.value}\r\n                            </Badge>\r\n                            <Badge pill variant={'danger'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(decrement(characteristic.short))}>-</Badge>\r\n\r\n                        </div>\r\n                    </>\r\n                    : <>\r\n                        <FaDiceD20 onClick={() => rollStatAndSendToDiscord(character.discordServer, character.characterName, characteristic)} color={\"darkred\"} style={{ cursor: \"pointer\" }}/>\r\n\r\n                        {characteristic.bonus ?\r\n                        <Badge variant={'secondary'}>\r\n                            {characteristic.bonus}\r\n                        </Badge>\r\n                        : <></>}\r\n                        <Badge\r\n                            variant={\"dark\"}\r\n                            pill\r\n                            onClick={() => toggleBtns(!hideBtns)}>\r\n                            {characteristic.value}\r\n                        </Badge>\r\n                    </>\r\n                }\r\n\r\n            </Col>\r\n        </Row>\r\n    </Container>;\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { allSkills } from \"../character/resources\";\r\n\r\nexport interface ISkill {\r\n    name: string,\r\n    level: number,\r\n    type: string,\r\n    bonus: number,\r\n    parent?: ISkill\r\n}\r\n\r\nexport interface ISkillState {\r\n    [name: string]: ISkill\r\n}\r\n\r\nexport const skillSlice = createSlice({\r\n    name: 'skills',\r\n    initialState: allSkills,\r\n    reducers: {\r\n        setLevel: (state, action: PayloadAction<ISkill>) => {\r\n            const name: string = action.payload.name;\r\n            if (state[name].level === action.payload.level) {\r\n                state[name].level = 0;\r\n            } else {\r\n                state[name].level = action.payload.level;\r\n            }\r\n        },\r\n        setBonus: (state, action: PayloadAction<ISkill>) => {\r\n            const {name, bonus} = action.payload;\r\n            state[name].bonus = bonus;\r\n        },\r\n        importSkills: (state, action) => {\r\n            const skills = action.payload;\r\n            for (const name in skills) {\r\n                state[name] = skills[name];\r\n                // Migration\r\n                if (!state[name].bonus) {\r\n                    state[name].bonus = 0\r\n                }\r\n            }\r\n        },\r\n        addSkill: (state, action: PayloadAction<ISkill>) => {\r\n            const {name, parent} = action.payload;\r\n            if (parent) {\r\n                state[`${parent.name} - ${name}`] = action.payload\r\n            } else {\r\n                state[name] = action.payload;\r\n            }\r\n\r\n        }\r\n    }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setLevel, setBonus, importSkills, addSkill } = skillSlice.actions\r\nexport default skillSlice.reducer\r\n\r\n","import { Alert, Button, Col, Container, FormControl, InputGroup, Row } from \"react-bootstrap\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\nimport { addSkill, setBonus, setLevel } from \"./skillSlice\";\r\nimport React, { useState } from \"react\";\r\nimport { FaDiceD20 } from \"react-icons/all\";\r\n\r\n\r\nexport const SkillEntryFunction = ({\r\n                                       skillName = 'SKILLNAME',\r\n                                       showType = true,\r\n                                       showSkilled = false,\r\n                                       callbackRoll\r\n                                   }: { skillName: string, showType: boolean, showSkilled: boolean, callbackRoll: any }) => {\r\n    const skills = useAppSelector(state => state.skills);\r\n    const characteristics = useAppSelector(state => state.characteristics);\r\n    const characterName = useAppSelector(state => state.character.characterName);\r\n    const discordServer = useAppSelector(state => state.character.discordServer);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [variant, setVariant] = useState('success');\r\n    const [newLore, setNewLore] = useState('');\r\n\r\n    const skill = skills[skillName];\r\n    if (!skill) {\r\n        console.error(`No skill for name '${skillName}' found`);\r\n        return <></>;\r\n    }\r\n    const { name, level, type, bonus, parent } = skill;\r\n\r\n    const description = showType ? `${parent ? `-> ${name}` : name} (${type})` : `${parent ? `-> ${name}` : name}`\r\n\r\n    if (showSkilled && level === 0) {\r\n        return <></>\r\n    }\r\n\r\n    function roll() {\r\n        const rollResult = callbackRoll(discordServer, characterName, characteristics[type.toUpperCase()]?.value, skill)\r\n\r\n        setVariant(rollResult.result ? 'success' : 'danger');\r\n        setShow(true);\r\n        setTimeout(() => setShow(false), 10000)\r\n        setText(`${name} Test: rolled ${rollResult.rolls} your level: ${rollResult.sum} = Test ${rollResult.result ? 'success' : 'failed'}`)\r\n\r\n\r\n    }\r\n\r\n    function getDiceCol() {\r\n        return <Col md={1}><FaDiceD20 onClick={() => roll()} color={\"darkred\"} style={{ cursor: \"pointer\" }}/></Col>\r\n    }\r\n\r\n    function getNameCol() {\r\n        return <Col md={5}>\r\n            {description} </Col>;\r\n    }\r\n\r\n    function getEditRow() {\r\n\r\n        if (name.endsWith(\"Lore\") || name === \"Trade\" ) {\r\n            return <>\r\n                {getElement()}\r\n                <Row style={{ padding: 0 }}>\r\n                    <Col>\r\n                        <Button size={\"sm\"} onClick={() => dispatch(addSkill({ name: newLore, level: 1, type, bonus: 0, parent: skill}))}>+</Button>\r\n                    </Col>\r\n                    <Col md={10} style={{ padding: 0 }}>\r\n                        <FormControl size={'sm'} placeholder=\"New Lore\"\r\n                                     onChange={(event => setNewLore(event.target.value))}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        }\r\n\r\n\r\n        function getElement() {\r\n            return <Row style={{ padding: 0 }}>\r\n                {getNameCol()}\r\n                <Col md={5} style={{ padding: 0 }}>\r\n                    <InputGroup>\r\n                        <InputGroup.Checkbox checked={level > 0} onChange={() => dispatch(setLevel({ ...skill, level: 1 }))}/>\r\n                        <InputGroup.Checkbox checked={level > 1} onChange={() => dispatch(setLevel({ ...skill, level: 2 }))}/>\r\n                        <InputGroup.Checkbox checked={level > 2} onChange={() => dispatch(setLevel({ ...skill, level: 3 }))}/>\r\n                        <InputGroup.Checkbox checked={level > 3} onChange={() => dispatch(setLevel({ ...skill, level: 4 }))}/>\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col md={2} style={{ padding: 0 }}>\r\n                    <FormControl size={'sm'} value={bonus}\r\n                                 onChange={(event => dispatch(setBonus({ ...skill, bonus: parseInt(event.target.value) })))}\r\n                    />\r\n                </Col>\r\n            </Row>;\r\n        }\r\n\r\n        return getElement();\r\n    }\r\n\r\n    function getSkilledRow() {\r\n        return <Row>\r\n            {getDiceCol()}\r\n            {getNameCol()}\r\n            <Col>{(level - 1) * 10}</Col>\r\n            <Col>{characteristics[type.toUpperCase()]?.value}</Col>\r\n            <Col>{bonus}</Col>\r\n            <Col><b>{(level - 1) * 10 + characteristics[type.toUpperCase()]?.value + bonus}</b></Col>\r\n        </Row>;\r\n    }\r\n\r\n    return <Container style={{ padding: 0 }}>\r\n        {showSkilled ? getSkilledRow() : getEditRow()}\r\n        <Alert onClose={() => setShow(false)} show={show} variant={variant}>\r\n            {text}\r\n        </Alert>\r\n    </Container>\r\n\r\n}\r\n","import { Badge, Card, Col, Row } from \"react-bootstrap\";\r\nimport { editArmour } from \"../inventory/inventorySlice\";\r\nimport React from \"react\";\r\nimport { IArmour } from \"./armourySlice\";\r\nimport { useAppDispatch } from \"../../general/hooks\";\r\n\r\n\r\nexport const ArmourCard = ({ armour }: { armour: IArmour }) => {\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    return <Card>\r\n        <Card.Header>\r\n            {armour.name}\r\n        </Card.Header>\r\n        <Card.Body>\r\n\r\n\r\n            <Row>\r\n                <Col>\r\n                    <Row>\r\n                        <Col>\r\n                            Head:\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(editArmour({\r\n                                       ...armour,\r\n                                       head: armour.head ? armour.head + 1 : 1\r\n                                   }))}>+</Badge>\r\n                            <Badge pill={true} variant={\"secondary\"}>  {armour.head ? armour.head : 0} </Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }} onClick={() => dispatch(editArmour({\r\n                                ...armour, head: armour.head ? Math.max(armour.head - 1, 0) : 0\r\n                            }))}>-</Badge>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Col>\r\n                <Col md={2}/>\r\n                <Col>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            Body:\r\n\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(editArmour({\r\n                                       ...armour,\r\n                                       body: armour.body ? armour.body + 1 : 1\r\n                                   }))}>+</Badge>\r\n                            <Badge pill={true} variant={\"secondary\"}>  {armour.body ? armour.body : 0} </Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }} onClick={() => dispatch(editArmour({\r\n                                ...armour, body: armour.body ? Math.max(armour.body - 1, 0) : 0\r\n                            }))}>-</Badge>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <Row>\r\n                        <Col>\r\n                            Left:\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(editArmour({\r\n                                       ...armour,\r\n                                       armL: armour.armL ? armour.armL + 1 : 1\r\n                                   }))}>+</Badge>\r\n                            <Badge pill={true} variant={\"secondary\"}>  {armour.armL ? armour.armL : 0} </Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }} onClick={() => dispatch(editArmour({\r\n                                ...armour, armL: armour.armL ? Math.max(armour.armL - 1, 0) : 0\r\n                            }))}>-</Badge>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Col>\r\n                <Col md={2}>Arm</Col>\r\n                <Col>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            Right:\r\n\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(editArmour({\r\n                                       ...armour,\r\n                                       armR: armour.armR ? armour.armR + 1 : 1\r\n                                   }))}>+</Badge>\r\n                            <Badge pill={true} variant={\"secondary\"}>  {armour.armR ? armour.armR : 0} </Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }} onClick={() => dispatch(editArmour({\r\n                                ...armour, armR: armour.armR ? Math.max(armour.armR - 1, 0) : 0\r\n                            }))}>-</Badge>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <Row>\r\n                        <Col>\r\n                            Left:\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(editArmour({\r\n                                       ...armour,\r\n                                       legL: armour.legL ? armour.legL + 1 : 1\r\n                                   }))}>+</Badge>\r\n                            <Badge pill={true} variant={\"secondary\"}>  {armour.legL ? armour.legL : 0} </Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }} onClick={() => dispatch(editArmour({\r\n                                ...armour, legL: armour.legL ? Math.max(armour.legL - 1, 0) : 0\r\n                            }))}>-</Badge>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Col>\r\n                <Col md={2}>Leg</Col>\r\n                <Col>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            Right:\r\n\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(editArmour({\r\n                                       ...armour,\r\n                                       legR: armour.legR ? armour.legR + 1 : 1\r\n                                   }))}>+</Badge>\r\n                            <Badge pill={true} variant={\"secondary\"}>  {armour.legR ? armour.legR : 0} </Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }} onClick={() => dispatch(editArmour({\r\n                                ...armour, legR: armour.legR ? Math.max(armour.legR - 1, 0) : 0\r\n                            }))}>-</Badge>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Card.Body>\r\n    </Card>;\r\n}\r\n","import {\r\n    Button,\r\n    ButtonGroup,\r\n    ButtonToolbar,\r\n    Col,\r\n    Dropdown,\r\n    FormControl,\r\n    InputGroup,\r\n    ListGroup,\r\n    Row,\r\n    Tab\r\n} from \"react-bootstrap\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\nimport React, { useState } from \"react\";\r\nimport { GearFill, Pencil, PlusCircle, ShieldFill } from \"react-bootstrap-icons\";\r\nimport {\r\n    addItemByName,\r\n    editCategory,\r\n    editDescription,\r\n    IInventory,\r\n    IItem,\r\n    importInventory,\r\n    removeItem,\r\n    TItem\r\n} from \"./inventorySlice\";\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport { allItems } from \"../character/resources\";\r\nimport { IArmour, ISpell, IWeapon, setGear, setWeapon } from \"../armoury/armourySlice\";\r\nimport { AiOutlineSortAscending, GiCrossedSwords, GiOrbWand } from \"react-icons/all\";\r\nimport { WeaponCard } from \"../armoury/weaponCard\";\r\nimport { ArmourCard } from \"../armoury/armourCard\";\r\nimport { SpellCard } from \"../armoury/spellCard\";\r\nimport { EItemCategory } from \"../character/EItemCategory\";\r\n\r\nexport const InventoryFunction = () => {\r\n    const [readonly, toggleReadonly] = useState(true);\r\n    const [newItem, setNewItem] = useState('');\r\n    const [activeFilter, setFilter] = useState('-');\r\n\r\n\r\n    const items = useAppSelector(state => state.inventory);\r\n    const armoury = useAppSelector(state => state.armoury)\r\n    const dispatch = useAppDispatch()\r\n\r\n\r\n    const itemOptions = [];\r\n    for (const item in allItems) {\r\n        itemOptions.push(item);\r\n    }\r\n\r\n\r\n    function createListItems() {\r\n        const result: JSX.Element[] = [];\r\n        for (const name in items) {\r\n            if (EItemCategory.NONE === activeFilter || items[name].category === activeFilter)\r\n                result.push(<ListGroup.Item action href={`#link${name}`} key={`listitem-${name}`}>\r\n                    {name}\r\n                </ListGroup.Item>)\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function createTabPanes() {\r\n        const result: JSX.Element[] = [];\r\n\r\n        function getItemButton(item: TItem) {\r\n            switch (item.category) {\r\n                case EItemCategory.WEAPON:\r\n                    const weapon = item as IWeapon;\r\n                    return <Button\r\n                        disabled={!!armoury.weapons[weapon.name]}\r\n                        onClick={() => {\r\n                            dispatch(setWeapon(weapon))\r\n                            dispatch(removeItem(item))\r\n                        }}>Equip</Button>\r\n\r\n                case EItemCategory.ARMOUR:\r\n                    const armour = item as IArmour;\r\n                    return <Button\r\n                        disabled={!!armoury.gear[armour.name]}\r\n                        onClick={() => {\r\n                            dispatch(setGear(armour))\r\n                            dispatch(removeItem(item))\r\n                        }}>Equip</Button>\r\n\r\n                case EItemCategory.SPELL:\r\n                    const spell = item as ISpell;\r\n\r\n                    return <Button\r\n                        disabled={!!armoury.weapons[spell.name]}\r\n                        onClick={() => {\r\n                            dispatch(setWeapon(spell))\r\n                            dispatch(removeItem(item))\r\n                        }}>Equip</Button>\r\n\r\n                case EItemCategory.MISC:\r\n                case EItemCategory.NONE:\r\n                    return <Button onClick={() => dispatch(removeItem(item))}>USE</Button>\r\n            }\r\n\r\n\r\n            return undefined;\r\n        }\r\n\r\n\r\n        function getTypeCard(item: IItem) {\r\n            switch (item.category) {\r\n                case EItemCategory.WEAPON:\r\n                    return <Col><WeaponCard weapon={item as IWeapon} editMode={!readonly}/></Col>\r\n                case EItemCategory.ARMOUR:\r\n                    return <Col><ArmourCard armour={item as IArmour}/></Col>\r\n                case EItemCategory.SPELL:\r\n                    return <Col><SpellCard spell={item as ISpell}/></Col>\r\n            }\r\n        }\r\n\r\n        for (const name in items) {\r\n            const item: IItem = items[name];\r\n            result.push(<Tab.Pane eventKey={`#link${name}`} key={`tabpane-${name}`}>\r\n                <Row>\r\n                    <Col>\r\n                        {item.name} - Count: {item.count}\r\n                    </Col>\r\n                    <Col>\r\n                        <ButtonGroup>\r\n                            {readonly ? <Button disabled>{item.category}</Button>\r\n                                : <Dropdown>\r\n                                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                                        {item.category}\r\n                                    </Dropdown.Toggle>\r\n\r\n                                    <Dropdown.Menu>\r\n                                        {Object.values(EItemCategory).map((value, index) =>\r\n                                            // <Dropdown.Item href={`#/action-${index}`}>{value}</Dropdown.Item>)}\r\n                                            <Dropdown.Item\r\n                                                key={`category-dropdown-${value}`}\r\n                                                onClick={() => {\r\n                                                    dispatch(editCategory({ ...item, category: value }))\r\n                                                }}>{value}</Dropdown.Item>)}\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                            }\r\n                            <Button variant={\"outline-secondary\"}\r\n                                    onClick={() => toggleReadonly(!readonly)}><Pencil/></Button>\r\n                        </ButtonGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n\r\n\r\n                    <Col md={item.category === EItemCategory.NONE || item.category === EItemCategory.MISC ? 12 : 5}>\r\n\r\n                        <InputGroup>\r\n                            <FormControl as=\"textarea\" readOnly={readonly} size={\"sm\"} rows={10}\r\n                                         value={item.description}\r\n                                         aria-label=\"Description\"\r\n                                         onChange={(event) => {\r\n                                             dispatch(editDescription({ ...item, description: event.target.value }))\r\n                                         }}/>\r\n                        </InputGroup>\r\n                    </Col>\r\n                    {getTypeCard(item)}\r\n                </Row>\r\n                {getItemButton(item)}\r\n            </Tab.Pane>)\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function getJSXForItemCategory(value: string) {\r\n        switch (value) {\r\n            case EItemCategory.NONE:\r\n                return 'ALL';\r\n            case EItemCategory.MISC:\r\n                return <GearFill/>\r\n            case EItemCategory.ARMOUR:\r\n                return <ShieldFill/>\r\n            case EItemCategory.WEAPON:\r\n                return <GiCrossedSwords/>\r\n            case EItemCategory.SPELL:\r\n                return <GiOrbWand/>\r\n        }\r\n        return <Pencil/>;\r\n    }\r\n\r\n    function sortInventory() {\r\n        const itemsSorted: IInventory = {};\r\n        Object.keys(items).sort((a, b) => a.localeCompare(b)).map(key => itemsSorted[key] = items[key])\r\n\r\n        console.log(items)\r\n        console.log(itemsSorted)\r\n\r\n        dispatch(importInventory(itemsSorted))\r\n\r\n    }\r\n\r\n    return <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"#link1\">\r\n        <Row>\r\n            <Col sm={3}>\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item>\r\n                        <ButtonToolbar>\r\n\r\n                            <ButtonGroup size={\"sm\"}\r\n                                         className={\"mr-2\"}\r\n                            >\r\n\r\n                                <Button onClick={() => sortInventory()}><AiOutlineSortAscending/></Button>\r\n                            </ButtonGroup>\r\n                            <ButtonGroup size=\"sm\">\r\n                                {Object.values(EItemCategory).map((value: string) =>\r\n                                    <Button key={`filter-btn-${value}`}\r\n                                            variant={activeFilter === value ? \"primary\" : \"secondary\"}\r\n                                            onClick={() => {\r\n                                                setFilter(value);\r\n                                            }}>{getJSXForItemCategory(value)}</Button>)}\r\n                            </ButtonGroup>\r\n                        </ButtonToolbar>\r\n                    </ListGroup.Item>\r\n\r\n                    {createListItems()}\r\n                    {/* Add Button */}\r\n                    <ListGroup.Item>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Prepend>\r\n                                <Button onClick={() => dispatch(addItemByName(newItem))}\r\n                                        variant=\"outline-primary\">\r\n                                    {items[newItem] ? <Pencil/> : <PlusCircle/>}\r\n                                </Button>\r\n                            </InputGroup.Prepend>\r\n\r\n                            {/*<FormControl aria-describedby=\"basic-addon1\"*/}\r\n                            {/*             onChange={(event => setNewItem(event.target.value))}/>*/}\r\n\r\n                            <div style={{ width: '9.87em' }}>\r\n                                <Typeahead\r\n                                    id=\"basic-typeahead-single\"\r\n                                    // options={['John', 'Paul', 'George', 'Ringo']}\r\n                                    options={itemOptions}\r\n                                    onInputChange={(name) => setNewItem(name)}\r\n                                    // onChange={(value: string) => console.log(value, 'Simple typeahead')}\r\n                                    onChange={(selection) => setNewItem(selection[0]?.toString())}\r\n                                />\r\n                            </div>\r\n                        </InputGroup>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n            <Col sm={9}>\r\n                <Tab.Content>\r\n                    {createTabPanes()}\r\n                </Tab.Content>\r\n            </Col>\r\n        </Row>\r\n    </Tab.Container>\r\n\r\n}\r\n","import { Badge, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { useAppSelector } from \"../../general/hooks\";\r\nimport React from \"react\";\r\nimport { ITalent } from \"./talentSlice\";\r\n\r\n\r\nexport const TalentEntryFunction = ({\r\n                                        name = 'TALENTNAME',\r\n                                        setActiveTalent\r\n                                    }: { name: string, setActiveTalent: React.Dispatch<React.SetStateAction<ITalent>> }) => {\r\n    const talents = useAppSelector(state => state.talents);\r\n    // const dispatch = useAppDispatch()\r\n\r\n    const talent = talents[name];\r\n\r\n    return <OverlayTrigger\r\n        key={`talent-${talent.name}`}\r\n        overlay={\r\n            <Tooltip id={`tooltip-${talent.name}`}>\r\n                {talent.description}\r\n            </Tooltip>\r\n        }\r\n    >\r\n        <div onClick={() => setActiveTalent(talent)}>\r\n            {talent.tier === 0\r\n                ? <Badge>{`Trait ${talent.name}${talent.specialization ? ` (${talent.specialization})` : ''}`}</Badge>\r\n                : <Badge>{`T${talent.tier} ${talent.name}${talent.specialization ? ` (${talent.specialization})` : ''}`}</Badge>\r\n            }\r\n        </div>\r\n    </OverlayTrigger>\r\n\r\n}\r\n","import {\r\n    Button,\r\n    Col,\r\n    Container,\r\n    Dropdown,\r\n    DropdownButton,\r\n    FormControl,\r\n    InputGroup,\r\n    ListGroup,\r\n    Row\r\n} from \"react-bootstrap\";\r\nimport { addTalent, ITalent, ITalentState, removeTalent } from \"./talentSlice\";\r\nimport { Pencil, PlusCircle, Trash } from \"react-bootstrap-icons\";\r\nimport React, { useState } from \"react\";\r\nimport { TalentEntryFunction } from \"./talentEntry\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport { allTalents } from \"../character/resources\";\r\n\r\nexport const TalentView = () => {\r\n    const talents = useAppSelector(state => state.talents);\r\n    const dispatch = useAppDispatch()\r\n\r\n    const [activeTalent, setActiveTalent] = useState({ name: '', description: '', tier: 0 } as ITalent);\r\n\r\n    const talentOptions = [];\r\n    for (const talent in allTalents) {\r\n        talentOptions.push(talent);\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col>\r\n                    <h3>Talents & Traits</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {createTalentObject(talents, setActiveTalent)}\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <Button\r\n                                onClick={() => dispatch(addTalent(activeTalent))}\r\n                                variant=\"outline-primary\">\r\n                                {talents[activeTalent.name] ? <Pencil/> : <PlusCircle/>}\r\n                            </Button>\r\n                        </InputGroup.Prepend>\r\n                        <Typeahead\r\n                            placeholder={'Talentname'}\r\n                            id=\"basic-typeahead-talents\"\r\n                            options={talentOptions}\r\n                            paginationText={\"More...\"}\r\n                            size={\"large\"}\r\n                            onInputChange={(name) => setActiveTalent({ ...activeTalent, name: name })}\r\n                            onChange={(selection) => setActiveTalent({\r\n                                ...activeTalent, ...allTalents[selection[0]?.toString()],\r\n                                name: selection[0]?.toString()\r\n                            })}\r\n                            selected={allTalents[activeTalent.name] ? [activeTalent.name] : []}\r\n                        />\r\n                        <FormControl placeholder={\"Specialization or count\"}\r\n                                     value={activeTalent.specialization ? activeTalent.specialization : \"\"}\r\n                                     size={\"lg\"}\r\n                                     onChange={(event => setActiveTalent({\r\n                                         ...activeTalent,\r\n                                         specialization: event.target.value\r\n                                     }))}\r\n                        />\r\n                        <DropdownButton size={\"lg\"} variant=\"success\" title={`Tier: ${activeTalent.tier}`}>\r\n                            <Dropdown.Item\r\n                                onClick={() => setActiveTalent({ ...activeTalent, tier: 1 })}>1</Dropdown.Item>\r\n                            <Dropdown.Item\r\n                                onClick={() => setActiveTalent({ ...activeTalent, tier: 2 })}>2</Dropdown.Item>\r\n                            <Dropdown.Item\r\n                                onClick={() => setActiveTalent({ ...activeTalent, tier: 3 })}>3</Dropdown.Item>\r\n                        </DropdownButton>\r\n                        <InputGroup.Append>\r\n                            <Button\r\n                                onClick={() => dispatch(removeTalent(activeTalent))}\r\n                                variant=\"outline-primary\"><Trash/></Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={8}>\r\n\r\n                    <FormControl placeholder={'Description'} aria-describedby=\"basic-addon1\"\r\n                                 as=\"textarea\" size={\"sm\"} rows={10}\r\n                                 value={activeTalent.description}\r\n                                 onChange={(event => setActiveTalent({\r\n                                     ...activeTalent,\r\n                                     description: event.target.value\r\n                                 }))}/>\r\n                </Col>\r\n                <Col>\r\n                    Prerequisites to Skill\r\n                    <ListGroup>\r\n                        {activeTalent.prerequisites?.split(\",\").map((prerequisit: string) =>\r\n                            <ListGroup.Item key={`prerequisit-${prerequisit}`}>{prerequisit}</ListGroup.Item>\r\n                        )}\r\n                    </ListGroup>\r\n                    Alignment: {activeTalent.devotion}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nfunction createTalentObject(talents: ITalentState, setNewTalent: React.Dispatch<React.SetStateAction<ITalent>>) {\r\n    const result: JSX.Element[] = [];\r\n    for (const name in talents) {\r\n        result.push(\r\n            <Col key={`talent-${name}`} style={{ padding: \"5px\" }}>\r\n                <TalentEntryFunction {...talents[name]} setActiveTalent={setNewTalent}/>\r\n            </Col>\r\n        )\r\n    }\r\n    return result;\r\n}\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { FormControl, InputGroup } from \"react-bootstrap\";\r\n\r\nconst baseStyle = {\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    borderWidth: 2,\r\n    borderRadius: 2,\r\n    borderColor: '#eeeeee',\r\n    borderStyle: 'dashed',\r\n    backgroundColor: '#fafafa',\r\n    color: '#bdbdbd',\r\n    outline: 'none',\r\n    transition: 'border .24s ease-in-out'\r\n};\r\n\r\nconst activeStyle = {\r\n    borderColor: '#2196f3'\r\n};\r\n\r\nconst acceptStyle = {\r\n    borderColor: '#00e676'\r\n};\r\n\r\nconst rejectStyle = {\r\n    borderColor: '#ff1744'\r\n};\r\n\r\nexport const FileUploadDrop = ({ importState, setImportState }\r\n                                   : { importState: string, setImportState: React.Dispatch<React.SetStateAction<string>> }) => {\r\n\r\n    const onDrop = useCallback((acceptedFiles) => {\r\n        acceptedFiles.forEach((file: any) => {\r\n            const reader = new FileReader()\r\n\r\n            reader.onabort = () => console.log('file reading was aborted')\r\n            reader.onerror = () => console.log('file reading has failed')\r\n            reader.onload = () => {\r\n                // Do whatever you want with the file contents\r\n                const binaryStr = reader.result;\r\n                const result: string = binaryStr as string\r\n                setImportState(result)\r\n            }\r\n            reader.readAsText(file)\r\n        })\r\n\r\n    }, [])\r\n    const {\r\n        getRootProps,\r\n        isDragActive,\r\n        isDragAccept,\r\n        isDragReject\r\n    } = useDropzone({ onDrop, accept: 'application/json' })\r\n\r\n    const style = useMemo(() => ({\r\n        ...baseStyle,\r\n        ...(isDragActive ? activeStyle : {}),\r\n        ...(isDragAccept ? acceptStyle : {}),\r\n        ...(isDragReject ? rejectStyle : {})\r\n    }), [\r\n        isDragActive,\r\n        isDragReject,\r\n        isDragAccept\r\n    ]);\r\n\r\n    return (\r\n        <div {...getRootProps()} style={style}>\r\n\r\n            <InputGroup>\r\n                {/*<input {...getInputProps()} />*/}\r\n                <FormControl as=\"textarea\" size={\"sm\"} rows={10}\r\n                             placeholder={\"Drag 'n' drop some files here and click on load\"}\r\n                             aria-label=\"Importfield\"\r\n                             value={importState}\r\n                             onChange={(event) => {\r\n                                 setImportState(event.target.value)\r\n                             }}/>\r\n            </InputGroup>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const characterSlice = createSlice({\r\n    name: 'character',\r\n    initialState: {\r\n        characterName: 'Character Name',\r\n        discordServer: ''\r\n    },\r\n    reducers: {\r\n        importCompleteState: (state, action) => {\r\n            state = action.payload\r\n        },\r\n        setCharacterName: (state, action) => {\r\n            state.characterName = action.payload;\r\n        },\r\n        setDiscordServer: (state, action) => {\r\n            state.discordServer = action.payload\r\n        }\r\n    },\r\n});\r\n\r\nexport const { importCompleteState, setCharacterName, setDiscordServer } = characterSlice.actions\r\nexport default characterSlice.reducer\r\n","import React, { useState } from \"react\";\r\nimport { Button, Col, Container, Form, FormControl, FormGroup, FormLabel, Jumbotron, Row } from \"react-bootstrap\";\r\nimport { CharacteristicsCounter } from \"../characteristics/characteristicsCounter\";\r\nimport './character.scss';\r\nimport { SkillEntryFunction } from \"../skills/skillEntry\";\r\nimport { allArmour, allItems, allWeapons } from \"./resources\";\r\nimport {\r\n    characteristicsInitialState,\r\n    ICharacteristicsState,\r\n    importCharacteristics\r\n} from \"../characteristics/characteristicsSlice\";\r\nimport { importTalents } from \"../talents/talentSlice\";\r\nimport { InventoryFunction } from \"../inventory/inventory\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\nimport { RootState } from \"../../general/store\";\r\nimport { importSkills } from \"../skills/skillSlice\";\r\nimport { IInventory, IItem, importInventory } from \"../inventory/inventorySlice\";\r\nimport { TalentView } from \"../talents/talentView\";\r\nimport { Armoury } from \"../armoury/armoury\";\r\nimport { IArmour, importArmoury, IWeapon, IWeaponState } from \"../armoury/armourySlice\";\r\nimport { FileUploadDrop } from \"./fileUploadDrop\";\r\nimport { setCharacterName, setDiscordServer } from \"./characterSlice\";\r\nimport { rollAndSendToDiscord, rollTestAndSendToDiscord } from \"./Rolls\";\r\nimport { FaDiceD20 } from \"react-icons/all\";\r\nimport { EItemCategory } from \"./EItemCategory\";\r\n\r\n\r\nexport const CharacterFunction = () => {\r\n    const [skillCols, setSkillCols] = useState(2);\r\n    const [mainCols, setMainCols] = useState(1);\r\n    const [showType, toggleShowType] = useState(true);\r\n    const [showSkilled, toggleShowSkilled] = useState(false);\r\n    const [importState, setImportState] = useState('');\r\n    const [editCharacterName, setEditCharacterName] = useState(false);\r\n    const [editDiscord, setEditDiscord] = useState(false);\r\n    const [customAmount, setCustomAmount] = useState(1)\r\n    const [customLimit, setCustomLimit] = useState(100)\r\n\r\n\r\n    const completeState = useAppSelector(state => state);\r\n    const dispatch = useAppDispatch()\r\n\r\n    function importStateFromJson(importState: string) {\r\n        if (!importState) {\r\n            return;\r\n        }\r\n        const state = JSON.parse(importState) as RootState;\r\n        dispatch(setCharacterName(state.character.characterName))\r\n        dispatch(setDiscordServer(state.character.discordServer))\r\n        dispatch(importCharacteristics(state.characteristics))\r\n        dispatch(importInventory(state.inventory))\r\n        dispatch(importSkills(state.skills))\r\n        dispatch(importTalents(state.talents))\r\n        dispatch(importArmoury(state.armoury))\r\n    }\r\n\r\n    function getCharacteristicsPane() {\r\n        return <Jumbotron key={\"jumbo-characteristics\"}>\r\n            <Container style={{ padding: 0 }}>\r\n                <Row>\r\n                    <Col>\r\n                        {editCharacterName ?\r\n                            <FormControl\r\n                                onMouseLeave={() => setEditCharacterName(false)}\r\n                                value={completeState.character.characterName}\r\n                                onChange={(event => dispatch(setCharacterName(event.target.value)))}\r\n                                autoFocus={true}/>\r\n                            :\r\n                            <h1 style={{ fontFamily: 'CloisterBlack', fontSize: \"xxx-large\" }}\r\n                                onClick={() => setEditCharacterName(true)}\r\n                            >{completeState.character.characterName}</h1>\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {createCharacteristicsObjects(characteristicsInitialState)}\r\n                </Row>\r\n                <Row>\r\n\r\n                    <Form>\r\n                        <Form.Row>\r\n\r\n                            <Col md={3}>\r\n                                <h3>Custom Roll:</h3>\r\n                            </Col>\r\n\r\n                            <Col md={3}>\r\n\r\n                                <FormGroup as={Row}>\r\n                                    <FormLabel column md={4}>Amount</FormLabel>\r\n                                    <Col md={8}>\r\n                                        <FormControl size={\"sm\"} value={customAmount}\r\n                                                     onChange={event => setCustomAmount(parseInt(event.target.value))}/>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col>d</Col>\r\n                            <Col md={3}>\r\n\r\n                                <FormGroup as={Row}>\r\n                                    <FormLabel column md={4}>Limit</FormLabel>\r\n                                    <Col md={8}>\r\n                                        <FormControl size={\"sm\"} value={customLimit}\r\n                                                     onChange={event => setCustomLimit(parseInt(event.target.value))}/>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button\r\n                                    onClick={() => rollAndSendToDiscord(completeState.character.discordServer, completeState.character.characterName, customAmount, customLimit)}\r\n                                    variant={\"light\"}> Roll <FaDiceD20 color={\"darkred\"} style={{ cursor: \"pointer\" }}/>\r\n                                </Button>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </Row>\r\n            </Container>\r\n        </Jumbotron>\r\n    }\r\n\r\n    function getSkillsPane() {\r\n\r\n        function createSkillMatrix(colCount: number = 2, showType: boolean, showSkilled: boolean, callbackRoll: any) {\r\n            const skillObjects: JSX.Element[] = [];\r\n            const skillNames: string[] = showSkilled ? Object.values(completeState.skills).filter(value => value.level > 0).map(skill => skill.parent ? `${skill.parent.name} - ${skill.name}` : skill.name) : Object.keys(completeState.skills);\r\n            skillNames.sort((a, b) => a.localeCompare(b))\r\n\r\n            skillNames.forEach(skillName => {\r\n                skillObjects.push(\r\n                    <SkillEntryFunction key={`skill-${skillName}`}  {...{\r\n                        skillName,\r\n                        showType,\r\n                        showSkilled,\r\n                        callbackRoll\r\n                    }} />\r\n                )\r\n            });\r\n            return mapElements(skillObjects, colCount);\r\n        }\r\n\r\n\r\n        return <Jumbotron key={\"jumbo-skills\"}>\r\n            <Row>\r\n                <Col>\r\n                    <h3>Skills</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row>Col: {skillCols}\r\n                <Button style={{ padding: 0, width: '10px', height: '25px' }} variant=\"outline-secondary\" size=\"sm\"\r\n                        onClick={() => setSkillCols(skillCols - 1)}>-</Button>\r\n                <Button style={{ padding: 0, width: '10px', height: '25px' }} variant=\"outline-secondary\" size=\"sm\"\r\n                        onClick={() => setSkillCols(skillCols + 1)}>+</Button>\r\n                <Button size={\"sm\"} style={{ padding: 0, height: '25px' }}\r\n                        onClick={() => toggleShowType(!showType)}>Type</Button>\r\n                <Button size={\"sm\"} style={{ padding: 0, height: '25px' }}\r\n                        onClick={() => toggleShowSkilled(!showSkilled)}>Skilled</Button>\r\n            </Row>\r\n            <Container fluid>\r\n                <Row>\r\n                    {createSkillMatrix(skillCols, showType, showSkilled, rollTestAndSendToDiscord).map((skillCols, index) => (\r\n                        <Col key={`skillcol-${index}`}>\r\n                            <Col>\r\n                                {showSkilled ? <Row>\r\n                                        <Col md={1}>{/* EMPTY */}</Col>\r\n                                        <Col md={5}><b>Skillname</b></Col>\r\n                                        <Col>T</Col>\r\n                                        <Col>C</Col>\r\n                                        <Col>B</Col>\r\n                                        <Col><b>Sum</b></Col>\r\n                                    </Row>\r\n                                    : <Row>\r\n                                        <Col md={5}><b>Skillname</b></Col>\r\n                                        <Col md={5} style={{ padding: 0 }}>\r\n                                            <span style={{ paddingLeft: 0, paddingRight: 12 }}><b>T</b></span>\r\n                                            <span style={{ paddingLeft: 5, paddingRight: 5 }}><b>+10</b></span>\r\n                                            <span style={{ paddingLeft: 5, paddingRight: 5 }}><b>+20</b></span>\r\n                                            <span style={{ paddingLeft: 5, paddingRight: 5 }}><b>+30</b></span>\r\n                                        </Col>\r\n                                        <Col md={2}>Bonus</Col>\r\n                                    </Row>\r\n                                }\r\n                            </Col>\r\n                            {skillCols}\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            </Container>\r\n        </Jumbotron>\r\n    }\r\n\r\n    function getTalentsPane() {\r\n        return <Jumbotron key={\"jumbo-talents\"}>\r\n            <TalentView/>\r\n        </Jumbotron>\r\n    }\r\n\r\n    function getInventoryPane() {\r\n        return <Jumbotron key={\"jumbo-inventory\"}>\r\n            <Row>\r\n                <Col>\r\n                    <h3>Inventory</h3>\r\n                </Col>\r\n            </Row>\r\n            <InventoryFunction/>\r\n        </Jumbotron>\r\n    }\r\n\r\n    function getArmouryPane() {\r\n        return <Jumbotron key={\"jumbo-armoury\"}>\r\n            <Armoury/>\r\n        </Jumbotron>\r\n    }\r\n\r\n    function getSettingsPane() {\r\n\r\n        function calcNewItems() {\r\n            const result = {\r\n                items: {},\r\n                weapons: {},\r\n                armour: {}\r\n            }\r\n\r\n            const items: IInventory = {};\r\n            const weapons: IWeaponState = {};\r\n            const armour: { [name: string]: IArmour } = {};\r\n\r\n            const inventory = completeState.inventory;\r\n            for (const itemName in inventory) {\r\n                if (!(itemName in allItems || itemName in allWeapons || itemName in allArmour)) {\r\n                    const item: IItem = inventory[itemName];\r\n                    if (item.category === EItemCategory.WEAPON) {\r\n                        weapons[itemName] = item as IWeapon;\r\n                    } else if (item.category === EItemCategory.ARMOUR) {\r\n                        armour[itemName] = item as IArmour;\r\n                    } else {\r\n                        items[itemName] = item;\r\n                    }\r\n                }\r\n            }\r\n            result.items = items;\r\n            result.weapons = weapons;\r\n            result.armour = armour;\r\n            return result\r\n        }\r\n\r\n        return <Jumbotron key={\"jumbo-settings\"}>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <h3>Settings</h3>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={2}>\r\n                        <Row>\r\n                            <Col>\r\n                                <Button size={\"sm\"}\r\n                                        onClick={() => setImportState(JSON.stringify(completeState))}>Export</Button>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button size={\"sm\"} onClick={() => importStateFromJson(importState)}>Load</Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <a href={`data:text/json;charset=utf-8,${encodeURIComponent(\r\n                                    JSON.stringify(completeState)\r\n                                )}`} download={completeState.character.characterName ? completeState.character.characterName + \".json\" : \"DnD-Character.json\"}>\r\n                                    <Button>Download</Button>\r\n                                </a>\r\n                            </Col>\r\n                            <Col>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            Cols: {mainCols}\r\n                            <Button style={{ padding: 0, width: '10px', height: '25px' }} variant=\"outline-secondary\"\r\n                                    size=\"sm\"\r\n                                    onClick={() => setMainCols(mainCols - 1)}>-</Button>\r\n                            <Button style={{ padding: 0, width: '10px', height: '25px' }} variant=\"outline-secondary\"\r\n                                    size=\"sm\"\r\n                                    onClick={() => setMainCols(mainCols + 1)}>+</Button>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Button onClick={() => setImportState(JSON.stringify(calcNewItems()))}>Export New\r\n                                    Items</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Col sm={10}>\r\n                        <FileUploadDrop {...{ importState, setImportState }} />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    {editDiscord ?\r\n                        <FormControl\r\n                            onMouseLeave={() => setEditDiscord(false)}\r\n                            value={completeState.character.discordServer}\r\n                            onChange={(event => dispatch(setDiscordServer(event.target.value)))}\r\n                            autoFocus={true}/>\r\n                        :\r\n                        <h4\r\n                            onClick={() => setEditDiscord(true)}\r\n                        >{completeState.character.discordServer ? completeState.character.discordServer : 'Click to set Discord'}</h4>\r\n                    }\r\n                </Row>\r\n\r\n            </Container>\r\n        </Jumbotron>\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    function getDebugPane() {\r\n        if (process.env.NODE_ENV === 'development') {\r\n            return <Jumbotron key={'debugPane'}>\r\n                {editDiscord ?\r\n                    <FormControl\r\n                        onMouseLeave={() => setEditDiscord(false)}\r\n                        value={completeState.character.discordServer}\r\n                        onChange={(event => dispatch(setDiscordServer(event.target.value)))}\r\n                        autoFocus={true}/>\r\n                    :\r\n                    <h4\r\n                        onClick={() => setEditDiscord(true)}\r\n                    >{completeState.character.discordServer ? completeState.character.discordServer : 'Click to set Discord'}</h4>\r\n                }\r\n                {/*<Button onClick={() => sendMessageToDiscord('TEST')}>Send Discord Message</Button>*/}\r\n            </Jumbotron>\r\n        }\r\n        return <div key={'debugPane'}/>;\r\n    }\r\n\r\n\r\n    const allPanes = [\r\n\r\n        // getDebugPane(),\r\n\r\n        getCharacteristicsPane(),\r\n        getSkillsPane(),\r\n        getTalentsPane(),\r\n        getArmouryPane(),\r\n        getInventoryPane(),\r\n        getSettingsPane(),\r\n    ]\r\n\r\n    return <>\r\n        {mainCols === 1\r\n            ? <Container>\r\n                {mapElements(allPanes, mainCols)}\r\n            </Container>\r\n            : <Row>\r\n                {mapElements(allPanes, mainCols).map((elementCol, index) => (\r\n                    <Col key={`skillcol-${index}`} md={6}>\r\n                        {elementCol}\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        }</>\r\n\r\n\r\n} // END OF FUNCTION\r\n\r\n\r\nfunction createCharacteristicsObjects(characteristics: ICharacteristicsState): JSX.Element[] {\r\n    const result: JSX.Element[] = [];\r\n    for (const short in characteristics) {\r\n        result.push(\r\n            <Col key={`stat-${short}`} style={{ padding: \"5px\" }}>\r\n                <CharacteristicsCounter short={short}/>\r\n            </Col>\r\n        )\r\n    }\r\n    return result;\r\n}\r\n\r\n\r\nfunction mapElements(objects: JSX.Element[], colCount: number) {\r\n    const matrix: any[] = [];\r\n    for (let j = 0; j < colCount; j++) {\r\n        const part = ((objects.length - 1) / colCount + 1 | 0);\r\n        matrix[j] = new Array(part);\r\n        for (let i = part * j; i < part * (j + 1); i++) {\r\n            matrix[j].push(objects[i]);\r\n        }\r\n    }\r\n    return matrix;\r\n}\r\n","import React from 'react';\nimport './App.scss';\nimport { CharacterFunction } from \"./components/character/character\";\n\nfunction App() {\n    return (\n        <div className=\"App\" style={{ backgroundColor: \"black\" }}>\n            {/*<header className=\"App-header\">*/}\n            {/*  <img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\n            {/*  <p>*/}\n            {/*    Edit <code>src/App.tsx</code> and save to reload.*/}\n            {/*  </p>*/}\n\n            {/*  <a*/}\n            {/*    className=\"App-link\"*/}\n            {/*    href=\"https://reactjs.org\"*/}\n            {/*    target=\"_blank\"*/}\n            {/*    rel=\"noopener noreferrer\"*/}\n            {/*  >*/}\n            {/*    Learn React*/}\n            {/*  </a>*/}\n            {/*</header>*/}\n            <div>\n                <CharacterFunction/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { characteristicsSlice } from \"../components/characteristics/characteristicsSlice\";\r\nimport { skillSlice } from \"../components/skills/skillSlice\";\r\nimport { talentSlice } from \"../components/talents/talentSlice\";\r\nimport { inventorySlice } from \"../components/inventory/inventorySlice\";\r\nimport { characterSlice } from \"../components/character/characterSlice\";\r\nimport { armourySlice } from \"../components/armoury/armourySlice\";\r\n\r\n/**\r\n * Creates the Redux store and adds the default middlewares from redux toolkit as well as the router middleware\r\n */\r\nconst store = configureStore({\r\n    reducer: {\r\n        character: characterSlice.reducer,\r\n        characteristics: characteristicsSlice.reducer,\r\n        skills: skillSlice.reducer,\r\n        talents: talentSlice.reducer,\r\n        inventory: inventorySlice.reducer,\r\n        armoury: armourySlice.reducer\r\n    },\r\n    middleware: [...getDefaultMiddleware()],\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\nexport default store\r\n","export default __webpack_public_path__ + \"static/media/CloisterBlack.0a8dea1a.ttf\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./general/store\";\nimport '../src/fonts/CloisterBlack.ttf'\n\nReactDOM.render(\n    <React.Fragment>\n        <Provider store={store}>\n            <link\n                rel=\"stylesheet\"\n                href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\"\n                integrity=\"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\"\n                crossOrigin=\"anonymous\"\n            />\n            <App/>\n        </Provider>\n    </React.Fragment>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}