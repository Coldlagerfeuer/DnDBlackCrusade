{"version":3,"sources":["components/armoury/armourySlice.ts","general/hooks.ts","components/characteristics/characteristicsSlice.ts","components/talents/talentSlice.ts","components/character/EItemCategory.ts","components/character/resources.ts","components/character/ETabNames.ts","components/inventory/inventorySlice.ts","components/armoury/weaponCard.tsx","components/character/Rolls.tsx","components/armoury/spellCard.tsx","components/character/characterSlice.ts","components/talents/talentEntry.tsx","components/armoury/armoury.tsx","components/characteristics/characteristicsCounter.tsx","components/armoury/armourCard.tsx","components/inventory/inventory.tsx","components/skills/skillSlice.ts","components/character/experienceSlice.ts","components/talents/talentView.tsx","components/character/fileUploadDrop.tsx","components/skills/skillEntry.tsx","components/skills/skillView.tsx","components/character/experienceView.tsx","components/search/searchView.tsx","components/character/character.tsx","App.tsx","reportWebVitals.ts","general/store.ts","fonts/CloisterBlack.ttf","index.tsx"],"names":["EWeaponCategory","ESpellType","EDamageType","useAppDispatch","useDispatch","useAppSelector","useSelector","characteristicsInitialState","name","value","short","bonus","characteristicsSlice","createSlice","initialState","reducers","increment","state","action","payload","decrement","incrementBonus","console","log","decrementBonus","importCharacteristics","characteristics","stat","actions","EGods","armourySlice","armour","head","body","armR","armL","legR","legL","gear","weapons","character","currentWounds","maxWounds","currentInfamy","setGear","removeGear","setWeapon","count","removeWeapon","setWounds","setMaxWounds","importArmoury","EItemCategory","godStringMap","KHORNE","NURGLE","SLAANESH","TZEENTCH","UNALIGNED","SPECIAL","expMap","devotionMap","talentsInitialState","tier","devotion","prerequisites","description","talentSlice","addTalent","talent","allTalents","removeTalent","importTalents","talents","ETabNames","allWeapons","category","WEAPON","weaponCategory","PISTOL","damage","range","rof","clip","rld","type","IMPACT","pen","weight","CHAIN","RENDING","LASER","SPELL","ENERGY","exp","focusPower","sustained","subtype","ATTACK","CONCENTRATION","allArmour","ARMOUR","allItems","MISC","itemsInitialState","inventorySlice","addItem","oldCount","addItemByName","itemname","item","NONE","changeWeaponName","oldName","editWeapon","editArmour","removeItem","editDescription","editCategory","importInventory","inventory","WeaponCard","weapon","editMode","useState","newName","setNewName","weaponEquipped","armoury","testModifier","setTestModifier","show","setShow","text","setText","variant","setVariant","dispatch","getJSXForWeaponCategory","cat","SWORD","getJSXForWeaponType","weaponType","SCHOCK","getWeaponTypeDropdown","Dropdown","Toggle","id","Menu","Object","values","map","index","e","Item","onClick","getWeightField","col","Col","md","FormControl","size","placeholder","aria-label","onChange","event","parseInt","target","getDamageField","Badge","style","cursor","pill","Math","max","getRangeField","getMagazineField","getRemoveFromArmoury","getNameField","OverlayTrigger","overlay","Tooltip","Row","isMeeleWeapon","InputGroup","Append","Button","color","getRollDice","characteristic","dropItems","Header","i","push","DropdownButton","title","rollResult","discordServer","username","modifier","amount","limit","roll","rollType","ERollType","AIM","result","rollSum","sendMessage","getEmbedsForRollType","rollAimAndSendToDiscord","discord","active","characterName","setTimeout","getHitLocation","rollDamageAndSendToDiscord","JSON","stringify","rolls","_","Card","Body","padding","Alert","onClose","SpellCard","spell","characterSlice","prod","debug","layout","left","SEARCH","main","CHARACTERISTICS","right","EXPERIENCE","importCharacter","setCharacterName","setDiscordServer","setDiscordServerDebug","setDiscordActive","setDevotion","setLayout","changeLayout","field","indexOf","splice","sort","TalentEntryFunction","setActiveTalent","placement","getTierDescription","specialization","Armoury","infamyStat","toughnessStat","agilityStat","armouryState","experience","agilityBonus","setAgilityBonus","agility","floor","maxHealth","maxInfamy","maxFatigue","infamy","setInfamy","fatigue","setFatigue","showTarget","setShowTarget","maxWoundsEditable","setMaxWoundsEditable","health","calcWoundLabel","heavilyWounded","calcDevotion","counts","flatMap","t","filter","v","forEach","entries","span","Img","src","ImgOverlay","className","undefined","INIT","rollInitAndSendToDiscord","offset","FormGroup","as","FormLabel","column","sm","onMouseLeave","autoFocus","ProgressBar","animated","now","label","min","backgroundColor","h","a","b","resetDevotion","rollValue","reverse","s","toString","length","split","join","reverseNumber","rollTestAndSendToDiscord","skill","rollTest","message","d","DAMAGE","colorCodeRed","colorCodeGreen","fields","inline","TEST","r","level","sum","STAT","embeds","content","fetch","method","headers","random","CharacteristicsCounter","React","hideBtns","toggleBtns","Container","alignItems","rollStatAndSendToDiscord","ArmourCard","InventoryFunction","readonly","toggleReadonly","newItem","setNewItem","activeFilter","setFilter","items","itemOptions","getJSXForItemCategory","Tab","defaultActiveKey","ListGroup","ButtonToolbar","ButtonGroup","itemsSorted","keys","localeCompare","key","sortInventory","href","createListItems","Prepend","width","options","onInputChange","selection","Content","getItemButton","disabled","getTypeCard","Pane","eventKey","readOnly","rows","createTabPanes","skillSlice","setLevel","parent","setBonus","importSkills","skills","addSkill","experienceSlice","expSum","importExperience","addEntry","removeEntry","TalentView","sidebar","remainingExp","activeTalent","talentOptions","fluid","createSimpleTalent","hasPrerequisite","prerequisit","createTalentObject","calcNeededExp","paginationText","selected","aria-describedby","getEditFields","characterDevotion","talentDevotion","setNewTalent","baseStyle","flex","display","borderWidth","borderRadius","borderColor","borderStyle","outline","transition","activeStyle","acceptStyle","rejectStyle","FileUploadDrop","importState","setImportState","onDrop","useCallback","acceptedFiles","file","reader","FileReader","onabort","onerror","onload","binaryStr","readAsText","useDropzone","accept","getRootProps","isDragActive","isDragAccept","isDragReject","useMemo","SkillEntryFunction","skillName","showType","showSkilled","callbackRoll","newLore","setNewLore","error","getDiceCol","toUpperCase","getNameCol","getSkilledRow","endsWith","getElement","Checkbox","checked","getEditRow","dismissible","SkillView","cols","showTypeDef","showSkilledDef","showSettings","skillCols","setSkillCols","toggleShowType","toggleShowSkilled","Jumbotron","height","colCount","skillObjects","skillNames","mapElements","createSkillMatrix","paddingLeft","paddingRight","ExperienceView","newEntry","setNewEntry","calcExpSum","array","slice","reduce","getStyleForDevotion","Table","striped","borderless","hover","colSpan","Number","SearchView","emptyTalent","activeSearch","setActiveSearch","searchOptions","replaceAll","plaintext","CharacterFunction","mainCols","setMainCols","editCharacterName","setEditCharacterName","editDiscord","setEditDiscord","editDiscordDebug","setEditDiscordDebug","customAmount","setCustomAmount","customLimit","setCustomLimit","completeState","getCharacteristicsPane","fontFamily","fontSize","createCharacteristicsObjects","Form","rollAndSendToDiscord","getSettingsPane","getNameForTabKey","SETTINGS","parse","importStateFromJson","encodeURIComponent","download","itemName","calcNewItems","Check","border","margin","isNaN","xs","includes","SKILLS","TALENTS","ARMOURY","INVENTORY","getTabForKey","getSkillsPane","getTalentsPane","getTabs","panes","elementCol","objects","matrix","j","part","Array","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","middleware","getDefaultMiddleware","ReactDOM","render","Fragment","rel","integrity","crossOrigin","document","getElementById"],"mappings":"6OAGYA,EAqBAC,EAsBAC,E,6JC1CCC,EAAiB,kBAAMC,eACvBC,EAAkDC,I,QCSlDC,EAA8B,CACvC,GAAM,CAAEC,KAAM,eAAgBC,MAAO,GAAIC,MAAO,KAAMC,MAAO,GAC7D,GAAM,CAAEH,KAAM,kBAAmBC,MAAO,GAAIC,MAAO,KAAMC,MAAO,GAChE,EAAK,CAAEH,KAAM,WAAYC,MAAO,GAAIC,MAAO,IAAKC,MAAO,GACvD,EAAK,CAAEH,KAAM,YAAaC,MAAO,GAAIC,MAAO,IAAKC,MAAO,GACxD,GAAM,CAAEH,KAAM,UAAWC,MAAO,GAAIC,MAAO,KAAMC,MAAO,GACxD,IAAO,CAAEH,KAAM,eAAgBC,MAAO,GAAIC,MAAO,MAAOC,MAAO,GAC/D,IAAO,CAAEH,KAAM,aAAcC,MAAO,GAAIC,MAAO,MAAOC,MAAO,GAC7D,GAAM,CAAEH,KAAM,YAAaC,MAAO,GAAIC,MAAO,KAAMC,MAAO,GAC1D,IAAO,CAAEH,KAAM,aAAcC,MAAO,GAAIC,MAAO,MAAOC,MAAO,GAC7D,IAAO,CAAEH,KAAM,SAAUC,MAAO,GAAIC,MAAO,MAAOC,MAAO,GACzD,IAAO,CAAEH,KAAM,aAAcC,MAAO,EAAGC,MAAO,MAAOC,MAAO,IAInDC,EAAuBC,YAAY,CAC5CL,KAAM,kBACNM,aAAcP,EACdQ,SAAU,CACNC,UAAW,SAACC,EAAOC,GACfD,EAAMC,EAAOC,SAASV,OAAS,GAEnCW,UAAW,SAACH,EAAOC,GACfD,EAAMC,EAAOC,SAASV,OAAS,GAEnCY,eAAgB,SAACJ,EAAOC,GACpBI,QAAQC,IAAIL,EAAOC,SACnBF,EAAMC,EAAOC,SAASR,OAAS,GAEnCa,eAAgB,SAACP,EAAOC,GACpBD,EAAMC,EAAOC,SAASR,MAAQ,EAAIM,EAAMC,EAAOC,SAASR,OAAS,EAAIM,EAAMC,EAAOC,SAASR,MAAQ,GAEvGc,sBAAuB,SAACR,EAAOC,GAC3B,IAAMQ,EAAkBR,EAAOC,QAC/B,IAAK,IAAMQ,KAAQD,EACfT,EAAMU,GAAQD,EAAgBC,O,EAOiDf,EAAqBgB,QAArGZ,E,EAAAA,UAAWI,E,EAAAA,UAAWC,E,EAAAA,eAAgBG,E,EAAAA,eAAgBC,E,EAAAA,sBACtDb,EAAf,S,SFtDYZ,O,mBAAAA,I,SAAAA,I,iBAAAA,I,kBAAAA,M,cAqBAC,K,gBAAAA,E,+BAAAA,M,cAsBAC,O,mBAAAA,I,qBAAAA,I,mBAAAA,I,iBAAAA,I,mBAAAA,I,gBAAAA,M,KAiCL,I,cGnEK2B,EHqFCC,EAAejB,YAAY,CACpCL,KAAM,UACNM,aApB8B,CAC9BiB,OAAQ,CACJC,KAAM,EACNC,KAAM,EACNC,KAAM,EACNC,KAAM,EACNC,KAAM,EACNC,KAAM,GAEVC,KAAM,GACNC,QAAS,GACTC,UAAW,CACPC,cAAe,EACfC,UAAW,EACXC,cAAe,IAOnB5B,SAAU,CACN6B,QAAS,SAAC3B,EAAOC,GAAqC,IAAD,EACIA,EAAOC,QAApDa,EADyC,EACzCA,KAAMC,EADmC,EACnCA,KAAME,EAD6B,EAC7BA,KAAMD,EADuB,EACvBA,KAAMG,EADiB,EACjBA,KAAMD,EADW,EACXA,KAAM5B,EADK,EACLA,KAE5CS,EAAMc,OAAOC,KAAOA,GAAcf,EAAMc,OAAOC,KAC/Cf,EAAMc,OAAOE,KAAOA,GAAchB,EAAMc,OAAOE,KAC/ChB,EAAMc,OAAOI,KAAOA,GAAclB,EAAMc,OAAOI,KAC/ClB,EAAMc,OAAOG,KAAOA,GAAcjB,EAAMc,OAAOG,KAC/CjB,EAAMc,OAAOM,KAAOA,GAAcpB,EAAMc,OAAOM,KAC/CpB,EAAMc,OAAOK,KAAOA,GAAcnB,EAAMc,OAAOK,KAEjDnB,EAAMqB,KAAK9B,GAAQU,EAAOC,SAE5B0B,WAAY,SAAC5B,EAAOC,GAAqC,IAAD,EACCA,EAAOC,QAApDa,EAD4C,EAC5CA,KAAMC,EADsC,EACtCA,KAAME,EADgC,EAChCA,KAAMD,EAD0B,EAC1BA,KAAMG,EADoB,EACpBA,KAAMD,EADc,EACdA,KAAM5B,EADQ,EACRA,KAE5CS,EAAMc,OAAOC,KAAOA,EAAO,EAAIf,EAAMc,OAAOC,KAC5Cf,EAAMc,OAAOE,KAAOA,EAAO,EAAIhB,EAAMc,OAAOE,KAC5ChB,EAAMc,OAAOI,KAAOA,EAAO,EAAIlB,EAAMc,OAAOI,KAC5ClB,EAAMc,OAAOG,KAAOA,EAAO,EAAIjB,EAAMc,OAAOG,KAC5CjB,EAAMc,OAAOM,KAAOA,EAAO,EAAIpB,EAAMc,OAAOM,KAC5CpB,EAAMc,OAAOK,KAAOA,EAAO,EAAInB,EAAMc,OAAOK,YAErCnB,EAAMqB,KAAK9B,IAEtBsC,UAAW,SAAC7B,EAAOC,GACfD,EAAMsB,QAAQrB,EAAOC,QAAQX,MAA7B,2BAAyCU,EAAOC,SAAhD,IAAyD4B,MAAO,KAEpEC,aAAc,SAAC/B,EAAOC,UACXD,EAAMsB,QAAQrB,EAAOC,QAAQX,OAExCyC,UAAW,SAAChC,EAAOC,GACfD,EAAMuB,UAAUC,cAAgBvB,EAAOC,SAE3C+B,aAAc,SAACjC,EAAOC,GAClBD,EAAMuB,UAAUE,UAAYxB,EAAOC,SAEvCgC,cAAe,SAAClC,EAAOC,GAA0C,IAAD,EACdA,EAAOC,QAA7CY,EADoD,EACpDA,OAAQO,EAD4C,EAC5CA,KAAMC,EADsC,EACtCA,QAASC,EAD6B,EAC7BA,UAC/BvB,EAAMc,OAASA,EACfd,EAAMqB,KAAOA,EACbrB,EAAMsB,QAAUA,EAChBtB,EAAMuB,UAAYA,M,EAM0EV,EAAaF,QAAtGgB,E,EAAAA,QAASC,E,EAAAA,WAAYC,E,EAAAA,UAAWE,E,EAAAA,aAAcC,E,EAAAA,UAAWC,E,EAAAA,aAAcC,E,EAAAA,c,GACvErB,EAAf,Q,oIGzIYD,K,gBAAAA,E,gBAAAA,E,oBAAAA,E,oBAAAA,E,sBAAAA,E,mBAAAA,M,KAmBL,IC/BKuB,GD+BCC,GAAgB,CACzB,OAAUxB,EAAMyB,OAChB,OAAUzB,EAAM0B,OAChB,SAAY1B,EAAM2B,SAClB,SAAY3B,EAAM4B,SAClB,UAAa5B,EAAM6B,UACnB,QAAW7B,EAAM8B,SAQRC,GAAS,CAClB,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,MAGFC,IAAW,mBACnBhC,EAAM6B,WADa,mBAEf7B,EAAM6B,UAAY,GAFH,cAGf7B,EAAM8B,QAAU,GAHD,cAIf9B,EAAMyB,OAAS,GAJA,cAKfzB,EAAM0B,OAAS,GALA,cAMf1B,EAAM4B,SAAW,GANF,cAOf5B,EAAM2B,SAAW,GAPF,kBASnB3B,EAAMyB,QATa,mBAUfzB,EAAM6B,UAAY,GAVH,cAWf7B,EAAM8B,QAAU,GAXD,cAYf9B,EAAMyB,OAAS,GAZA,cAafzB,EAAM0B,OAAS,GAbA,cAcf1B,EAAM4B,SAAW,GAdF,cAef5B,EAAM2B,SAAW,GAfF,kBAiBnB3B,EAAM0B,QAjBa,mBAkBf1B,EAAM6B,UAAY,GAlBH,cAmBf7B,EAAM8B,QAAU,GAnBD,cAoBf9B,EAAMyB,OAAS,GApBA,cAqBfzB,EAAM0B,OAAS,GArBA,cAsBf1B,EAAM4B,SAAW,GAtBF,cAuBf5B,EAAM2B,SAAW,GAvBF,kBAyBnB3B,EAAM4B,UAzBa,mBA0Bf5B,EAAM6B,UAAY,GA1BH,cA2Bf7B,EAAM8B,QAAU,GA3BD,cA4Bf9B,EAAMyB,OAAS,GA5BA,cA6BfzB,EAAM0B,OAAS,GA7BA,cA8Bf1B,EAAM4B,SAAW,GA9BF,cA+Bf5B,EAAM2B,SAAW,GA/BF,kBAiCnB3B,EAAM2B,UAjCa,mBAkCf3B,EAAM6B,UAAY,GAlCH,cAmCf7B,EAAM8B,QAAU,GAnCD,cAoCf9B,EAAMyB,OAAS,GApCA,cAqCfzB,EAAM0B,OAAS,GArCA,cAsCf1B,EAAM4B,SAAW,GAtCF,cAuCf5B,EAAM2B,SAAW,GAvCF,kBAyCnB3B,EAAM8B,SAzCa,mBA0Cf9B,EAAM6B,UAAY,GA1CH,cA2Cf7B,EAAM8B,QAAU,GA3CD,cA4Cf9B,EAAMyB,OAAS,GA5CA,cA6CfzB,EAAM0B,OAAS,GA7CA,cA8Cf1B,EAAM4B,SAAW,GA9CF,cA+Cf5B,EAAM2B,SAAW,GA/CF,OAuDXM,GAAsB,CAC/B,eAAgB,CAAEtD,KAAM,eAAgBuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWO,cAAe,IAAKC,YAAa,oUAGpGC,GAActD,YAAY,CACnCL,KAAM,SACNM,aAAcgD,GACd/C,SAAU,CACNqD,UAAW,SAACnD,EAAOC,GACf,IAAMmD,EAASnD,EAAOC,QACF,KAAhBkD,EAAO7D,OACPS,EAAMoD,EAAO7D,MAAQ6D,EAEhBC,GAAWD,EAAO7D,QACnB8D,GAAWD,EAAO7D,MAAQ6D,KAKtCE,aAAc,SAACtD,EAAOC,UACXD,EAAMC,EAAOC,QAAQX,OAEhCgE,cAAe,SAACvD,EAAOC,GACnB,IAAMuD,EAAUvD,EAAOC,QACvB,IAAK,IAAMX,KAAQiE,EACfxD,EAAMT,GAAQiE,EAAQjE,O,GAOoB2D,GAAYvC,QAAvDwC,G,GAAAA,UAAWG,G,GAAAA,aAAcC,G,GAAAA,cACzBL,GAAf,S,SC3IYf,K,SAAAA,E,gBAAAA,E,gBAAAA,E,eAAAA,E,aAAAA,Q,KCML,I,GCNKsB,GDyCCJ,GAAa,CACtB,mBAAoB,CAAE9D,KAAM,mBAAoBuD,KAAM,EAAGE,cAAe,SAAUD,SAAUnC,EAAM2B,SAAUU,YAAa,+TACzH,aAAgB,CAAE1D,KAAM,eAAgBuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAM6B,UAAWQ,YAAa,yRACjH,kBAAmB,CAAE1D,KAAM,kBAAmBuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,6uBAC/F,gBAAiB,CAAE1D,KAAM,gBAAiBuD,KAAM,EAAGE,cAAe,oCAAqCD,SAAUnC,EAAM6B,UAAWQ,YAAa,4UAC/I,cAAe,CAAE1D,KAAM,cAAeuD,KAAM,EAAGE,cAAe,0CAA2CD,SAAUnC,EAAM6B,UAAWQ,YAAa,qVACjJ,kBAAmB,CAAE1D,KAAM,kBAAmBuD,KAAM,EAAGE,cAAe,oBAAqBD,SAAUnC,EAAM2B,SAAUU,YAAa,4QAClI,gBAAiB,CAAE1D,KAAM,gBAAiBuD,KAAM,EAAGE,cAAe,mCAAoCD,SAAUnC,EAAM0B,OAAQW,YAAa,ifAC3I,uBAAwB,CAAE1D,KAAM,uBAAwBuD,KAAM,EAAGE,cAAe,mCAAoCD,SAAUnC,EAAM4B,SAAUS,YAAa,mIAC3J,cAAe,CAAE1D,KAAM,cAAeuD,KAAM,EAAGE,cAAe,SAAUD,SAAUnC,EAAMyB,OAAQY,YAAa,0LAC7G,iBAAkB,CAAE1D,KAAM,iBAAkBuD,KAAM,EAAGC,SAAUnC,EAAMyB,OAAQY,YAAa,iGAC1F,SAAY,CAAE1D,KAAM,WAAYuD,KAAM,EAAGE,cAAe,2BAA4BD,SAAUnC,EAAM6B,UAAWQ,YAAa,gcAC5H,eAAgB,CAAE1D,KAAM,eAAgBuD,KAAM,EAAGE,cAAe,oCAAqCD,SAAUnC,EAAM6B,UAAWQ,YAAa,8IAC7I,YAAe,CAAE1D,KAAM,cAAeuD,KAAM,EAAGE,cAAe,qCAAsCD,SAAUnC,EAAMyB,OAAQY,YAAa,2QACzI,0BAA2B,CAAE1D,KAAM,0BAA2BuD,KAAM,EAAGE,cAAe,aAAcD,SAAUnC,EAAM4B,SAAUS,YAAa,uuBAC3I,iBAAkB,CAAE1D,KAAM,iBAAkBuD,KAAM,EAAGE,cAAe,SAAUD,SAAUnC,EAAM4B,SAAUS,YAAa,uaACrH,uBAAwB,CAAE1D,KAAM,uBAAwBuD,KAAM,EAAGE,cAAe,gBAAiBD,SAAUnC,EAAMyB,OAAQY,YAAa,+9CACtI,eAAgB,CAAE1D,KAAM,eAAgBuD,KAAM,EAAGE,cAAe,gCAAiCD,SAAUnC,EAAM6B,UAAWQ,YAAa,2MACzI,mBAAmB,CAAE1D,KAAM,iBAAkBuD,KAAM,EAAGE,cAAe,OAAQD,SAAUnC,EAAM0B,OAAQW,YAAa,6UAClH,QAAW,CAAE1D,KAAM,UAAWuD,KAAM,EAAGC,SAAUnC,EAAM2B,SAAUU,YAAa,yTAC9E,oBAAqB,CAAE1D,KAAM,oBAAqBuD,KAAM,EAAGE,cAAe,aAAcD,SAAUnC,EAAM6B,UAAWQ,YAAa,qcAChI,eAAgB,CAAE1D,KAAM,eAAgBuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,4NACzF,mBAAoB,CAAE1D,KAAM,mBAAoBuD,KAAM,EAAGE,cAAe,SAAUD,SAAUnC,EAAM4B,SAAUS,YAAa,uQACzH,gBAAiB,CAAE1D,KAAM,gBAAiBuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAMyB,OAAQY,YAAa,8GAChH,eAAgB,CAAE1D,KAAM,eAAgBuD,KAAM,EAAGE,cAAe,SAAUD,SAAUnC,EAAM6B,UAAWQ,YAAa,qGAClH,oBAAqB,CAAE1D,KAAM,oBAAqBuD,KAAM,EAAGE,cAAe,oBAAqBD,SAAUnC,EAAM0B,OAAQW,YAAa,+qBACpI,iBAAkB,CAAE1D,KAAM,iBAAkBuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAM6B,UAAWQ,YAAa,8XACrH,aAAc,CAAE1D,KAAM,aAAcuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAM4B,SAAUS,YAAa,gGAC5G,mBAAoB,CAAE1D,KAAM,mBAAoBuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAM2B,SAAUU,YAAa,8FACxH,gBAAiB,CAAE1D,KAAM,gBAAiBuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAMyB,OAAQY,YAAa,sFAChH,kBAAmB,CAAE1D,KAAM,kBAAmBuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,2hBAC/F,eAAgB,CAAE1D,KAAM,eAAgBuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAM4B,SAAUS,YAAa,+IAChH,eAAgB,CAAE1D,KAAM,eAAgBuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAM6B,UAAWQ,YAAa,sQACjH,UAAa,CAAE1D,KAAM,YAAauD,KAAM,EAAGE,cAAe,gBAAiBD,SAAUnC,EAAM2B,SAAUU,YAAa,4QAClH,WAAY,CAAE1D,KAAM,WAAYuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAM0B,OAAQW,YAAa,sEACtG,OAAU,CAAE1D,KAAM,SAAUuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAM6B,UAAWQ,YAAa,ySACrG,mBAAoB,CAAE1D,KAAM,mBAAoBuD,KAAM,EAAGC,SAAUnC,EAAM0B,OAAQW,YAAa,6aAC9F,cAAe,CAAE1D,KAAM,cAAeuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,iVACvF,oBAAqB,CAAE1D,KAAM,oBAAqBuD,KAAM,EAAGE,cAAe,sBAAuBD,SAAUnC,EAAM6B,UAAWQ,YAAa,mGACzI,MAAS,CAAE1D,KAAM,QAASuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,kTAC3E,mBAAoB,CAAE1D,KAAM,mBAAoBuD,KAAM,EAAGE,cAAe,SAAUD,SAAUnC,EAAM2B,SAAUU,YAAa,wIACzH,yBAA0B,CAAE1D,KAAM,yBAA0BuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,sfAC7G,mBAAoB,CAAE1D,KAAM,mBAAoBuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAM4B,SAAUS,YAAa,yOACxH,uBAAwB,CAAE1D,KAAM,uBAAwBuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAM4B,SAAUS,YAAa,+TAChI,SAAY,CAAE1D,KAAM,WAAYuD,KAAM,EAAGE,cAAe,kBAAmBD,SAAUnC,EAAM0B,OAAQW,YAAa,kNAChH,iBAAkB,CAAE1D,KAAM,iBAAkBuD,KAAM,EAAGE,cAAe,uBAAwBD,SAAUnC,EAAM6B,UAAWQ,YAAa,yNACpI,eAAgB,CAAE1D,KAAM,eAAgBuD,KAAM,EAAGE,cAAe,0BAA2BD,SAAUnC,EAAMyB,OAAQY,YAAa,2OAChI,UAAa,CAAE1D,KAAM,YAAauD,KAAM,EAAGE,cAAe,SAAUD,SAAUnC,EAAM4B,SAAUS,YAAa,iKAC3G,OAAU,CAAE1D,KAAM,SAAUuD,KAAM,EAAGC,SAAUnC,EAAMyB,OAAQY,YAAa,48BAC1E,kBAAmB,CAAE1D,KAAM,kBAAmBuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAMyB,OAAQY,YAAa,qQACpH,0BAA2B,CAAE1D,KAAM,0BAA2BuD,KAAM,EAAGE,cAAe,oBAAqBD,SAAUnC,EAAM6B,UAAWQ,YAAa,oLACnJ,WAAc,CAAE1D,KAAM,aAAcuD,KAAM,EAAGE,cAAe,wCAAyCD,SAAUnC,EAAM6B,UAAWQ,YAAa,kQAC7I,cAAe,CAAE1D,KAAM,cAAeuD,KAAM,EAAGE,cAAe,gBAAiBD,SAAUnC,EAAMyB,OAAQY,YAAa,iSACpH,cAAe,CAAE1D,KAAM,cAAeuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAM2B,SAAUU,YAAa,8OAC9G,MAAS,CAAE1D,KAAM,QAASuD,KAAM,EAAGE,cAAe,OAAQD,SAAUnC,EAAM0B,OAAQW,YAAa,8KAC/F,OAAU,CAAE1D,KAAM,SAAUuD,KAAM,EAAGC,SAAUnC,EAAMyB,OAAQY,YAAa,4aAC1E,oBAAqB,CAAE1D,KAAM,oBAAqBuD,KAAM,EAAGC,SAAUnC,EAAM4B,SAAUS,YAAa,0aAClG,eAAgB,CAAE1D,KAAM,eAAgBuD,KAAM,EAAGE,cAAe,eAAgBD,SAAUnC,EAAM6B,UAAWQ,YAAa,wXACxH,gBAAiB,CAAE1D,KAAM,gBAAiBuD,KAAM,EAAGE,cAAe,uBAAwBD,SAAUnC,EAAM6B,UAAWQ,YAAa,mUAClI,wBAAyB,CAAE1D,KAAM,wBAAyBuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAM6B,UAAWQ,YAAa,qJACnI,oBAAqB,CAAE1D,KAAM,oBAAqBuD,KAAM,EAAGE,cAAe,qBAAsBD,SAAUnC,EAAM4B,SAAUS,YAAa,4WACvI,gBAAiB,CAAE1D,KAAM,gBAAiBuD,KAAM,EAAGE,cAAe,mBAAoBD,SAAUnC,EAAM2B,SAAUU,YAAa,0wBAC7H,wBAAyB,CAAE1D,KAAM,wBAAyBuD,KAAM,EAAGE,cAAe,0BAA2BD,SAAUnC,EAAM2B,SAAUU,YAAa,yOACpJ,WAAY,CAAE1D,KAAM,WAAYuD,KAAM,EAAGE,cAAe,OAAQD,SAAUnC,EAAM0B,OAAQW,YAAa,4FACrG,kBAAmB,CAAE1D,KAAM,kBAAmBuD,KAAM,EAAGE,cAAe,SAAUD,SAAUnC,EAAM2B,SAAUU,YAAa,+OACvH,MAAS,CAAE1D,KAAM,QAASuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAM0B,OAAQW,YAAa,iKAChG,iBAAkB,CAAE1D,KAAM,iBAAkBuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAMyB,OAAQY,YAAa,0PAClH,UAAW,CAAE1D,KAAM,UAAWuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAM2B,SAAUU,YAAa,+CACtG,yBAA0B,CAAE1D,KAAM,yBAA0BuD,KAAM,EAAGE,cAAe,qBAAsBD,SAAUnC,EAAM6B,UAAWQ,YAAa,0UAClJ,yBAA0B,CAAE1D,KAAM,yBAA0BuD,KAAM,EAAGE,cAAe,SAAUD,SAAUnC,EAAM6B,UAAWQ,YAAa,kLACtI,gBAAiB,CAAE1D,KAAM,gBAAiBuD,KAAM,EAAGE,cAAe,SAAUD,SAAUnC,EAAM4B,SAAUS,YAAa,oQACnH,mBAAoB,CAAE1D,KAAM,mBAAoBuD,KAAM,EAAGE,cAAe,eAAgBD,SAAUnC,EAAMyB,OAAQY,YAAa,0FAC7H,qBAAsB,CAAE1D,KAAM,qBAAsBuD,KAAM,EAAGC,SAAUnC,EAAM2B,SAAUU,YAAa,gIACpG,gBAAiB,CAAE1D,KAAM,gBAAiBuD,KAAM,EAAGE,cAAe,0CAA2CD,SAAUnC,EAAM6B,UAAWQ,YAAa,uLACrJ,gBAAiB,CAAE1D,KAAM,gBAAiBuD,KAAM,EAAGE,cAAe,gBAAiBD,SAAUnC,EAAM6B,UAAWQ,YAAa,onBAC3H,uBAAwB,CAAE1D,KAAM,uBAAwBuD,KAAM,EAAGE,cAAe,kCAAmCD,SAAUnC,EAAM6B,UAAWQ,YAAa,+TAC3J,SAAY,CAAE1D,KAAM,WAAYuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAM6B,UAAWQ,YAAa,wJACzG,oBAAqB,CAAE1D,KAAM,oBAAqBuD,KAAM,EAAGE,cAAe,cAAeD,SAAUnC,EAAM0B,OAAQW,YAAa,uXAC9H,kBAAmB,CAAE1D,KAAM,kBAAmBuD,KAAM,EAAGE,cAAe,oCAAqCD,SAAUnC,EAAM6B,UAAWQ,YAAa,2aACnJ,QAAW,CAAE1D,KAAM,UAAWuD,KAAM,EAAGE,cAAe,2BAA4BD,SAAUnC,EAAM6B,UAAWQ,YAAa,0ZAC1H,oBAAqB,CAAE1D,KAAM,oBAAqBuD,KAAM,EAAGE,cAAe,sBAAuBD,SAAUnC,EAAM6B,UAAWQ,YAAa,qHACzI,WAAc,CAAE1D,KAAM,aAAcuD,KAAM,EAAGC,SAAUnC,EAAM4B,SAAUS,YAAa,8GACpF,cAAe,CAAE1D,KAAM,cAAeuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAM0B,OAAQW,YAAa,+GAC5G,MAAS,CAAE1D,KAAM,QAASuD,KAAM,EAAGC,SAAUnC,EAAM2B,SAAUU,YAAa,qpBAC1E,kBAAmB,CAAE1D,KAAM,kBAAmBuD,KAAM,EAAGE,cAAe,oBAAqBD,SAAUnC,EAAM6B,UAAWQ,YAAa,oKACnI,kBAAmB,CAAE1D,KAAM,kBAAmBuD,KAAM,EAAGC,SAAUnC,EAAM0B,OAAQW,YAAa,mQAC5F,YAAa,CAAE1D,KAAM,YAAauD,KAAM,EAAGE,cAAe,cAAeD,SAAUnC,EAAM0B,OAAQW,YAAa,8RAC9G,WAAc,CAAE1D,KAAM,aAAcuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,2IACrF,SAAY,CAAE1D,KAAM,WAAYuD,KAAM,EAAGC,SAAUnC,EAAM4B,SAAUS,YAAa,6OAChF,KAAQ,CAAE1D,KAAM,OAAQuD,KAAM,EAAGE,cAAe,SAAUD,SAAUnC,EAAM6B,UAAWQ,YAAa,0YAClG,gBAAiB,CAAE1D,KAAM,gBAAiBuD,KAAM,EAAGE,cAAe,cAAeD,SAAUnC,EAAMyB,OAAQY,YAAa,4ZACtH,SAAY,CAAE1D,KAAM,WAAYuD,KAAM,EAAGE,cAAe,iBAAkBD,SAAUnC,EAAM4B,SAAUS,YAAa,+WACjH,eAAgB,CAAE1D,KAAM,eAAgBuD,KAAM,EAAGE,cAAe,qBAAsBD,SAAUnC,EAAM2B,SAAUU,YAAa,2MAC7H,sBAAuB,CAAE1D,KAAM,sBAAuBuD,KAAM,EAAGE,cAAe,eAAgBD,SAAUnC,EAAM2B,SAAUU,YAAa,0NACrI,YAAe,CAAE1D,KAAM,cAAeuD,KAAM,EAAGE,cAAe,eAAgBD,SAAUnC,EAAM0B,OAAQW,YAAa,gTACnH,aAAc,CAAE1D,KAAM,aAAcuD,KAAM,EAAGE,cAAe,SAAUD,SAAUnC,EAAM6B,UAAWQ,YAAa,2CAC9G,gBAAiB,CAAE1D,KAAM,gBAAiBuD,KAAM,EAAGE,cAAe,SAAUD,SAAUnC,EAAM8B,QAASO,YAAa,4aAClH,aAAc,CAAE1D,KAAM,aAAcuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,yLACrF,mBAAoB,CAAE1D,KAAM,mBAAoBuD,KAAM,EAAGE,cAAe,MAAOD,SAAUnC,EAAM2B,SAAUU,YAAa,4XACtH,iBAAkB,CAAE1D,KAAM,iBAAkBuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAM2B,SAAUU,YAAa,+FACpH,eAAgB,CAAE1D,KAAM,eAAgBuD,KAAM,EAAGC,SAAUnC,EAAM2B,SAAUU,YAAa,8JACxF,OAAU,CAAE1D,KAAM,SAAUuD,KAAM,EAAGE,cAAe,wBAAyBD,SAAUnC,EAAM6B,UAAWQ,YAAa,+MACrH,WAAc,CAAE1D,KAAM,aAAcuD,KAAM,EAAGC,SAAUnC,EAAM0B,OAAQW,YAAa,sRAClF,UAAa,CAAE1D,KAAM,YAAauD,KAAM,EAAGE,cAAe,aAAcD,SAAUnC,EAAM6B,UAAWQ,YAAa,05BAChH,aAAgB,CAAE1D,KAAM,eAAgBuD,KAAM,EAAGE,cAAe,sBAAuBD,SAAUnC,EAAM6B,UAAWQ,YAAa,+LAC/H,QAAW,CAAE1D,KAAM,UAAWuD,KAAM,EAAGE,cAAe,sDAAuDD,SAAUnC,EAAM6B,UAAWQ,YAAa,iSACrJ,qBAAsB,CAAE1D,KAAM,qBAAsBuD,KAAM,EAAGC,SAAUnC,EAAM0B,OAAQW,YAAa,8HAClG,OAAU,CAAE1D,KAAM,SAAUuD,KAAM,EAAGC,SAAUnC,EAAM2B,SAAUU,YAAa,qRAC5E,aAAc,CAAE1D,KAAM,aAAcuD,KAAM,EAAGE,cAAe,sBAAuBD,SAAUnC,EAAM6B,UAAWQ,YAAa,sXAC3H,gBAAiB,CAAE1D,KAAM,gBAAiBuD,KAAM,EAAGE,cAAe,sCAAuCD,SAAUnC,EAAMyB,OAAQY,YAAa,qSAC9I,kBAAmB,CAAE1D,KAAM,kBAAmBuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAMyB,OAAQY,YAAa,wLACpH,gBAAiB,CAAE1D,KAAM,gBAAiBuD,KAAM,EAAGE,cAAe,yCAA0CD,SAAUnC,EAAM4B,SAAUS,YAAa,wLACnJ,cAAe,CAAE1D,KAAM,cAAeuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAM2B,SAAUU,YAAa,+IAC9G,eAAgB,CAAE1D,KAAM,eAAgBuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAMyB,OAAQY,YAAa,i5BAC9G,SAAY,CAAE1D,KAAM,WAAYuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,2oBACjF,mBAAoB,CAAE1D,KAAM,mBAAoBuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAM6B,UAAWQ,YAAa,mIACzH,kBAAmB,CAAE1D,KAAM,kBAAmBuD,KAAM,EAAGE,cAAe,SAAUD,SAAUnC,EAAM6B,UAAWQ,YAAa,wMACxH,iBAAkB,CAAE1D,KAAM,iBAAkBuD,KAAM,EAAGE,cAAe,OAAQD,SAAUnC,EAAMyB,OAAQY,YAAa,2ZACjH,eAAgB,CAAE1D,KAAM,eAAgBuD,KAAM,EAAGE,cAAe,SAAUD,SAAUnC,EAAM4B,SAAUS,YAAa,mUACjH,YAAa,CAAE1D,KAAM,YAAauD,KAAM,EAAGE,cAAe,OAAQD,SAAUnC,EAAM0B,OAAQW,YAAa,2JACvG,qBAAsB,CAAE1D,KAAM,qBAAsBuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,yRACrG,iBAAkB,CAAE1D,KAAM,iBAAkBuD,KAAM,EAAGE,cAAe,gCAAiCD,SAAUnC,EAAMyB,OAAQY,YAAa,wDAC1I,kBAAmB,CAAE1D,KAAM,kBAAmBuD,KAAM,EAAGE,cAAe,eAAgBD,SAAUnC,EAAMyB,OAAQY,YAAa,2RAC3H,kBAAmB,CAAE1D,KAAM,kBAAmBuD,KAAM,EAAGE,cAAe,kBAAmBD,SAAUnC,EAAM6B,UAAWQ,YAAa,4bACjI,aAAgB,CAAE1D,KAAM,eAAgBuD,KAAM,EAAGC,SAAUnC,EAAM2B,SAAUU,YAAa,2jBACxF,kBAAmB,CAAE1D,KAAM,kBAAmBuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAM0B,OAAQW,YAAa,qFACpH,UAAW,CAAE1D,KAAM,UAAWuD,KAAM,EAAGE,cAAe,gCAAiCD,SAAUnC,EAAM0B,OAAQW,YAAa,qjBAC5H,eAAgB,CAAE1D,KAAM,eAAgBuD,KAAM,EAAGE,cAAe,mCAAoCD,SAAUnC,EAAM4B,SAAUS,YAAa,oOAC3I,YAAa,CAAE1D,KAAM,YAAauD,KAAM,EAAGE,cAAe,mCAAoCD,SAAUnC,EAAM4B,SAAUS,YAAa,+eACrI,aAAc,CAAE1D,KAAM,aAAcuD,KAAM,EAAGE,cAAe,mCAAoCD,SAAUnC,EAAM4B,SAAUS,YAAa,ocACvI,kBAAmB,CAAE1D,KAAM,kBAAmBuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,yZAC/F,cAAe,CAAE1D,KAAM,cAAeuD,KAAM,EAAGE,cAAe,uBAAwBD,SAAUnC,EAAM6B,UAAWQ,YAAa,2TAC9H,qBAAsB,CAAE1D,KAAM,qBAAsBuD,KAAM,EAAGE,cAAe,QAASD,SAAUnC,EAAM6B,UAAWQ,YAAa,iHAC7H,yBAA0B,CAAE1D,KAAM,yBAA0BuD,KAAM,EAAGE,cAAe,SAAUD,SAAUnC,EAAM4B,SAAUS,YAAa,2bAGrI,WAAc,CAAC1D,KAAM,aAAcuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,oTACpF,UAAa,CAAC1D,KAAM,YAAauD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,kaAClF,kBAAmB,CAAC1D,KAAM,kBAAmBwD,SAAUnC,EAAM6B,UAAWK,KAAM,EAAGG,YAAa,iNAC9F,QAAW,CAAC1D,KAAM,UAAWuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,qaAC9E,MAAS,CAAC1D,KAAM,QAASuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,4hBAC1E,gBAAiB,CAAC1D,KAAM,gBAAiBwD,SAAUnC,EAAM6B,UAAWK,KAAM,EAAGG,YAAa,gHAC1F,SAAY,CAAC1D,KAAM,WAAYuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,2hBAChF,QAAW,CAAC1D,KAAM,UAAWuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,iRAC9E,SAAY,CAAC1D,KAAM,WAAYuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,uwBAChF,aAAc,CAAC1D,KAAM,aAAcuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,oJACpF,KAAQ,CAAC1D,KAAM,OAAQuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,urBACxE,MAAS,CAAC1D,KAAM,QAASuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,yVAC1E,cAAe,CAAC1D,KAAM,cAAewD,SAAUnC,EAAM6B,UAAWK,KAAM,EAAGG,YAAa,gOACtF,yBAA0B,CAAC1D,KAAM,yBAA0BuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,+OAC5G,QAAW,CAAC1D,KAAM,UAAWuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,gTAC9E,YAAe,CAAC1D,KAAM,cAAeuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,8hCACtF,QAAW,CAAC1D,KAAM,UAAWuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,4cAC9E,gBAAiB,CAAC1D,KAAM,gBAAiBuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,smBAC1F,gBAAiB,CAAC1D,KAAM,gBAAiBuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,6TAC1F,kBAAmB,CAAC1D,KAAM,kBAAmBuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,2sBAC9F,MAAS,CAAC1D,KAAM,QAASuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,igBAC1E,OAAU,CAAC1D,KAAM,SAAUuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,8TAC5E,WAAc,CAAC1D,KAAM,aAAcuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,swBACpF,UAAa,CAAC1D,KAAM,YAAauD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,ofAClF,aAAgB,CAAC1D,KAAM,eAAgBuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,uOACxF,KAAQ,CAAC1D,KAAM,OAAQuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,0dACxE,cAAe,CAAC1D,KAAM,cAAeuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,2SACtF,aAAc,CAAC1D,KAAM,aAAcuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,sgCACpF,SAAY,CAAC1D,KAAM,WAAYuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,4iBAChF,qBAAsB,CAAC1D,KAAM,qBAAsBuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,4LACpG,OAAU,CAAC1D,KAAM,SAAUuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,kIAC5E,MAAS,CAAC1D,KAAM,QAASuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,4tBAC1E,0BAA2B,CAAC1D,KAAM,0BAA2BuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,sbAC9G,uBAAwB,CAAC1D,KAAM,uBAAwBuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,iUACxG,MAAS,CAAC1D,KAAM,QAASuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,8kBAC1E,QAAW,CAAC1D,KAAM,UAAWuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,yLAC9E,2BAA4B,CAAC1D,KAAM,2BAA4BuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,qpBAChH,mBAAoB,CAAC1D,KAAM,mBAAoBuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,gSAChG,mBAAoB,CAAC1D,KAAM,mBAAoBuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,8mBAChG,eAAgB,CAAC1D,KAAM,eAAgBuD,KAAM,EAAGC,SAAUnC,EAAM6B,UAAWQ,YAAa,wWAGxF,UAAa,CAAC1D,KAAM,YAAauD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,4rBACjF,kBAAmB,CAAC1D,KAAM,kBAAmBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,61CAC7F,gBAAiB,CAAC1D,KAAM,gBAAiBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,80CACzF,cAAe,CAAC1D,KAAM,cAAeuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,smBACrF,qBAAsB,CAAC1D,KAAM,qBAAsBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,ulCACnG,iBAAkB,CAAC1D,KAAM,iBAAkBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,0uBAC3F,eAAgB,CAAC1D,KAAM,eAAgBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,+hBACvF,SAAY,CAAC1D,KAAM,WAAYuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,4SAC/E,eAAgB,CAAC1D,KAAM,eAAgBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,q8CACvF,WAAc,CAAC1D,KAAM,aAAcuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,oiCACnF,cAAe,CAAC1D,KAAM,cAAeuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,6wDACrF,QAAW,CAAC1D,KAAM,UAAWuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,wgBAC7E,SAAY,CAAC1D,KAAM,WAAYuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,26CAC/E,0BAA2B,CAAC1D,KAAM,0BAA2BuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,szCAC7G,UAAa,CAAC1D,KAAM,YAAauD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,mWACjF,eAAgB,CAAC1D,KAAM,eAAgBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,wmCACvF,aAAc,CAAC1D,KAAM,aAAcuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,sgBACnF,mBAAoB,CAAC1D,KAAM,mBAAoBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,6vBAC/F,gBAAiB,CAAC1D,KAAM,gBAAiBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,gZACzF,cAAe,CAAC1D,KAAM,cAAeuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,sVACrF,SAAY,CAAC1D,KAAM,WAAYuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,kUAC/E,oBAAqB,CAAC1D,KAAM,oBAAqBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,iiCACjG,wBAAyB,CAAC1D,KAAM,wBAAyBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,woCACzG,gBAAiB,CAAC1D,KAAM,gBAAiBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,gmCACzF,aAAc,CAAC1D,KAAM,aAAcuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,wYACnF,mBAAoB,CAAC1D,KAAM,mBAAoBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,yjBAC/F,YAAa,CAAC1D,KAAM,YAAauD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,gVACjF,oBAAqB,CAAC1D,KAAM,oBAAqBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,qmBACjG,UAAa,CAAC1D,KAAM,YAAauD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,s/BACjF,kBAAmB,CAAC1D,KAAM,kBAAmBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,iiCAC7F,mBAAoB,CAAC1D,KAAM,mBAAoBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,+SAC/F,oBAAqB,CAAC1D,KAAM,oBAAqBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,yhCACjG,oBAAqB,CAAC1D,KAAM,oBAAqBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,+3CACjG,cAAe,CAAC1D,KAAM,cAAeuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,6sCACrF,gBAAiB,CAAC1D,KAAM,gBAAiBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,w9BACzF,gBAAiB,CAAC1D,KAAM,gBAAiBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,mqBACzF,eAAgB,CAAC1D,KAAM,eAAgBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,gaACvF,KAAQ,CAAC1D,KAAM,OAAQuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,6yBACvE,SAAY,CAAC1D,KAAM,WAAYuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,2hBAC/E,qBAAsB,CAAC1D,KAAM,qBAAsBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,u+BACnG,aAAc,CAAC1D,KAAM,aAAcuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,0zCACnF,eAAgB,CAAC1D,KAAM,eAAgBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,qlBACvF,oBAAqB,CAAC1D,KAAM,oBAAqBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,ifACjG,UAAa,CAAC1D,KAAM,YAAauD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,4aACjF,OAAU,CAAC1D,KAAM,SAAUuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,wkBAC3E,oBAAqB,CAAC1D,KAAM,oBAAqBuD,MAAO,EAAGC,SAAUnC,EAAM8B,QAASO,YAAa,g+BAIjG,yBAA0B,CAAC1D,KAAM,yBAA0BuD,MAAO,EAAGC,SAAUnC,EAAM2B,SAAUU,YAAa,kcAC5G,yBAA0B,CAAC1D,KAAM,yBAA0BuD,MAAO,EAAGC,SAAUnC,EAAM2B,SAAUU,YAAa,4SAC5G,mBAAoB,CAAC1D,KAAM,mBAAoBuD,MAAO,EAAGC,SAAUnC,EAAM2B,SAAUU,YAAa,goBAChG,cAAiB,CAAC1D,KAAM,gBAAiBuD,MAAO,EAAGC,SAAUnC,EAAM2B,SAAUU,YAAa,yyBAC1F,mBAAoB,CAAC1D,KAAM,mBAAoBuD,MAAO,EAAGC,SAAUnC,EAAM2B,SAAUU,YAAa,uvBAChG,8BAA+B,CAAC1D,KAAM,8BAA+BuD,MAAO,EAAGC,SAAUnC,EAAM2B,SAAUU,YAAa,owBAEtH,sBAAuB,CAAC1D,KAAM,sBAAuBuD,MAAO,EAAGC,SAAUnC,EAAM0B,OAAQW,YAAa,sZACpG,uBAAwB,CAAC1D,KAAM,uBAAwBuD,MAAO,EAAGC,SAAUnC,EAAM0B,OAAQW,YAAa,0kBACtG,uBAAwB,CAAC1D,KAAM,uBAAwBuD,MAAO,EAAGC,SAAUnC,EAAM0B,OAAQW,YAAa,qUACtG,iBAAkB,CAAC1D,KAAM,iBAAkBuD,MAAO,EAAGC,SAAUnC,EAAM0B,OAAQW,YAAa,goBAC1F,iBAAkB,CAAC1D,KAAM,iBAAkBuD,MAAO,EAAGC,SAAUnC,EAAM0B,OAAQW,YAAa,obAC1F,eAAgB,CAAC1D,KAAM,eAAgBuD,MAAO,EAAGC,SAAUnC,EAAM0B,OAAQW,YAAa,0rBACtF,uBAAwB,CAAC1D,KAAM,uBAAwBuD,MAAO,EAAGC,SAAUnC,EAAM0B,OAAQW,YAAa,skBAEtG,mBAAoB,CAAC1D,KAAM,mBAAoBuD,MAAO,EAAGC,SAAUnC,EAAMyB,OAAQY,YAAa,uaAC9F,uBAAwB,CAAC1D,KAAM,uBAAwBuD,MAAO,EAAGC,SAAUnC,EAAMyB,OAAQY,YAAa,iiBACtG,uBAAwB,CAAC1D,KAAM,uBAAwBuD,MAAO,EAAGC,SAAUnC,EAAMyB,OAAQY,YAAa,4SACtG,iBAAkB,CAAC1D,KAAM,iBAAkBuD,MAAO,EAAGC,SAAUnC,EAAMyB,OAAQY,YAAa,shBAC1F,qBAAsB,CAAC1D,KAAM,qBAAsBuD,MAAO,EAAGC,SAAUnC,EAAMyB,OAAQY,YAAa,2eAClG,iBAAkB,CAAC1D,KAAM,iBAAkBuD,MAAO,EAAGC,SAAUnC,EAAMyB,OAAQY,YAAa,8bAC1F,iBAAkB,CAAC1D,KAAM,iBAAkBuD,MAAO,EAAGC,SAAUnC,EAAMyB,OAAQY,YAAa,0gBAC1F,uBAAwB,CAAC1D,KAAM,uBAAwBuD,MAAO,EAAGC,SAAUnC,EAAMyB,OAAQY,YAAa,wSAEtG,uBAAwB,CAAC1D,KAAM,uBAAwBuD,MAAO,EAAGC,SAAUnC,EAAM4B,SAAUS,YAAa,qiBACxG,yBAA0B,CAAC1D,KAAM,yBAA0BuD,MAAO,EAAGC,SAAUnC,EAAM4B,SAAUS,YAAa,uSAC5G,yBAA0B,CAAC1D,KAAM,yBAA0BuD,MAAO,EAAGC,SAAUnC,EAAM4B,SAAUS,YAAa,gcAC5G,uBAAwB,CAAC1D,KAAM,uBAAwBuD,MAAO,EAAGC,SAAUnC,EAAM4B,SAAUS,YAAa,0tBACxG,mBAAoB,CAAC1D,KAAM,mBAAoBuD,MAAO,EAAGC,SAAUnC,EAAM4B,SAAUS,YAAa,mcAChG,cAAe,CAAC1D,KAAM,cAAeuD,MAAO,EAAGC,SAAUnC,EAAM4B,SAAUS,YAAa,uhBACtF,oBAAqB,CAAC1D,KAAM,oBAAqBuD,MAAO,EAAGC,SAAUnC,EAAM4B,SAAUS,YAAa,yUAClG,mBAAoB,CAAC1D,KAAM,mBAAoBuD,MAAO,EAAGC,SAAUnC,EAAM4B,SAAUS,YAAa,itBAChG,UAAa,CAAC1D,KAAM,YAAauD,MAAO,EAAGC,SAAUnC,EAAM4B,SAAUS,YAAa,wUAUzES,GAA2B,CACpC,WAAc,CAAEnE,KAAM,aAAcoE,SAAUxB,GAAcyB,OAAQ9B,MAAO,EAAG+B,eAAgB9E,EAAgB+E,OAAQC,OAAQ,SAAUC,MAAO,GAAIC,IAAK,QAASC,KAAM,GAAIC,IAAK,OAAQC,KAAMnF,EAAYoF,OAAQC,IAAK,EAAGC,OAAQ,KAClO,YAAe,CAAEhF,KAAM,cAAeoE,SAAUxB,GAAcyB,OAAQ9B,MAAO,EAAG+B,eAAgB9E,EAAgByF,MAAOT,OAAQ,SAAUC,MAAO,EAAGC,IAAK,GAAIC,KAAM,EAAGC,IAAK,GAAIC,KAAMnF,EAAYwF,QAASH,IAAK,EAAGC,OAAQ,KACzN,iBAAkB,CAAEhF,KAAM,iBAAkBoE,SAAUxB,GAAcyB,OAAQ9B,MAAO,EAAGiC,OAAQ,SAAUG,KAAM,IAAKF,MAAO,IAAKM,IAAK,EAAGL,IAAK,QAASE,IAAK,OAAQlB,YAAa,gDAAiDY,eAAgB9E,EAAgB+E,OAAQM,KAAMnF,EAAYyF,MAAOH,OAAQ,GAIzS,SAAa,CAAEhF,KAAM,WAAYoE,SAAUxB,GAAcwC,MAAO7C,MAAO,EAAGiC,OAAQ,oBAAqBO,IAAK,EAAGF,KAAMnF,EAAY2F,OAAQC,IAAK,IAAK7B,cAAe,OAAQ/C,OAAQ,OAAQ6E,WAAY,sBAAuBd,MAAO,mBAAoBe,WAAW,EAAOC,QAAS,CAAChG,EAAWiG,OAAQjG,EAAWkG,eAAgBjC,YAAa,ukBAC/U,mBAAqB,CAAE1D,KAAM,mBAAoBoE,SAAUxB,GAAcwC,MAAO7C,MAAO,EAAGiC,OAAQ,SAAUO,IAAK,EAAGF,KAAMnF,EAAY2F,OAAQC,IAAK,IAAK7B,cAAe,iBAAkB/C,OAAQ,OAAQ6E,WAAY,sBAAuBC,WAAW,EAAMC,QAAS,CAAChG,EAAWiG,OAAQjG,EAAWkG,eAAgBjC,YAAa,woBAMzTkC,GAAuC,CAChD,iBAAkB,CACd5F,KAAM,iBACNuC,MAAO,EACP6B,SAAUxB,GAAciD,OACxBlE,KAAM,EACNE,KAAM,EACND,KAAM,EACNF,KAAM,EACND,KAAM,GAEV,gBAAiB,CACbzB,KAAM,gBACNuC,MAAO,EACP6B,SAAUxB,GAAciD,OACxBrE,KAAM,IAIDsE,GAAoB,yBAC7B,SAAY,CACR9F,KAAM,WACNuC,MAAO,EACP6B,SAAUxB,GAAcmD,KACxBrC,YAAa,2ZAEjB,aAAc,CACV1D,KAAM,aACNuC,MAAO,EACP6B,SAAUxB,GAAcmD,KACxBrC,YAAa,uDAEdS,IACAyB,IEnVMI,IAAiB,IAC1B,aAAc,CACVhG,KAAM,aACNuC,MAAO,EACP6B,SAAUxB,GAAcmD,KACxBrC,YAAa,sDAEjB,WAAc,CACV1D,KAAM,aACNoE,SAAUxB,GAAcyB,OACxB9B,MAAO,EACP+B,eAAgB9E,EAAgB+E,OAChCC,OAAQ,SACRC,MAAO,GACPC,IAAK,QACLC,KAAM,GACNC,IAAK,OACLC,KAAMnF,EAAYoF,OAClBC,IAAK,EACLC,OAAQ,MAnBc,6BAqBT,CACbhF,KAAM,cACNoE,SAAUxB,GAAcyB,OACxB9B,MAAO,EACP+B,eAAgB9E,EAAgByF,MAChCT,OAAQ,SACRC,MAAO,EACPC,IAAK,GACLC,KAAM,EACNC,IAAK,GACLC,KAAMnF,EAAYwF,QAClBH,IAAK,EACLC,OAAQ,MAjCc,eAmCzB,cAAgB,CACbhF,KAAM,cACNuC,MAAO,EACP6B,SAAUxB,GAAciD,OACxBpE,KAAM,KAvCgB,IA4CjBwE,GAAiB5F,YAAY,CACtCL,KAAM,QACNM,aAAc0F,GACdzF,SAAU,CACN2F,QAAS,SAACzF,EAAOC,GAAkC,IAAD,EACtCV,EAASU,EAAOC,QAAhBX,KACFmG,EAAQ,UAAG1F,EAAMT,UAAT,aAAG,EAAauC,MAC9B9B,EAAMT,GAAN,2BAAmBU,EAAOC,SAA1B,IAAmC4B,MAAO4D,EAAWA,EAAW,EAAI,KAExEC,cAAe,SAAC3F,EAAOC,GACnB,IAAM2F,EAAW3F,EAAOC,QACxB,GAAIF,EAAM4F,GACN5F,EAAM4F,GAAU9D,YACb,CACHzB,QAAQC,IAAIsF,GACZvF,QAAQC,IAAI+E,GAASO,IACrBvF,QAAQC,MACR,IAAMuF,EAAOR,GAASO,GAEf5F,EAAM4F,GAAbC,GACwB,CAAEtG,KAAMqG,EAAU9D,MAAO,EAAG6B,SAAUxB,GAAc2D,QAGpFC,iBAAkB,SAAC/F,EAAOC,GACtBD,EAAMC,EAAOC,QAAQX,MAAQU,EAAOC,eAC7BF,EAAMC,EAAOC,QAAQ8F,UAEhCC,WAAY,SAACjG,EAAOC,GAChBD,EAAMC,EAAOC,QAAQX,MAAQU,EAAOC,SAExCgG,WAAY,SAAClG,EAAOC,GAChBD,EAAMC,EAAOC,QAAQX,MAAQU,EAAOC,SAExCiG,WAAY,SAACnG,EAAOC,GAChB,IAAM4F,EAAO5F,EAAOC,QACD,IAAf2F,EAAK/D,aACE9B,EAAM6F,EAAKtG,MAElBS,EAAM6F,EAAKtG,MAAMuC,SAGzBsE,gBAAiB,SAACpG,EAAOC,GACrB,IAAM4F,EAAO5F,EAAOC,QACpBF,EAAM6F,EAAKtG,MAAM0D,YAAc4C,EAAK5C,aAExCoD,aAAc,SAACrG,EAAOC,GAClB,IAAM4F,EAAO5F,EAAOC,QACpBF,EAAM6F,EAAKtG,MAAMoE,SAAWkC,EAAKlC,UAErC2C,gBAAiB,SAACtG,EAAOC,GACrB,IAAMsG,EAAYtG,EAAOC,QAEzB,IAAI,IAAM2F,KAAQ7F,SACPA,EAAM6F,GAEjB,IAAK,IAAMtG,KAAQgH,EACfvG,EAAMT,GAAQgH,EAAUhH,O,GAiBpCiG,GAAe7E,QATf8E,G,GAAAA,QACAE,G,GAAAA,cACAI,G,GAAAA,iBACAE,G,GAAAA,WACAC,G,GAAAA,WACAC,G,GAAAA,WACAC,G,GAAAA,gBACAC,G,GAAAA,aACAC,G,GAAAA,gB,IAEWd,GAAf,Q,MC7FagB,GAAa,SAAC,GAA2E,IAAzEC,EAAwE,EAAxEA,OAAwE,IAAhEC,gBAAgE,WACnEC,mBAASF,EAAOlH,MADmD,mBAC1FqH,EAD0F,KACjFC,EADiF,KAG3FC,EAAiB1H,GAAe,SAAAY,GAAK,OAAIA,EAAM+G,QAAQzF,QAAQmF,EAAOlH,SACtEgC,EAAYnC,GAAe,SAAAY,GAAK,OAAIA,EAAMuB,aAC1Cd,EAAkBrB,GAAe,SAAAY,GAAK,OAAIA,EAAMS,mBAL2C,EAMzDkG,mBAAS,IANgD,mBAM1FK,EAN0F,KAM5EC,EAN4E,OAQzEN,oBAAS,GARgE,mBAQ1FO,EAR0F,KAQpFC,EARoF,OASzER,mBAAS,IATgE,mBAS1FS,EAT0F,KASpFC,EAToF,OAUnEV,mBAAS,WAV0D,mBAU1FW,EAV0F,KAUjFC,EAViF,KAY3FC,EAAWtI,IAGjB,SAASuI,EAAwBC,GAC7B,OAAQA,GACJ,KAAK3I,EAAgB4I,MACjB,OAAO,eAAC,KAAD,IACX,KAAK5I,EAAgB+E,OACjB,OAAO,eAAC,KAAD,IACX,KAAK/E,EAAgByF,MACjB,OAAO,eAAC,KAAD,IAEf,OAAO,eAAC,KAAD,IAIX,SAASoD,EAAoBC,GACzB,OAAQA,GACJ,KAAK5I,EAAYoF,OACb,OAAO,eAAC,KAAD,IACX,KAAKpF,EAAYwF,QACb,OAAO,eAAC,KAAD,IACX,KAAKxF,EAAY6I,OACb,OAAO,eAAC,KAAD,IACX,KAAK7I,EAAYyF,MACb,OAAO,eAAC,KAAD,IAIf,OAAO,eAAC,KAAD,IAGX,SAASqD,IACL,OAAO,gBAACC,EAAA,EAAD,WACH,eAACA,EAAA,EAASC,OAAV,CAAiBX,QAAQ,UAAUY,GAAG,iBAAtC,SACKT,EAAwBhB,EAAO5C,kBAGpC,eAACmE,EAAA,EAASG,KAAV,UACKC,OAAOC,OAAOtJ,GAAiBuJ,KAAI,SAAC9I,EAAO+I,GAEpC,IAAMC,EAAIzJ,EAAgBwJ,GAC1B,OAAOC,EAAI,eAACR,EAAA,EAASS,KAAV,CAEPC,QAAS,WACLlB,EAASvB,GAAW,2BAAKQ,GAAN,IAAc5C,eAAgB0E,OAH9C,SAIHC,GAJG,4BACmBA,IAGD,aAOjD,SAASG,IAAyB,IAAVC,EAAS,uDAAH,EAC1B,OAAOlC,EACH,gBAACmC,EAAA,EAAD,CAAKC,GAAIF,EAAT,cAAe,eAAC,KAAD,IAAf,IAA2B,eAACG,EAAA,EAAD,CAAaC,KAAM,KACNxJ,MAAOiH,EAAOlC,OACd0E,YAAa,IACbC,aAAW,SACXC,SAAU,SAACC,GAAD,OAAW5B,EAASvB,GAAW,2BAClCQ,GADiC,IAEpClC,OAAQ8E,SAASD,EAAME,OAAO9J,cAN1E,OAQE,gBAACqJ,EAAA,EAAD,CAAKC,GAAIF,EAAT,cAAe,eAAC,KAAD,IAAf,IAA4BnC,EAAOlC,OAAnC,OAIV,SAASgF,IACL,OAAO7C,EACH,gBAACmC,EAAA,EAAD,CAAKC,GAAI,EAAT,mBAEI,eAACC,EAAA,EAAD,CAAaC,KAAM,KACNxJ,MAAOiH,EAAO1C,OACdkF,YAAa,SACbC,aAAW,0BACXC,SAAU,SAACC,GAAD,OAAW5B,EAASvB,GAAW,2BAAKQ,GAAN,IAAc1C,OAAQqF,EAAME,OAAO9J,aACxF,iCACI,eAACgK,EAAA,EAAD,CAAOlC,QAAS,UAAWmC,MAAO,CAAEC,OAAQ,WACrChB,QAAS,kBAAMlB,EAASvB,GAAW,2BAC5BQ,GAD2B,IAE9BnC,IAAKmC,EAAOnC,IAAMmC,EAAOnC,IAAM,EAAI,OAH9C,eAKA,gBAACkF,EAAA,EAAD,CAAOG,MAAM,EAAMrC,QAAS,YAA5B,cAA0C,eAAC,KAAD,IAA1C,IAA6Db,EAAOnC,IAAMmC,EAAOnC,IAAM,EAAvF,OACA,eAACkF,EAAA,EAAD,CAAOlC,QAAS,SAAUmC,MAAO,CAAEC,OAAQ,WACpChB,QAAS,kBAAMlB,EAASvB,GAAW,2BAC5BQ,GAD2B,IAE9BnC,IAAKmC,EAAOnC,IAAMsF,KAAKC,IAAIpD,EAAOnC,IAAM,EAAG,GAAK,OAH3D,kBAOJ,gBAAC0D,EAAA,EAAD,WACI,eAACA,EAAA,EAASC,OAAV,CAAiBX,QAAQ,UAAUY,GAAG,iBAAtC,SACKN,EAAoBnB,EAAOrC,QAGhC,eAAC4D,EAAA,EAASG,KAAV,UACKC,OAAOC,OAAOpJ,GAAaqJ,KAAI,SAAC9I,EAAO+I,GAEhC,IAAMC,EAAIvJ,EAAYsJ,GACtB,OAAOC,EAAI,eAACR,EAAA,EAASS,KAAV,CAEPC,QAAS,WACLlB,EAASvB,GAAW,2BAAKQ,GAAN,IAAcrC,KAAMmE,OAHpC,SAKTC,GALS,4BACmBA,IAIP,gBAOzC,gBAACK,EAAA,EAAD,CAAKC,GAAI,EAAT,UAAarC,EAAO1C,OAApB,IAA4B,gBAACyF,EAAA,EAAD,CAAOG,MAAM,EAAMrC,QAAS,YAA5B,cAA0C,eAAC,KAAD,IAA1C,IAA6Db,EAAOnC,OAAhG,OAIV,SAASwF,IACL,OAAOpD,EACH,gBAACmC,EAAA,EAAD,eAAM,eAAC,KAAD,IAAN,SAA2B,eAACE,EAAA,EAAD,CAAaC,KAAM,KACNC,YAAa,KACbzJ,MAAOiH,EAAOzC,MACdkF,aAAW,aACXC,SAAU,SAACC,GAAD,OAAW5B,EAASvB,GAAW,2BAClCQ,GADiC,IAEpCzC,MAAOqF,SAASD,EAAME,OAAO9J,cANzE,eASI,eAACuJ,EAAA,EAAD,CAAaC,KAAM,KACNxJ,MAAOiH,EAAOxC,IACdgF,YAAa,QACbC,aAAW,eACXC,SAAU,SAACC,GAAD,OAAW5B,EAASvB,GAAW,2BAAKQ,GAAN,IAAcxC,IAAKmF,EAAME,OAAO9J,gBAEvF,gBAACqJ,EAAA,EAAD,eAAM,eAAC,KAAD,IAAN,IAAuBpC,EAAOzC,MAA9B,OAAyCyC,EAAOxC,IAAhD,OAGV,SAAS8F,IACL,OAAOrD,EACH,gBAACmC,EAAA,EAAD,eAAM,eAAC,KAAD,IAAN,aAAuC,eAACE,EAAA,EAAD,CAAaC,KAAM,KACNxJ,MAAOiH,EAAOvC,KACd+E,YAAa,IACbC,aAAW,WACXC,SAAU,SAACC,GAAD,OAAW5B,EAASvB,GAAW,2BAClCQ,GADiC,IAEpCvC,KAAMmF,SAASD,EAAME,OAAO9J,cAEhF,eAAC,KAAD,IARJ,WAQgC,eAACuJ,EAAA,EAAD,CAAaC,KAAM,KACNxJ,MAAOiH,EAAOtC,IACd8E,YAAa,cACbC,aAAW,WACXC,SAAU,SAACC,GAAD,OAAW5B,EAASvB,GAAW,2BAClCQ,GADiC,IAEpCtC,IAAKiF,EAAME,OAAO9J,gBAIjE,gBAACqJ,EAAA,EAAD,eAAM,eAAC,KAAD,IAAN,IAA+BpC,EAAOvC,KAAtC,IAA4C,eAAC,KAAD,IAA5C,IAAkEuC,EAAOtC,IAAzE,OAGV,SAAS6F,IACL,OAAOlD,EACH,eAAC+B,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACU,EAAA,EAAD,CAAOlC,QAAS,SAAUmC,MAAO,CAAEC,OAAQ,WACpChB,QAAS,WACLlB,EAASzF,EAAa0E,IACtBe,EAAS/B,GAAQgB,KAH5B,iBAMK,+BAGjB,SAASwD,IACL,OAAO,eAACpB,EAAA,EAAD,UACH,eAACqB,EAAA,EAAD,CAEIC,QACI,eAACC,GAAA,EAAD,CACIlC,GAAE,kBAAazB,EAAOlH,MAD1B,SACmCkH,EAAOxD,YAAcwD,EAAOxD,YAAc,oBAJrF,SAMKyD,EAAW,gBAAC2D,EAAA,EAAD,WACFC,IAII,+BAHF,eAACzB,EAAA,EAAD,CAAKC,GAAI,EAAT,SACKf,MAIT,gBAACc,EAAA,EAAD,WACKyB,IAAkBvC,IAA0B,+BAC7C,gBAACwC,GAAA,EAAD,WACI,eAACxB,EAAA,EAAD,CAAaC,KAAM,KACNxJ,MAAOoH,EACPqC,YAAa,cACbC,aAAW,cACXC,SAAU,SAACC,GAAD,OAAWvC,EAAWuC,EAAME,OAAO9J,UAC1D,eAAC+K,GAAA,EAAWC,OAAZ,UACI,eAACC,EAAA,EAAD,CAAQzB,KAAM,KACNC,YAAa,OACbP,QAAS,SAACU,GACN5B,EAASzB,GAAiB,2BACnBU,GADkB,IAErBlH,KAAMqH,EACNZ,QAASS,EAAOlH,UANhC,SASI,eAAC,KAAD,CAAqBmK,OAAQ,UAAWgB,MAAO,uBAOnE,iCAAMjD,EAAwBhB,EAAO5C,gBAArC,IAAuD+D,EAAoBnB,EAAOrC,MAAlF,IAA0FqC,EAAOlH,SAtCzG,4BAC8BkH,EAAOlH,SA4C7C,SAASoL,IAKL,IAJA,IAAMC,EAAiBN,IAAkB7J,EAAe,GAASA,EAAe,GAC1EoK,EAAY,CAAC,eAAC7C,EAAA,EAAS8C,OAAV,+CAAoCrE,EAAOlH,QAF3C,WAKVwL,GACLF,EAAUG,KAAK,eAAChD,EAAA,EAASS,KAAV,CAAoDC,QAAS,kBAAMzB,EAAgB8D,IAAnF,SAAwFA,GAAxF,UAAuBtE,EAAOlH,KAA9B,qBAA+CwL,MADzDA,EAAI,GAAIA,GAAK,GAAIA,GAAK,GAAK,EAA3BA,GAIT,OAAO,gBAACV,EAAA,EAAD,WACH,eAACxB,EAAA,EAAD,UACI,eAACoC,GAAA,EAAD,CAAgBjC,KAAK,KAAKkC,MAAOlE,EAAcM,QAAS,YAAxD,SACKuD,MAGT,eAAChC,EAAA,EAAD,UACI,gBAAC4B,EAAA,EAAD,CAAQzB,KAAK,KAAK1B,QAAQ,QAClBoB,QAAS,kBAkBPyC,ECtNnB,SAAiCC,EAAuBC,EAAkB5K,GAA8G,IAA3E6K,EAA0E,uDAAvD,EAAGC,EAAoD,uDAAnC,EAAGC,EAAgC,uDAAhB,IACpKL,EAAqB,2BAAQM,GAAKF,EAAQC,IAArB,IAA6BE,SAAUC,GAAUC,IAAKnL,kBAAiB6K,aAKlG,OAJAH,EAAWU,OAASV,EAAWW,QAAUrL,EAAgBjB,MAAQ2L,EAAWG,SAE5ES,GAAYX,EAAD,qBAA8B3K,EAAgBlB,MAAQyM,GAAqBb,GAAaE,GAE5FF,ED8LyCc,CAAwB1K,EAAU2K,QAAQ3K,EAAU2K,QAAQC,QAAS5K,EAAU6K,cAAexB,EAAgB5D,GAmB1JO,EAAW4D,EAAWU,OAAS,UAAY,UAC3C1E,GAAQ,GACRkF,YAAW,kBAAMlF,GAAQ,KAAQ,WACjCE,EAAQ,QAAD,OAAS8D,EAAW1K,gBAAgBjB,MAAQ2L,EAAWG,SAAvD,mBAA0EH,EAAWW,QAArF,mBAAuGX,EAAWU,OAAS,UAAY,SAAvI,sBACLS,GAAenB,EAAWW,WALhC,IAAsBX,GAnBV,UAGI,eAAC,KAAD,CAAa1B,MAAO,CAAEC,OAAQ,aAHlC,YAOJ,eAACb,EAAA,EAAD,UACI,gBAAC4B,EAAA,EAAD,CAAQzB,KAAK,KAAK1B,QAAQ,QAClBoB,QAAS,kBAkBJyC,EAlB0BoB,GAA2BhL,EAAU2K,QAAQ3K,EAAU2K,QAAQC,QAAS5K,EAAU6K,cAAe3F,GAmBhJU,GAAQ,GACRA,GAAQ,GACRI,EAAW,QACX8E,YAAW,kBAAMlF,GAAQ,KAAQ,WACjCE,EAAQ,WAAD,OAAY8D,EAAWW,QAAUX,EAAWpH,OAA5C,mBAA6DoH,EAAW7G,IAAxE,qBAAwFkI,KAAKC,UAAUtB,EAAWuB,SAL7H,IAAyBvB,GAnBb,UAGI,eAAC,KAAD,CAAWT,MAAO,UACPjB,MAAO,CAAEC,OAAQ,aAJhC,kBA2BZ,SAASY,IACL,OAAO7D,EAAO5C,eAAiB9E,EAAgB4N,EAsDnD,OAlDQrC,IAQG,gBAACsC,GAAA,EAAD,WACH,eAACA,GAAA,EAAK9B,OAAN,UACI,gBAACT,EAAA,EAAD,WACKJ,IACAV,IACAZ,IACAqB,SAGT,gBAAC4C,GAAA,EAAKC,KAAN,CAAWpD,MAAO,CAAEqD,QAAS,IAA7B,UACKnC,IACD,eAACoC,GAAA,EAAD,CAAOC,QAAS,kBAAM7F,GAAQ,IAAQD,KAAMA,EAAMI,QAASA,EAA3D,SACKF,SAZN,oBAAwBX,EAAOlH,OAoB/B,gBAACqN,GAAA,EAAD,WACH,eAACA,GAAA,EAAK9B,OAAN,UACI,gBAACT,EAAA,EAAD,WACKJ,IACAV,IACAZ,IACAqB,SAGT,gBAAC4C,GAAA,EAAKC,KAAN,CAAWpD,MAAO,CAAEqD,QAAS,GAA7B,UACI,gBAACzC,EAAA,EAAD,WACKP,IACAC,OAEJY,IACD,eAACoC,GAAA,EAAD,CAAOC,QAAS,kBAAM7F,GAAQ,IAAQD,KAAMA,EAAMI,QAASA,EAA3D,SACKF,SAhBN,oBAAwBX,EAAOlH,Q,uCE5VjC0N,GAAY,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAElB3L,EAAYnC,GAAe,SAAAY,GAAK,OAAIA,EAAMuB,aAEhD,OAAO,gBAACqL,GAAA,EAAD,WACH,eAACA,GAAA,EAAK9B,OAAN,UACI,eAACZ,EAAA,EAAD,CAEIC,QACI,eAACC,GAAA,EAAD,CACIlC,GAAE,kBAAagF,EAAM3N,MADzB,SACkC2N,EAAMjK,YAAciK,EAAMjK,YAAc,oBAJlF,SAMI,iCACI,eAAC,KAAD,IAAiBiK,EAAM3N,SAP/B,2BAC6B2N,EAAM3N,SAUvC,gBAACqN,GAAA,EAAKC,KAAN,WACI,gBAACxC,EAAA,EAAD,WACI,gBAACxB,EAAA,EAAD,WAAMqE,EAAMnJ,OAAZ,IAAoB,gBAACyF,EAAA,EAAD,CAAOG,MAAM,EAAMrC,QAAS,YAA5B,cAA0C,eAAC,KAAD,IAA1C,IAA6D4F,EAAM5I,IAAnE,OAApB,OACA,gBAACuE,EAAA,EAAD,eAAM,eAAC,KAAD,IAAN,IAAuBqE,EAAMlJ,MAA7B,UAEJ,gBAACqG,EAAA,EAAD,WACI,gBAACxB,EAAA,EAAD,WAAK,eAAC,KAAD,IAAL,IAAsBqE,EAAMpI,cAC5B,gBAAC+D,EAAA,EAAD,yBAAiBqE,EAAMnI,UAAY,MAAQ,WAG/C,eAAC8D,EAAA,EAAD,UACI,gBAAC4B,EAAA,EAAD,CAAQzB,KAAK,KAAK1B,QAAQ,QAClBoB,QAAS,kBAAM6D,GAA2BhL,EAAU2K,QAAQ3K,EAAU2K,QAAQC,QAAS5K,EAAU6K,cAAec,IADxH,UAEI,eAAC,KAAD,CAAWxC,MAAO,UACPjB,MAAO,CAAEC,OAAQ,aAHhC,sB,oBJpCJjG,O,qCAAAA,I,mBAAAA,I,qBAAAA,I,qBAAAA,I,yBAAAA,I,uBAAAA,I,2BAAAA,I,oBAAAA,Q,KKqBL,IFhBFkI,GEgBQwB,GAAiBvN,YAAY,CACtCL,KAAM,YACNM,aAAc,CACVuM,cAAe,iBACfF,QAAS,CACLC,OAAQ,OACRiB,KAAM,GACNC,MAAO,IAGXC,OAAQ,CACJC,KAAM,CAAC9J,GAAU+J,QACjBC,KAAM,CAAChK,GAAUiK,gBAAiB,EAAG,EAAG,EAAG,EAAG,GAC9CC,MAAO,CAAClK,GAAUmK,cAG1B9N,SAAU,CACN+N,gBAAiB,SAAC7N,EAAOC,GAAY,IAAD,EACqBA,EAAOC,QAApDkM,EADwB,EACxBA,cAAeF,EADS,EACTA,QAASoB,EADA,EACAA,OAAQvK,EADR,EACQA,SACxC/C,EAAMoM,cAAgBA,EACtBpM,EAAMkM,QAAUA,EAChBlM,EAAMsN,OAASA,EACftN,EAAM+C,SAAWA,GAErB+K,iBAAkB,SAAC9N,EAAOC,GACtBD,EAAMoM,cAAgBnM,EAAOC,SAEjC6N,iBAAkB,SAAC/N,EAAOC,GACtBD,EAAMkM,QAAQkB,KAAOnN,EAAOC,SAEhC8N,sBAAuB,SAAChO,EAAOC,GAC3BD,EAAMkM,QAAQmB,MAAQpN,EAAOC,SAEjC+N,iBAAkB,SAACjO,EAAOC,GACtBD,EAAMkM,QAAQC,OAASlM,EAAOC,SAElCgO,YAAa,SAAClO,EAAOC,GACjBD,EAAM+C,SAAWX,GAAanC,EAAOC,UAEzCiO,UAAW,SAACnO,EAAOC,GACfI,QAAQC,IAAIL,EAAOC,SACnBF,EAAMsN,OAASrN,EAAOC,SAE1BkO,aAAc,SAACpO,EAAOC,GAA2D,IAAD,EACrDA,EAAOC,QAAvBmO,EADqE,EACrEA,MAAO9F,EAD8D,EAC9DA,MAEVvI,EAAMsN,OAAOC,KAAKe,QAAQ/F,IAAU,GAAKvI,EAAMsN,OAAOC,KAAKgB,OAAOvO,EAAMsN,OAAOC,KAAKe,QAAQ/F,GAAQ,GACpGvI,EAAMsN,OAAOG,KAAKa,QAAQ/F,IAAU,GAAKvI,EAAMsN,OAAOG,KAAKc,OAAOvO,EAAMsN,OAAOG,KAAKa,QAAQ/F,GAAQ,GACpGvI,EAAMsN,OAAOK,MAAMW,QAAQ/F,IAAU,GAAKvI,EAAMsN,OAAOK,MAAMY,OAAOvO,EAAMsN,OAAOK,MAAMW,QAAQ/F,GAAQ,GAE3GvI,EAAMsN,OAAOe,GAAOrD,KAAKzC,GACzBvI,EAAMsN,OAAOe,GAAOG,W,GAMsHrB,GAAexM,QAAtJkN,G,GAAAA,gBAAiBC,G,GAAAA,iBAAkBG,G,GAAAA,iBAAkBF,G,GAAAA,iBAAkBC,G,GAAAA,sBAAuBE,G,GAAAA,YAAwBE,I,GAAXD,U,GAAWC,cCxExHK,IDyEEtB,GAAf,QCzEmC,SAAC,GAGyF,IAAD,IAFpF5N,YAEoF,MAF7E,aAE6E,EADpFmP,EACoF,EADpFA,gBAK9BtL,EAHUhE,GAAe,SAAAY,GAAK,OAAIA,EAAMwD,WAGvBjE,GAWvB,OAAO,eAAC2K,EAAA,EAAD,CAEHyE,UAAW,SACXxE,QACI,eAACC,GAAA,EAAD,CAASlC,GAAE,kBAAa9E,EAAO7D,MAA/B,SACK6D,EAAOH,cALb,SASH,sBAAKyF,QAAS,kBAAMgG,EAAgBtL,IAApC,SACI,eAACoG,EAAA,EAAD,oBAnBR,SAA4B1G,GACxB,OAAQA,GACJ,KAAM,EAAG,MAAO,SAChB,KAAM,EAAG,MAAO,OAChB,KAAK,EAAG,MAAO,QACf,QAAS,MAAM,IAAN,OAAWA,IAcT8L,CAAmBxL,EAAON,MAArC,YAA8CM,EAAO7D,MAArD,OAA4D6D,EAAOyL,eAAP,YAA6BzL,EAAOyL,eAApC,KAAwD,SAVrH,iBACYzL,EAAO7D,SCKjBuP,GAAU,WAEnB,IAOMC,EAAa3P,GAAe,SAAAY,GAAK,OAAIA,EAAMS,gBAAN,OACrCuO,EAAgB5P,GAAe,SAAAY,GAAK,OAAIA,EAAMS,gBAAN,KACxCwO,EAAc7P,GAAe,SAAAY,GAAK,OAAIA,EAAMS,gBAAN,MACtCyO,EAAe9P,GAAe,SAAAY,GAAK,OAAIA,EAAM+G,WAC7CxF,EAAYnC,GAAe,SAAAY,GAAK,OAAIA,EAAMuB,aAC1CiC,EAAUpE,GAAe,SAAAY,GAAK,OAAIA,EAAMwD,WACxC2L,EAAa/P,GAAe,SAAAY,GAAK,OAAIA,EAAMmP,cAC3C3H,EAAWtI,IAhBQ,EAkBeyH,mBAAS,GAlBxB,mBAkBlByI,EAlBkB,KAkBJC,EAlBI,KAoBnBC,EAAU1F,KAAK2F,MAAMN,EAAYzP,MAAQ,GAAKyP,EAAYvP,MAAQ0P,GAClEtO,EAASoO,EAAapO,OACtB0O,EAAYN,EAAa3N,UAAUE,UACnCgO,EAAoB7F,KAAK2F,MAAMR,EAAWvP,MAAQ,GAAKuP,EAAWrP,OAClEgQ,EAAqB9F,KAAK2F,MAAMP,EAAcxP,MAAQ,GAAKwP,EAActP,OAxBtD,EA0BGiH,mBAAS8I,GA1BZ,mBA0BlBE,EA1BkB,KA0BVC,EA1BU,OA2BKjJ,mBAAS,GA3Bd,mBA2BlBkJ,EA3BkB,KA2BTC,EA3BS,OA4BWnJ,oBAAS,GA5BpB,mBA4BlBoJ,EA5BkB,KA4BNC,EA5BM,OA6ByBrJ,oBAAS,GA7BlC,mBA6BlBsJ,EA7BkB,KA6BCC,EA7BD,KA+BnBC,EAASjB,EAAa3N,UAAUC,cAEtC,SAAS4O,IACL,IAAMC,EAAkBF,EAA4D,GAAlDnB,EAAcxP,MAAQ,GAAKwP,EAActP,OAAc,mBAAqB,GAC9G,MAAM,GAAN,OAAU2Q,GAAV,OAA2BF,EAASX,EAAT,gBAA8BW,EAASX,GAAvC,UAAwDW,EAAxD,YAAkEX,IAIjG,IADA,IAAM3E,GAAY,CAAC,eAAC7C,EAAA,EAAS8C,OAAV,oDAtCM,YAuChBC,GACLF,GAAUG,KAAK,eAAChD,EAAA,EAASS,KAAV,CAA0CC,QAAS,kBAAM2G,EAAgBtE,IAAzE,SAA8EA,GAA9E,wBAAqCA,MAD/CA,GAAI,GAAIA,IAAK,GAAIA,IAAK,EAAI,GAA1BA,IA4BT,SAASuF,KAAgB,IAAD,EACdC,GAAM,mBACP3P,EAAM6B,UAAY,GADX,cAEP7B,EAAM8B,QAAU,GAFT,cAGP9B,EAAMyB,OAAS,GAHR,cAIPzB,EAAM2B,SAAW,GAJV,cAKP3B,EAAM4B,SAAW,GALV,cAMP5B,EAAM0B,OAAS,GANR,GAYZ,OAJA8F,OAAOC,OAAO7E,GAASgN,SAAQ,SAAAC,GAAC,OAAKA,EAAE1N,YAClC2N,QAAQ,SAAAC,GAAC,OAAIA,KACbC,SAAQ,SAAApR,GAAK,OAAI+Q,EAAO/Q,QAC7B2P,EAAW0B,QAAQH,QAAO,SAAAC,GAAC,OAAIA,EAAE5N,YAAU6N,SAAQ,SAAApI,GAAqB,SAAXA,EAAEpE,MAA8B,UAAXoE,EAAEpE,MAAoBmM,EAAO/H,EAAEzF,eAC1GwN,EAGX,OAAO,iCACH,eAAClG,EAAA,EAAD,UACI,eAACxB,EAAA,EAAD,UACI,8CAGR,gBAACwB,EAAA,EAAD,WACI,eAACxB,EAAA,EAAD,UAEI,eAACwB,EAAA,EAAD,UACI,eAACxB,EAAA,EAAD,UACKT,OAAOC,OAAO6G,EAAa5N,SAASgH,KAAK,SAAC7B,GAAD,OAClC,+BACKA,EAAO9C,WAAaxB,GAAcyB,OAAS,eAAC,GAAD,CAAY6C,OAAQA,IAC1DA,EAAO9C,WAAaxB,GAAcwC,MAChC,eAAC,GAAD,CAAWuI,MAAOzG,IAAsB,gCAHpD,aAAgBA,EAAOlH,gBAU3C,gBAACsJ,EAAA,EAAD,WACI,gBAACwB,EAAA,EAAD,WACI,eAACxB,EAAA,EAAD,CAAKC,GAAI,EAAT,SACKV,OAAOC,OAAO6G,EAAa7N,MAAMiH,KAAI,SAAAjH,GAAI,OACtC,gBAACgJ,EAAA,EAAD,WACI,eAACxB,EAAA,EAAD,CAAKC,GAAI,GAAT,SAAczH,EAAK9B,OACnB,gBAACsJ,EAAA,EAAD,CAAKC,GAAI,EAAT,cAAa,eAACU,EAAA,EAAD,CAAOlC,QAAS,SAAUmC,MAAO,CAAEC,OAAQ,WACpChB,QAAS,WACLlB,EAAS5F,EAAWP,IACpBmG,EAAS/B,GAAQpE,KAH5B,oBAFjB,eAAkBA,EAAK9B,YAW/B,eAACsJ,EAAA,EAAD,CAAKC,GAAI,CAAEgI,KAAM,GAAjB,SAAsB,gBAAClE,GAAA,EAAD,eAAO,eAACA,GAAA,EAAKmE,IAAN,CAAUC,IAtHrC,s3CAuHE,gBAACpE,GAAA,EAAKqE,WAAN,WACI,eAACzH,EAAA,EAAD,CAAO0H,UAAW,gBAAiB5J,QAAS,YAAaqC,MAAI,EAA7D,SAA+D7I,EAAOC,OACrEgP,EAAa,eAACvG,EAAA,EAAD,CAAOlC,QAAS,OAAhB,yBAAyC6J,UAG/D,eAACtI,EAAA,EAAD,UACI,eAACwB,EAAA,EAAD,UACI,gBAACxB,EAAA,EAAD,WACI,eAACwB,EAAA,EAAD,UACI,eAACI,EAAA,EAAD,CAAQnD,QAASyI,EAAa,UAAY,YAAarH,QAAS,kBAAMsH,GAAeD,IAArF,SAAkG,eAAC,KAAD,QAGtG,gBAAC1F,EAAA,EAAD,WACI,gBAACI,EAAA,EAAD,CACI/B,QAAS,kBJzF1C,SAAkC0C,EAAuBC,EAAkB3L,GAAsE,IAAvD6L,EAAsD,uDAArC,EAAGC,EAAkC,uDAAlB,IAC3HL,EAAqB,2BAAQM,GAAKF,EAAQC,IAArB,IAA6BE,SAAUC,GAAUyF,KAAM1R,UAIlF,OAFAqM,GAAYX,EAAe,cAAeY,GAAqBb,GAAaE,GAErEF,EIoF4CkG,CAAyB9P,EAAU2K,QAAQ3K,EAAU2K,QAAQC,QAAS5K,EAAU6K,cAAekD,EAAS,EAAG,KAC1HhI,QAAS,QAFb,UAEsB,eAAC,KAAD,CAAWoD,MAAO,UAAWjB,MAAO,CAAEC,OAAQ,aAFpE,WAIA,eAACuB,GAAA,EAAD,CAAgBjC,KAAK,KAAKkC,MAAOkE,EAAc9H,QAAS,YAAxD,SACKuD,kBAOzB,gBAACR,EAAA,EAAD,WACI,eAACxB,EAAA,EAAD,CAAKC,GAAI,CAAEwI,OAAQ,EAAGR,KAAM,GAA5B,SAAiC,gBAAClE,GAAA,EAAD,eAAO,eAACA,GAAA,EAAKmE,IAAN,CAAUC,IA9IhD,q+DA+IE,gBAACpE,GAAA,EAAKqE,WAAN,WACI,gBAACzH,EAAA,EAAD,CAAO0H,UAAW,gCAAiCvH,MAAI,EAAvD,UAAyD7I,EAAOG,KAAhE,OACC8O,EAAa,eAACvG,EAAA,EAAD,CAAOlC,QAAS,OAAhB,0BAA0C6J,UAGhE,eAACtI,EAAA,EAAD,CAAKC,GAAI,CAAEgI,KAAM,GAAjB,SAAsB,gBAAClE,GAAA,EAAD,eAAO,eAACA,GAAA,EAAKmE,IAAN,CAAUC,IAtJrC,miCAuJE,gBAACpE,GAAA,EAAKqE,WAAN,WACI,eAACzH,EAAA,EAAD,CAAO0H,UAAW,gBAAiB5J,QAAS,YAAaqC,MAAI,EAA7D,SAA+D7I,EAAOE,OACrE+O,EAAa,eAACvG,EAAA,EAAD,CAAOlC,QAAS,OAAhB,0BAA0C6J,UAGhE,eAACtI,EAAA,EAAD,CAAKC,GAAI,CAAEgI,KAAM,GAAjB,SAAsB,gBAAClE,GAAA,EAAD,eAAO,eAACA,GAAA,EAAKmE,IAAN,CAAUC,IA3JrC,q8GA4JE,gBAACpE,GAAA,EAAKqE,WAAN,WACI,eAACzH,EAAA,EAAD,CAAO0H,UAAW,gBAAiB5J,QAAS,YAAaqC,MAAI,EAA7D,SAA+D7I,EAAOI,OACrE6O,EAAa,eAACvG,EAAA,EAAD,CAAOlC,QAAS,OAAhB,0BAA0C6J,aAIpE,gBAAC9G,EAAA,EAAD,WACI,eAACxB,EAAA,EAAD,CAAKC,GAAI,CAAEwI,OAAQ,EAAGR,KAAM,GAA5B,SAAiC,gBAAClE,GAAA,EAAD,eAAO,eAACA,GAAA,EAAKmE,IAAN,CAAUC,IAjKhD,uxFAkKE,gBAACpE,GAAA,EAAKqE,WAAN,WACI,eAACzH,EAAA,EAAD,CAAO0H,UAAW,gBAAiB5J,QAAS,YAAaqC,MAAI,EAA7D,SAA+D7I,EAAOK,OACrE4O,EAAa,eAACvG,EAAA,EAAD,CAAOlC,QAAS,OAAhB,0BAA0C6J,UAGhE,eAACtI,EAAA,EAAD,CAAKC,GAAI,CAAEwI,OAAQ,EAAGR,KAAM,GAA5B,SAAiC,gBAAClE,GAAA,EAAD,eAAO,eAACA,GAAA,EAAKmE,IAAN,CAAUC,IAtKhD,sqFAuKE,gBAACpE,GAAA,EAAKqE,WAAN,WACI,eAACzH,EAAA,EAAD,CAAO0H,UAAW,gBAAiB5J,QAAS,YAAaqC,MAAI,EAA7D,SAA+D7I,EAAOM,OACrE2O,EAAa,eAACvG,EAAA,EAAD,CAAOlC,QAAS,OAAhB,2BAA2C6J,aAMrE,gBAAC9G,EAAA,EAAD,WACI,eAACxB,EAAA,EAAD,CAAKC,GAAI,EAAT,qBACA,eAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACKmH,EACG,gBAACsB,EAAA,EAAD,CAAWC,GAAInH,IAAf,UACI,eAACoH,EAAA,EAAD,CAAWC,QAAM,EAACC,GAAI,EAAtB,yBACA,eAAC9I,EAAA,EAAD,CAAK8I,GAAI,EAAT,SAEI,eAAC5I,EAAA,EAAD,CAAavJ,MAAOgQ,EACPrG,SAAU,SAACC,GAAD,OAAW5B,EAASvF,EAAamH,EAAME,OAAO9J,SACxDoS,aAAc,kBAAM1B,GAAqB,IACzC2B,WAAS,SAI9B,gBAACC,GAAA,EAAD,WACI,eAACA,GAAA,EAAD,CAAaxK,QAAS,SAAUyK,SAAU5B,EAASX,EAAWwC,IAAK7B,EACtDtG,IAAK2F,EACLyC,MAAO9B,GAAUX,EAAY,EAAIY,SAAmBe,EACpDzI,QAAS,kBAAMwH,GAAqB,MACjD,eAAC4B,GAAA,EAAD,CAAaxK,QAAS,YACT2K,MAAO9B,EAASX,EAAY,EAAIY,SAAmBe,EACnDa,IAAKxC,EAAY,GAAKW,EAAQtG,IAAK2F,EAAY,GAC/C9G,QAAS,kBAAMwH,GAAqB,WAI7D,eAACrH,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,iCACI,eAACU,EAAA,EAAD,CAAOlC,QAAS,SAAUmC,MAAO,CAAEC,OAAQ,WACpChB,QAAS,kBAAMlB,EAASxF,EAAU4H,KAAKC,IAAIsG,EAAS,EAAG,MAD9D,eAEA,eAAC3G,EAAA,EAAD,CAAOlC,QAAS,UAAWmC,MAAO,CAAEC,OAAQ,WACrChB,QAAS,kBAAMlB,EAASxF,EAAU4H,KAAKsI,IAAI/B,EAAS,EAAGX,EAAY,OAD1E,uBAOZ,gBAACnF,EAAA,EAAD,WACI,eAACxB,EAAA,EAAD,CAAKC,GAAI,EAAT,sBACA,eAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,gBAACgJ,GAAA,EAAD,WACI,eAACA,GAAA,EAAD,CAAaxK,QAAS,UAAW0K,IAAKrC,EAAQ9F,IAAK4F,EACtCwC,MAAK,UAAKtC,EAAL,YAAeF,KACjC,eAACqC,GAAA,EAAD,CAAaxK,QAAS,YAAa0K,IAAKvC,EAAYE,EAAQ9F,IAAK4F,SAGzE,eAAC5G,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,iCACI,eAACU,EAAA,EAAD,CAAOlC,QAAS,SAAUmC,MAAO,CAAEC,OAAQ,WACpChB,QAAS,kBAAMkH,EAAUD,EAAS,IADzC,eAEA,eAACnG,EAAA,EAAD,CAAOlC,QAAS,UAAWmC,MAAO,CAAEC,OAAQ,WACrChB,QAAS,kBAAMkH,EAAUhG,KAAKsI,IAAIvC,EAAS,EAAGF,KADrD,uBAOZ,gBAACpF,EAAA,EAAD,WACI,eAACxB,EAAA,EAAD,CAAKC,GAAI,EAAT,uBACA,eAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,gBAACgJ,GAAA,EAAD,WACI,eAACA,GAAA,EAAD,CAAaxK,QAAS,UAAW0K,IAAKnC,EAAShG,IAAK6F,EACvCuC,MAAK,UAAKpC,EAAL,YAAgBH,KAClC,eAACoC,GAAA,EAAD,CAAaxK,QAAS,YAAa0K,IAAKtC,EAAaG,EAAShG,IAAK6F,SAG3E,eAAC7G,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,iCACI,eAACU,EAAA,EAAD,CAAOlC,QAAS,SAAUmC,MAAO,CAAEC,OAAQ,WACpChB,QAAS,kBAAMoH,EAAWD,EAAU,IAD3C,eAEA,eAACrG,EAAA,EAAD,CAAOlC,QAAS,UAAWmC,MAAO,CAAEC,OAAQ,WACrChB,QAAS,kBAAMoH,EAAWlG,KAAKsI,IAAIrC,EAAU,EAAGH,KADvD,uBAOZ,gBAACrF,EAAA,EAAD,WACI,eAACxB,EAAA,EAAD,CAAKC,GAAI,EAAT,uBACA,eAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACoB,EAAA,EAAD,CACIC,QACI,eAACC,GAAA,EAAD,CAASlC,GAAE,SAAX,SACKsE,KAAKC,UAAUrE,OAAOyI,QAAQP,SAH3C,SAMA,eAAC9G,EAAA,EAAD,CAAOG,MAAI,EAACF,MAAO,CACnB0I,gBAAiB,QACjBzH,MAAO,SAFP,SAGAnJ,EAAUwB,SAAWxB,EAAUwB,SAAWnC,EAAM6B,gBAGpD,gBAACoG,EAAA,EAAD,CAAKC,GAAI,EAAT,UAAY,eAAC,KAAD,CAAgB4B,MAAO,QAAShC,QAAS,kBAxOrE,WACI,IAAM0J,EAAIhK,OAAOyI,QAAQP,MACpBI,QAAO,SAAAlR,GAAK,MAAiB,cAAbA,EAAM,MACtBgP,MAAK,SAAC6D,EAAGC,GAAJ,OAAWA,EAAE,GAAKD,EAAE,MAI9B,GAAID,EAAE,GAAG,GAAKA,EAAE,GAAG,IAAM,GAErB,GADA5K,EAAS0G,GAAYkE,EAAE,GAAG,KACtBA,EAAE,GAAG,IAAM,GAEX,OADA/R,QAAQC,IAAI,YACJ8R,EAAE,GAAG,IACT,KAAKxR,EAAMyB,OAAQmF,EAASrE,GAAUE,GAAW,oBAAqB,MACtE,KAAKzC,EAAM0B,OAAQkF,EAASrE,GAAUE,GAAW,oBAAqB,MACtE,QAAS,aAKjBmE,EAAS0G,GAAY,cAqN8CqE,MAA3D,UAIJ,gBAAClI,EAAA,EAAD,WACI,eAACxB,EAAA,EAAD,CAAKC,GAAI,EAAT,uBACA,gBAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,eAACuB,EAAA,EAAD,UACI,gBAACxB,EAAA,EAAD,oBAAYoG,EAAYzP,MAAQ,GAAKyP,EAAYvP,MAAjD,UAEJ,eAAC2K,EAAA,EAAD,UACI,gBAACxB,EAAA,EAAD,oBAA2D,GAA9CoG,EAAYzP,MAAQ,GAAKyP,EAAYvP,OAAlD,aAGR,gBAACmJ,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,eAACuB,EAAA,EAAD,UACI,gBAACxB,EAAA,EAAD,sBAA6D,GAA9CoG,EAAYzP,MAAQ,GAAKyP,EAAYvP,OAApD,UAEJ,eAAC2K,EAAA,EAAD,UACI,gBAACxB,EAAA,EAAD,mBAA0D,GAA9CoG,EAAYzP,MAAQ,GAAKyP,EAAYvP,OAAjD,gBAMZ,eAAC2K,EAAA,EAAD,UACI,eAACxB,EAAA,EAAD,iCAIJ,eAACwB,EAAA,EAAD,UACKjC,OAAOC,OAAO7E,GAASkN,QAAO,SAAAlR,GAAK,OAAIA,EAAMsD,KAAO,KAChDwF,KAAI,SAAA9I,GAAK,OAAI,eAAC,GAAD,2BAAoEA,GAApE,IAA2EkP,gBAAiB,kBAAM,QAAlG,+BAAkDlP,EAAMD,sBAkBvF,SAAS+M,GAAekG,GAC3B,IAAMC,EAPH,SAAuBjT,GAC1B,IAAMkT,EAAgC,IAA5BlT,EAAMmT,WAAWC,OAAe,IAAMpT,EAAMmT,WAAanT,EAAMmT,WAEzE,OAAOtJ,SAASqJ,EAAEG,MAAM,IAAIJ,UAAUK,KAAK,KAI3BC,CAAcP,GAE9B,OAAIC,EAAU,GACH,OACAA,EAAU,GACV,aACAA,EAAU,GACV,YACAA,EAAU,GACV,OACAA,EAAU,GACV,YAEA,WJnUR,SAASO,GAAyB5H,EAAuBC,EAAkB5K,EAAyBwS,GAA0F,IAA1E1H,EAAyE,uDAAxD,EAAGC,EAAqD,uDAArC,IAAK9L,EAAgC,uDAAhB,EAC1KyL,EAAa+H,GAASzS,EAAiB8K,EAAQC,EAAO9L,EAAOuT,GAC7DE,EAAUF,EAAK,gBAAYA,EAAM1T,KAAlB,SAAgC,GAIrD,OAFAwM,GAAYX,EAAe+H,EAASnH,GAAqBb,GAAaE,GAE/DF,EASJ,SAASoB,GAA2BnB,EAAuBC,EAAkB5E,GAGhF,IAAM2M,EAAI3M,EAAO1C,OAAO8O,MAAM,KACxBtH,EAASlC,SAAS+J,EAAE,IACpB5H,EAAQnC,SAAS+J,EAAE,GAAGP,MAAM,KAAK,IACjC9O,EAASsF,SAAS+J,EAAE,GAAGP,MAAM,KAAK,IAElC1H,EAAuB,uCAAQM,GAAKF,EAAQC,IAArB,IAA6BE,SAAUC,GAAU0H,QAAW5M,GAA5D,IAAoE1C,WAIjG,OAFAgI,GAAYX,EAAD,uBAAgC3E,EAAOlH,KAAvC,KAAgDyM,GAAqBb,GAAaE,GAEtFF,EA8BX,SAASa,GAAqBP,GAC1B,IAAM6H,EAAe,SACfC,EAAiB,QAEvB,OAAQ9H,EAAKC,UACT,KAAKC,GAAU7F,KACX,IAAMqF,EAAaM,EACnB,MAAO,CAAC,CACJ+H,OAAQ,CACJ,CAAEjU,KAAM,OAAQC,MAAM,GAAD,OAAK2L,EAAWI,OAAhB,YAA0BJ,EAAWK,OAASiI,QAAQ,GAC3E,CAAElU,KAAM,UAAWC,MAAM,GAAD,OAAK2L,EAAWuB,OAAS+G,QAAQ,GACzD,CAAElU,KAAM,MAAOC,MAAM,GAAD,OAAK2L,EAAWW,SAAW2H,QAAQ,MAInE,KAAK9H,GAAUyF,KACX,IAAMjG,EAAaM,EACnB,MAAO,CAAC,CACJ+H,OAAQ,CACJ,CAAEjU,KAAM,OAAQC,MAAM,GAAD,OAAK2L,EAAWI,OAAhB,YAA0BJ,EAAWK,OAASiI,QAAQ,GAC3E,CAAElU,KAAM,OAAQC,MAAM,GAAD,OAAK2L,EAAWuB,OAAS+G,QAAQ,GACtD,CAAElU,KAAM,MAAOC,MAAM,GAAD,OAAK2L,EAAWW,QAAhB,YAA2BX,EAAWzL,MAAQ,EAAIyL,EAAWzL,MAAlC,YAA+CyL,EAAWzL,OAArF,gBAAoGyL,EAAWW,QAAUX,EAAWzL,MAApI,MAA+I+T,QAAQ,MAIvL,KAAK9H,GAAU+H,KACX,IAAMvI,EAAaM,EACbkI,EAAIxI,EAAWU,OAAS,IAAM,IACpC,MAAO,CACH,CACInB,MAAOS,EAAWU,OAAS0H,EAAiBD,EAC5CE,OAAQ,CACJ,CAAEjU,KAAM,OAAQC,MAAM,GAAD,OAAK2L,EAAWI,OAAhB,YAA2BJ,EAAWK,OAAUiI,QAAQ,GAC7E,CAAElU,KAAM,UAAWC,MAAM,GAAD,OAAK2L,EAAWuB,OAAS+G,QAAQ,GACzD,CAAElU,KAAM,MAAOC,MAAM,GAAD,OAAK2L,EAAWW,SAAW2H,QAAQ,GACvD,CAAElU,KAAM,OAAQC,MAAM,GAAD,OAAK2L,EAAWzK,MAAQ+S,QAAQ,GACrD,CAAElU,KAAM,QAASC,MAAM,GAAD,OAAK2L,EAAWyI,OAASH,QAAQ,GACvD,CAAElU,KAAM,MAAOC,MAAM,GAAD,OAAK2L,EAAW0I,KAAOJ,QAAQ,GACnD,CAAElU,KAAM,aAAcC,MAAM,GAAD,OAAK2L,EAAW0I,IAAhB,YAAuBF,EAAvB,YAA4BxI,EAAWW,QAAvC,cAAoDX,EAAWU,OAAS,cAAgB,mBAMnI,KAAKF,GAAU0H,OACX,IAAMlI,EAAaM,EACnB,MAAO,CACH,CACI+H,OAAQ,CACJ,CAAEjU,KAAM,OAAQC,MAAM,GAAD,OAAK2L,EAAWI,OAAhB,YAA2BJ,EAAWK,OAAUiI,QAAQ,GAC7E,CAAElU,KAAM,UAAWC,MAAM,GAAD,OAAK2L,EAAWuB,OAAS+G,QAAQ,GACzD,CAAElU,KAAM,SAAUC,MAAM,GAAD,OAAK2L,EAAWpH,QAAU0P,QAAQ,GACzD,CAAElU,KAAM,MAAOC,MAAM,KAAD,OAAO2L,EAAWW,QAAUX,EAAWpH,OAAvC,MAAmD0P,QAAQ,GAC/E,CAAElU,KAAM,MAAOC,MAAM,GAAD,OAAK2L,EAAW7G,KAAOmP,QAAQ,GACnD,CAAElU,KAAM,OAAQC,MAAM,GAAD,OAAKP,EAAYkM,EAAW/G,OAASqP,QAAQ,MAKlF,KAAK9H,GAAUmI,KACX,IAAM3I,EAAaM,EACbkI,EAAIxI,EAAWU,OAAS,IAAM,IACpC,MAAO,CAAC,CACJnB,MAAOS,EAAWU,OAAS0H,EAAiBD,EAC5CE,OAAQ,CACJ,CAAEjU,KAAM,OAAQC,MAAM,GAAD,OAAK2L,EAAWI,OAAhB,YAA2BJ,EAAWK,OAAUiI,QAAQ,GAC7E,CAAElU,KAAM,MAAOC,MAAM,GAAD,OAAK2L,EAAWW,SAAW2H,QAAQ,GACvD,CAAElU,KAAM,OAAQC,MAAM,GAAD,OAAK2L,EAAW1K,gBAAgBjB,MAAhC,YAAyC2L,EAAWG,SAAW,EAAIH,EAAWG,SAArC,WAAoDH,EAAWG,WAAcmI,QAAQ,GACnJ,CAAElU,KAAM,aAAaC,MAAM,GAAD,OAAK2L,EAAW1K,gBAAgBjB,MAAQ2L,EAAWG,SAAnD,YAA+DqI,EAA/D,YAAoExI,EAAWW,QAA/E,cAA4FX,EAAWU,OAAS,cAAgB,mBAItK,KAAKF,GAAUC,IACX,IAAMT,EAAaM,EACbkI,EAAIxI,EAAWU,OAAS,IAAM,IACpC,MAAO,CAAC,CACJnB,MAAOS,EAAWU,OAAS0H,EAAiBD,EAC5CE,OAAQ,CACJ,CAAEjU,KAAM,OAAQC,MAAM,GAAD,OAAK2L,EAAWI,OAAhB,YAA2BJ,EAAWK,OAAUiI,QAAQ,GAC7E,CAAElU,KAAM,MAAOC,MAAM,GAAD,OAAK2L,EAAWW,SAAW2H,QAAQ,GACvD,CAAElU,KAAM,OAAQC,MAAM,GAAD,OAAK2L,EAAW1K,gBAAgBjB,MAAhC,YAAyC2L,EAAWG,SAAW,EAAIH,EAAWG,SAArC,WAAoDH,EAAWG,WAAcmI,QAAQ,GACnJ,CAAElU,KAAM,aAAaC,MAAM,GAAD,OAAK2L,EAAW1K,gBAAgBjB,MAAQ2L,EAAWG,SAAnD,YAA+DqI,EAA/D,YAAoExI,EAAWW,QAA/E,cAA4FX,EAAWU,OAAS,cAAgB,gBAC1J,CAAEtM,KAAM,eAAgBC,MAAM,GAAD,OAAK8M,GAAenB,EAAWW,eAQhF,SAASC,GAAYG,EAAiBiH,EAAiBY,EAAa1I,GAChEhL,QAAQC,IAAIkM,KAAKC,UAAU,CACvBpB,SAAUA,EACV2I,QAASb,EACTY,OAAQA,KAEZE,MAAM/H,EACF,CACIgI,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BnT,KAAMwL,KAAKC,UAAU,CACjBpB,SAAUA,EACV2I,QAASb,EACTY,OAAQA,MAUxB,SAAStI,GAAKF,EAAgBC,GAE1B,IADA,IAL0B0G,EAAarI,EAKjCsB,EAAwB,CAAEO,SAAUC,GAAU7F,KAAM4G,MAAO,GAAIZ,QAAS,EAAGP,SAAQC,SAChF1J,EAAQ,EAAGA,EAAQqJ,EAAWI,OAAQzJ,IAAS,CACpD,IAAM2J,GAPgByG,EAOK,EAPQrI,EAOLsB,EAAWK,MANtC5B,KAAK2F,MAAM3F,KAAKwK,UAAYvK,EAAMqI,EAAM,IAAMA,GAOjD/G,EAAWuB,MAAM5K,GAAS2J,EAC1BN,EAAWW,SAAWL,EAE1B,OAAON,EAIX,SAAS+H,GAASzS,EAAyB8K,EAAgBC,EAAe9L,EAAeuT,GACrF,IAAM9H,EAAwBM,GAAKF,EAAQC,GAQ3C,OAPAL,EAAWO,SAAWC,GAAU+H,KAEhCvI,EAAWzK,KAAOD,EAAkBf,IAAc,OAALuT,QAAK,IAALA,OAAA,EAAAA,EAAOvT,OAAP,OAAeuT,QAAf,IAAeA,OAAf,EAAeA,EAAOvT,MAAQ,GAC3EyL,EAAWyI,MAAQX,EAAyB,IAAhBA,EAAMW,OAAe,GAAyB,IAAnBX,EAAMW,MAAQ,GAAW,EAChFzI,EAAW0I,IAAM1I,EAAWyI,MAAQzI,EAAWzK,KAC/CyK,EAAWU,OAASV,EAAWW,QAAUX,EAAW0I,IAAM,EAEnD1I,G,SAvONQ,O,eAAAA,I,eAAAA,I,eAAAA,I,eAAAA,I,mBAAAA,I,cAAAA,Q,KKEE,IAAM0I,GAAyB,SAAC,GAAoB,IAAD,IAAjB5U,aAAiB,MAAT,GAAS,IACvB6U,IAAM3N,UAAS,GADQ,mBAC/C4N,EAD+C,KACrCC,EADqC,KAGhD5J,EAAiBxL,GAAe,SAAAY,GAAK,OAAIA,EAAMS,gBAAgBhB,MAC/D8B,EAAYnC,GAAe,SAAAY,GAAK,OAAIA,EAAMuB,aAC1CiG,EAAWtI,IAGjB,OAAO,gBAACuV,EAAA,EAAD,CAAWvM,GAAE,eAAU0C,EAAerL,MAAQkK,MAAO,CAAE0I,gBAAiB,YAAarF,QAAS,GAA9F,UACH,eAACzC,EAAA,EAAD,CAAK3B,QAAS,kBAAM8L,GAAYD,IAAhC,SACI,eAAC1L,EAAA,EAAD,UACI,eAACW,EAAA,EAAD,CAAOlC,QAAQ,YAAYqC,MAAI,EAACF,MAAO,CAAEC,OAAQ,WAAjD,SACKkB,EAAerL,WAI5B,eAAC8K,EAAA,EAAD,CAAKZ,MAAO,CAAEiL,WAAY,WAA1B,SACI,eAAC7L,EAAA,EAAD,UACM0L,EAyBI,uCACE,eAAC,KAAD,CAAW7L,QAAS,kBLiCrC,SAAkC0C,EAAuBC,EAAkB5K,GAAgH,IAA7E6K,EAA4E,uDAAzD,EAAGC,EAAsD,uDAArC,EAAGC,EAAkC,uDAAlB,IACrKL,EAAqB,2BAAQM,GAAKF,EAAQC,IAArB,IAA6BE,SAAUC,GAAUmI,KAAMrT,kBAAiB6K,aAKnG,OAJAH,EAAWU,OAASV,EAAWW,QAAUrL,EAAgBjB,MAAQ2L,EAAWG,SAE5ES,GAAYX,EAAD,qBAA8B3K,EAAgBlB,MAAQyM,GAAqBb,GAAaE,GAE5FF,EKvCuCwJ,CAAyBpT,EAAU2K,QAAQ3K,EAAU2K,QAAQC,QAAS5K,EAAU6K,cAAexB,IAAiBF,MAAO,UAAWjB,MAAO,CAAEC,OAAQ,aAE5KkB,EAAelL,MAChB,eAAC8J,EAAA,EAAD,CAAOlC,QAAS,YAAhB,SACKsD,EAAelL,QAElB,+BACF,eAAC8J,EAAA,EAAD,CACIlC,QAAS,OACTqC,MAAI,EACJjB,QAAS,kBAAM8L,GAAYD,IAH/B,SAIK3J,EAAepL,WApCtB,uCACE,iCACI,eAACgK,EAAA,EAAD,CAAOlC,QAAS,UAAWmC,MAAO,CAAEC,OAAQ,WACrChB,QAAS,kBAAMlB,EAASpH,EAAewK,EAAenL,SAD7D,eAEA,eAAC+J,EAAA,EAAD,CAAOlC,QAAS,YAAhB,SACKsD,EAAelL,MAAQkL,EAAelL,MAAQ,IAEnD,eAAC8J,EAAA,EAAD,CAAOlC,QAAS,SAAUmC,MAAO,CAAEC,OAAQ,WACpChB,QAAS,kBAAMlB,EAASjH,EAAeqK,EAAenL,SAD7D,kBAGJ,iCACI,eAAC+J,EAAA,EAAD,CAAOG,MAAI,EAACrC,QAAS,UAAWmC,MAAO,CAAEC,OAAQ,WAC1ChB,QAAS,kBAAMlB,EAASzH,EAAU6K,EAAenL,SADxD,eAEA,eAAC+J,EAAA,EAAD,CACIlC,QAAS,OACTqC,MAAI,EACJjB,QAAS,kBAAM8L,GAAYD,IAH/B,SAIK3J,EAAepL,QAEpB,eAACgK,EAAA,EAAD,CAAOG,MAAI,EAACrC,QAAS,SAAUmC,MAAO,CAAEC,OAAQ,WACzChB,QAAS,kBAAMlB,EAASrH,EAAUyK,EAAenL,SADxD,6B,4GCtCfmV,GAAa,SAAC,GAAqC,IAAnC9T,EAAkC,EAAlCA,OAEnB0G,EAAWtI,IAEjB,OAAO,gBAAC0N,GAAA,EAAD,WACH,eAACA,GAAA,EAAK9B,OAAN,UACKhK,EAAOvB,OAEZ,gBAACqN,GAAA,EAAKC,KAAN,WAGI,gBAACxC,EAAA,EAAD,WACI,eAACxB,EAAA,EAAD,UACI,eAACwB,EAAA,EAAD,UACI,gBAACxB,EAAA,EAAD,mBAEI,eAACW,EAAA,EAAD,CAAOlC,QAAS,UAAWmC,MAAO,CAAEC,OAAQ,WACrChB,QAAS,kBAAMlB,EAAStB,GAAW,2BAC5BpF,GAD2B,IAE9BC,KAAMD,EAAOC,KAAOD,EAAOC,KAAO,EAAI,OAHjD,eAKA,gBAACyI,EAAA,EAAD,CAAOG,MAAM,EAAMrC,QAAS,YAA5B,eAA4CxG,EAAOC,KAAOD,EAAOC,KAAO,EAAxE,OACA,eAACyI,EAAA,EAAD,CAAOlC,QAAS,SAAUmC,MAAO,CAAEC,OAAQ,WAAahB,QAAS,kBAAMlB,EAAStB,GAAW,2BACpFpF,GADmF,IAC3EC,KAAMD,EAAOC,KAAO6I,KAAKC,IAAI/I,EAAOC,KAAO,EAAG,GAAK,OADlE,sBAOZ,eAAC8H,EAAA,EAAD,CAAKC,GAAI,IACT,eAACD,EAAA,EAAD,UAEI,eAACwB,EAAA,EAAD,UACI,gBAACxB,EAAA,EAAD,mBAGI,eAACW,EAAA,EAAD,CAAOlC,QAAS,UAAWmC,MAAO,CAAEC,OAAQ,WACrChB,QAAS,kBAAMlB,EAAStB,GAAW,2BAC5BpF,GAD2B,IAE9BE,KAAMF,EAAOE,KAAOF,EAAOE,KAAO,EAAI,OAHjD,eAKA,gBAACwI,EAAA,EAAD,CAAOG,MAAM,EAAMrC,QAAS,YAA5B,eAA4CxG,EAAOE,KAAOF,EAAOE,KAAO,EAAxE,OACA,eAACwI,EAAA,EAAD,CAAOlC,QAAS,SAAUmC,MAAO,CAAEC,OAAQ,WAAahB,QAAS,kBAAMlB,EAAStB,GAAW,2BACpFpF,GADmF,IAC3EE,KAAMF,EAAOE,KAAO4I,KAAKC,IAAI/I,EAAOE,KAAO,EAAG,GAAK,OADlE,yBAShB,gBAACqJ,EAAA,EAAD,WACI,eAACxB,EAAA,EAAD,UACI,eAACwB,EAAA,EAAD,UACI,gBAACxB,EAAA,EAAD,mBAEI,eAACW,EAAA,EAAD,CAAOlC,QAAS,UAAWmC,MAAO,CAAEC,OAAQ,WACrChB,QAAS,kBAAMlB,EAAStB,GAAW,2BAC5BpF,GAD2B,IAE9BI,KAAMJ,EAAOI,KAAOJ,EAAOI,KAAO,EAAI,OAHjD,eAKA,gBAACsI,EAAA,EAAD,CAAOG,MAAM,EAAMrC,QAAS,YAA5B,eAA4CxG,EAAOI,KAAOJ,EAAOI,KAAO,EAAxE,OACA,eAACsI,EAAA,EAAD,CAAOlC,QAAS,SAAUmC,MAAO,CAAEC,OAAQ,WAAahB,QAAS,kBAAMlB,EAAStB,GAAW,2BACpFpF,GADmF,IAC3EI,KAAMJ,EAAOI,KAAO0I,KAAKC,IAAI/I,EAAOI,KAAO,EAAG,GAAK,OADlE,sBAOZ,eAAC2H,EAAA,EAAD,CAAKC,GAAI,EAAT,iBACA,eAACD,EAAA,EAAD,UAEI,eAACwB,EAAA,EAAD,UACI,gBAACxB,EAAA,EAAD,oBAGI,eAACW,EAAA,EAAD,CAAOlC,QAAS,UAAWmC,MAAO,CAAEC,OAAQ,WACrChB,QAAS,kBAAMlB,EAAStB,GAAW,2BAC5BpF,GAD2B,IAE9BG,KAAMH,EAAOG,KAAOH,EAAOG,KAAO,EAAI,OAHjD,eAKA,gBAACuI,EAAA,EAAD,CAAOG,MAAM,EAAMrC,QAAS,YAA5B,eAA4CxG,EAAOG,KAAOH,EAAOG,KAAO,EAAxE,OACA,eAACuI,EAAA,EAAD,CAAOlC,QAAS,SAAUmC,MAAO,CAAEC,OAAQ,WAAahB,QAAS,kBAAMlB,EAAStB,GAAW,2BACpFpF,GADmF,IAC3EG,KAAMH,EAAOG,KAAO2I,KAAKC,IAAI/I,EAAOG,KAAO,EAAG,GAAK,OADlE,yBAShB,gBAACoJ,EAAA,EAAD,WACI,eAACxB,EAAA,EAAD,UACI,eAACwB,EAAA,EAAD,UACI,gBAACxB,EAAA,EAAD,mBAEI,eAACW,EAAA,EAAD,CAAOlC,QAAS,UAAWmC,MAAO,CAAEC,OAAQ,WACrChB,QAAS,kBAAMlB,EAAStB,GAAW,2BAC5BpF,GAD2B,IAE9BM,KAAMN,EAAOM,KAAON,EAAOM,KAAO,EAAI,OAHjD,eAKA,gBAACoI,EAAA,EAAD,CAAOG,MAAM,EAAMrC,QAAS,YAA5B,eAA4CxG,EAAOM,KAAON,EAAOM,KAAO,EAAxE,OACA,eAACoI,EAAA,EAAD,CAAOlC,QAAS,SAAUmC,MAAO,CAAEC,OAAQ,WAAahB,QAAS,kBAAMlB,EAAStB,GAAW,2BACpFpF,GADmF,IAC3EM,KAAMN,EAAOM,KAAOwI,KAAKC,IAAI/I,EAAOM,KAAO,EAAG,GAAK,OADlE,sBAOZ,eAACyH,EAAA,EAAD,CAAKC,GAAI,EAAT,iBACA,eAACD,EAAA,EAAD,UAEI,eAACwB,EAAA,EAAD,UACI,gBAACxB,EAAA,EAAD,oBAGI,eAACW,EAAA,EAAD,CAAOlC,QAAS,UAAWmC,MAAO,CAAEC,OAAQ,WACrChB,QAAS,kBAAMlB,EAAStB,GAAW,2BAC5BpF,GAD2B,IAE9BK,KAAML,EAAOK,KAAOL,EAAOK,KAAO,EAAI,OAHjD,eAKA,gBAACqI,EAAA,EAAD,CAAOG,MAAM,EAAMrC,QAAS,YAA5B,eAA4CxG,EAAOK,KAAOL,EAAOK,KAAO,EAAxE,OACA,eAACqI,EAAA,EAAD,CAAOlC,QAAS,SAAUmC,MAAO,CAAEC,OAAQ,WAAahB,QAAS,kBAAMlB,EAAStB,GAAW,2BACpFpF,GADmF,IAC3EK,KAAML,EAAOK,KAAOyI,KAAKC,IAAI/I,EAAOK,KAAO,EAAG,GAAK,OADlE,gCC/Ff0T,GAAoB,WAAO,IAAD,EACAlO,oBAAS,GADT,mBAC5BmO,EAD4B,KAClBC,EADkB,OAELpO,mBAAS,IAFJ,mBAE5BqO,EAF4B,KAEnBC,EAFmB,OAGDtO,mBAAS,KAHR,mBAG5BuO,EAH4B,KAGdC,EAHc,KAM7BC,EAAQhW,GAAe,SAAAY,GAAK,OAAIA,EAAMuG,aACtCQ,EAAU3H,GAAe,SAAAY,GAAK,OAAIA,EAAM+G,WACxCS,EAAWtI,IAGXmW,EAAc,GACpB,IAAK,IAAMxP,KAAQR,GACfgQ,EAAYrK,KAAKnF,GA0HrB,SAASyP,EAAsB9V,GAC3B,OAAQA,GACJ,KAAK2C,GAAc2D,KACf,MAAO,MACX,KAAK3D,GAAcmD,KACf,OAAO,eAAC,KAAD,IACX,KAAKnD,GAAciD,OACf,OAAO,eAAC,KAAD,IACX,KAAKjD,GAAcyB,OACf,OAAO,eAAC,KAAD,IACX,KAAKzB,GAAcwC,MACf,OAAO,eAAC,KAAD,IAEf,OAAO,eAAC,KAAD,IAcX,OAAO,eAAC4Q,GAAA,EAAId,UAAL,CAAevM,GAAG,0BAA0BsN,iBAAiB,SAA7D,SACH,gBAACnL,EAAA,EAAD,WACI,eAACxB,EAAA,EAAD,CAAK8I,GAAI,EAAT,SACI,gBAAC8D,GAAA,EAAD,CAAWnO,QAAQ,QAAnB,UAEI,eAACmO,GAAA,EAAUhN,KAAX,UACI,gBAACiN,GAAA,EAAD,WAEI,eAACC,GAAA,EAAD,CAAa3M,KAAM,KACNkI,UAAW,OADxB,SAII,eAACzG,EAAA,EAAD,CAAQ/B,QAAS,kBAvB7C,WACI,IAAMkN,EAA0B,GAChCxN,OAAOyN,KAAKT,GAAO5G,MAAK,SAAC6D,EAAGC,GAAJ,OAAUD,EAAEyD,cAAcxD,MAAIhK,KAAI,SAAAyN,GAAG,OAAIH,EAAYG,GAAOX,EAAMW,MAE1F1V,QAAQC,IAAI8U,GACZ/U,QAAQC,IAAIsV,GAEZpO,EAASlB,GAAgBsP,IAgBsBI,IAAvB,SAAwC,eAAC,KAAD,QAE5C,eAACL,GAAA,EAAD,CAAa3M,KAAK,KAAlB,SACKZ,OAAOC,OAAOlG,IAAemG,KAAI,SAAC9I,GAAD,OAC9B,eAACiL,EAAA,EAAD,CACQnD,QAAS4N,IAAiB1V,EAAQ,UAAY,YAC9CkJ,QAAS,WACLyM,EAAU3V,IAHtB,SAIY8V,EAAsB9V,IAJlC,qBAA2BA,cAjK3D,WACI,IAAMqM,EAAwB,GAC9B,IAAK,IAAMtM,KAAQ6V,EACXjT,GAAc2D,OAASoP,GAAgBE,EAAM7V,GAAMoE,WAAauR,GAChErJ,EAAOb,KAAK,eAACyK,GAAA,EAAUhN,KAAX,CAAgBxI,QAAM,EAACgW,KAAI,eAAU1W,GAArC,SACPA,GADO,mBAA8DA,KAIlF,OAAOsM,EAkKMqK,GAED,eAACT,GAAA,EAAUhN,KAAX,UACI,gBAAC8B,GAAA,EAAD,CAAY2G,UAAU,OAAtB,UACI,eAAC3G,GAAA,EAAW4L,QAAZ,UACI,eAAC1L,EAAA,EAAD,CAAQ/B,QAAS,kBAAMlB,EAAS7B,GAAcqP,KACtC1N,QAAQ,kBADhB,SAEK8N,EAAMJ,GAAW,eAAC,KAAD,IAAY,eAAC,KAAD,QAOtC,sBAAKvL,MAAO,CAAE2M,MAAO,UAArB,SACI,eAAC,KAAD,CACIlO,GAAG,yBAEHmO,QAAShB,EACTiB,cAAe,SAAC/W,GAAD,OAAU0V,EAAW1V,IAEpC4J,SAAU,SAACoN,GAAD,aAAetB,EAAU,UAACsB,EAAU,UAAX,aAAC,EAAc5D,2BAO1E,eAAC9J,EAAA,EAAD,CAAK8I,GAAI,EAAT,SACI,eAAC4D,GAAA,EAAIiB,QAAL,UA5LZ,WACI,IAAM3K,EAAwB,GAE9B,SAAS4K,EAAc5Q,GACnB,OAAQA,EAAKlC,UACT,KAAKxB,GAAcyB,OACf,IAAM6C,EAASZ,EACf,OAAO,eAAC4E,EAAA,EAAD,CACHiM,WAAY3P,EAAQzF,QAAQmF,EAAOlH,MACnCmJ,QAAS,WACLlB,EAAS3F,EAAU4E,IACnBe,EAASrB,GAAWN,KAJrB,mBAOX,KAAK1D,GAAciD,OACf,IAAMtE,EAAS+E,EACf,OAAO,eAAC4E,EAAA,EAAD,CACHiM,WAAY3P,EAAQ1F,KAAKP,EAAOvB,MAChCmJ,QAAS,WACLlB,EAAS7F,EAAQb,IACjB0G,EAASrB,GAAWN,KAJrB,mBAOX,KAAK1D,GAAcwC,MACf,IAAMuI,EAAQrH,EAEd,OAAO,eAAC4E,EAAA,EAAD,CACHiM,WAAY3P,EAAQzF,QAAQ4L,EAAM3N,MAClCmJ,QAAS,WACLlB,EAAS3F,EAAUqL,IACnB1F,EAASrB,GAAWN,KAJrB,mBAOX,KAAK1D,GAAcmD,KACnB,KAAKnD,GAAc2D,KACf,OAAO,eAAC2E,EAAA,EAAD,CAAQ/B,QAAS,kBAAMlB,EAASrB,GAAWN,KAA3C,kBAQnB,SAAS8Q,EAAY9Q,GACjB,OAAQA,EAAKlC,UACT,KAAKxB,GAAcyB,OACf,OAAO,eAACiF,EAAA,EAAD,UAAK,eAAC,GAAD,CAAYpC,OAAQZ,EAAiBa,UAAWoO,MAChE,KAAK3S,GAAciD,OACf,OAAO,eAACyD,EAAA,EAAD,UAAK,eAAC,GAAD,CAAY/H,OAAQ+E,MACpC,KAAK1D,GAAcwC,MACf,OAAO,eAACkE,EAAA,EAAD,UAAK,eAAC,GAAD,CAAWqE,MAAOrH,OAlDpB,eAsDXtG,GACP,IAAMsG,EAAcuP,EAAM7V,GAC1BsM,EAAOb,KAAK,gBAACuK,GAAA,EAAIqB,KAAL,CAAUC,SAAQ,eAAUtX,GAA5B,UACR,gBAAC8K,EAAA,EAAD,WACI,gBAACxB,EAAA,EAAD,WACKhD,EAAKtG,KADV,aAC0BsG,EAAK/D,SAE/B,eAAC+G,EAAA,EAAD,UACI,gBAAC8M,GAAA,EAAD,WACKb,EAAW,eAACrK,EAAA,EAAD,CAAQiM,UAAQ,EAAhB,SAAkB7Q,EAAKlC,WAC7B,gBAACqE,EAAA,EAAD,WACE,eAACA,EAAA,EAASC,OAAV,CAAiBX,QAAQ,UAAUY,GAAG,iBAAtC,SACKrC,EAAKlC,WAGV,eAACqE,EAAA,EAASG,KAAV,UACKC,OAAOC,OAAOlG,IAAemG,KAAI,SAAC9I,EAAO+I,GAAR,OAE9B,cADA,CACCP,EAAA,EAASS,KAAV,CAEIC,QAAS,WACLlB,EAASnB,GAAa,2BAAKR,GAAN,IAAYlC,SAAUnE,OAHnD,SAIQA,GAJR,4BAC8BA,YAO9C,eAACiL,EAAA,EAAD,CAAQnD,QAAS,oBACToB,QAAS,kBAAMqM,GAAgBD,IADvC,SACkD,eAAC,KAAD,cAI9D,gBAACzK,EAAA,EAAD,WAGI,eAACxB,EAAA,EAAD,CAAKC,GAAIjD,EAAKlC,WAAaxB,GAAc2D,MAAQD,EAAKlC,WAAaxB,GAAcmD,KAAO,GAAK,EAA7F,SAEI,eAACiF,GAAA,EAAD,UACI,eAACxB,EAAA,EAAD,CAAayI,GAAG,WAAWsF,SAAUhC,EAAU9L,KAAM,KAAM+N,KAAM,GACpDvX,MAAOqG,EAAK5C,YACZiG,aAAW,cACXC,SAAU,SAACC,GACP5B,EAASpB,GAAgB,2BAAKP,GAAN,IAAY5C,YAAamG,EAAME,OAAO9J,iBAItFmX,EAAY9Q,MAEhB4Q,EAAc5Q,KA7CP,kBAAoDtG,MAFpE,IAAK,IAAMA,KAAQ6V,EAAQ,EAAhB7V,GAkDX,OAAOsM,EAqFMmL,aC5ORC,GAAarX,YAAY,CAClCL,KAAM,SACNM,aZXkC,CAClC,WAAc,CAAEN,KAAM,aAAcqU,MAAO,EAAGxP,KAAM,KAAM1E,MAAO,GACjE,UAAa,CAAEH,KAAM,YAAaqU,MAAO,EAAGxP,KAAM,IAAK1E,MAAO,GAC9D,UAAa,CAAEH,KAAM,YAAaqU,MAAO,EAAGxP,KAAM,MAAO1E,MAAO,GAChE,MAAS,CAAEH,KAAM,QAASqU,MAAO,EAAGxP,KAAM,MAAO1E,MAAO,GACxD,QAAW,CAAEH,KAAM,UAAWqU,MAAO,EAAGxP,KAAM,MAAO1E,MAAO,GAC5D,SAAY,CAAEH,KAAM,WAAYqU,MAAO,EAAGxP,KAAM,MAAO1E,MAAO,GAC9D,cAAe,CAAEH,KAAM,cAAeqU,MAAO,EAAGxP,KAAM,MAAO1E,MAAO,GACpE,QAAW,CAAEH,KAAM,UAAWqU,MAAO,EAAGxP,KAAM,MAAO1E,MAAO,GAC5D,MAAS,CAAEH,KAAM,QAASqU,MAAO,EAAGxP,KAAM,KAAM1E,MAAO,GACvD,iBAAkB,CAAEH,KAAM,iBAAkBqU,MAAO,EAAGxP,KAAM,MAAO1E,MAAO,GAC1E,WAAc,CAAEH,KAAM,aAAcqU,MAAO,EAAGxP,KAAM,MAAO1E,MAAO,GAClE,QAAW,CAAEH,KAAM,UAAWqU,MAAO,EAAGxP,KAAM,MAAO1E,MAAO,GAC5D,WAAc,CAAEH,KAAM,aAAcqU,MAAO,EAAGxP,KAAM,IAAK1E,MAAO,GAChE,YAAe,CAAEH,KAAM,cAAeqU,MAAO,EAAGxP,KAAM,MAAO1E,MAAO,GACpE,MAAS,CAAEH,KAAM,QAASqU,MAAO,EAAGxP,KAAM,MAAO1E,MAAO,GACxD,QAAW,CAAEH,KAAM,UAAWqU,MAAO,EAAGxP,KAAM,MAAO1E,MAAO,GAC5D,uBAAwB,CAAEH,KAAM,uBAAwBqU,MAAO,EAAGxP,KAAM,MAAO1E,MAAO,GACtF,uBAAwB,CAAEH,KAAM,uBAAwBqU,MAAO,EAAGxP,KAAM,MAAO1E,MAAO,GACtF,oBAAqB,CAAEH,KAAM,oBAAqBqU,MAAO,EAAGxP,KAAM,MAAO1E,MAAO,GAChF,qBAAsB,CAAEH,KAAM,qBAAsBqU,MAAO,EAAGxP,KAAM,KAAM1E,MAAO,GACjF,oBAAqB,CAAEH,KAAM,oBAAqBqU,MAAO,EAAGxP,KAAM,KAAM1E,MAAO,GAC/E,qBAAsB,CAAEH,KAAM,qBAAsBqU,MAAO,EAAGxP,KAAM,KAAM1E,MAAO,GACjF,MAAS,CAAEH,KAAM,QAASqU,MAAO,EAAGxP,KAAM,KAAM1E,MAAO,GACvD,aAAgB,CAAEH,KAAM,eAAgBqU,MAAO,EAAGxP,KAAM,MAAO1E,MAAO,GACtE,kBAAmB,CAAEH,KAAM,kBAAmBqU,MAAO,EAAGxP,KAAM,MAAO1E,MAAO,GAC5E,SAAY,CAAEH,KAAM,WAAYqU,MAAO,EAAGxP,KAAM,MAAO1E,MAAO,GAC9D,SAAY,CAAEH,KAAM,WAAYqU,MAAO,EAAGxP,KAAM,MAAO1E,MAAO,GAC9D,kBAAmB,CAAEH,KAAM,kBAAmBqU,MAAO,EAAGxP,KAAM,KAAM1E,MAAO,GAC3E,QAAW,CAAEH,KAAM,UAAWqU,MAAO,EAAGxP,KAAM,KAAM1E,MAAO,GAC3D,WAAY,CAAEH,KAAM,WAAYqU,MAAO,EAAGxP,KAAM,MAAO1E,MAAO,GAC9D,SAAY,CAAEH,KAAM,WAAYqU,MAAO,EAAGxP,KAAM,MAAO1E,MAAO,GAC9D,MAAS,CAAEH,KAAM,QAASqU,MAAO,EAAGxP,KAAM,KAAM1E,MAAO,IYpBvDI,SAAU,CACNoX,SAAU,SAAClX,EAAOC,GAAmC,IAAD,EACvBA,EAAOC,QAAxBX,EADwC,EACxCA,KAAM4X,EADkC,EAClCA,OACRpB,EAAMoB,EAAM,UAAMA,EAAO5X,KAAb,cAAuBA,GAASA,EAC9CS,EAAM+V,GAAKnC,QAAU3T,EAAOC,QAAQ0T,MACpC5T,EAAM+V,GAAKnC,MAAQ,EAEnB5T,EAAM+V,GAAKnC,MAAQ3T,EAAOC,QAAQ0T,OAG1CwD,SAAU,SAACpX,EAAOC,GAAmC,IAAD,EAClBA,EAAOC,QAA9BX,EADyC,EACzCA,KAAMG,EADmC,EACnCA,MAAOyX,EAD4B,EAC5BA,OAEpBnX,EADYmX,EAAM,UAAMA,EAAO5X,KAAb,cAAuBA,GAASA,GACvCG,MAAQA,GAEvB2X,aAAc,SAACrX,EAAOC,GAClB,IAAMqX,EAASrX,EAAOC,QACtB,IAAK,IAAMX,KAAQ+X,EACftX,EAAMT,GAAQ+X,EAAO/X,GAEhBS,EAAMT,GAAMG,QACbM,EAAMT,GAAMG,MAAQ,IAIhC6X,SAAU,SAACvX,EAAOC,GAAmC,IAAD,EACzBA,EAAOC,QAAvBX,EADyC,EACzCA,KAAM4X,EADmC,EACnCA,OACTA,EACAnX,EAAM,GAAD,OAAImX,EAAO5X,KAAX,cAAqBA,IAAUU,EAAOC,QAE3CF,EAAMT,GAAQU,EAAOC,Y,GAQyB+W,GAAWtW,QAA1DuW,G,GAAAA,SAAUE,G,GAAAA,SAAUC,G,GAAAA,aAAcE,G,GAAAA,S,IAClCN,GAAf,Q,QCzCaO,GAAkB5X,YAAY,CACvCL,KAAM,aACNM,aAAc,CACVgR,QAAS,CACL,CAAC5N,YAAa,aAAcsI,OAAQ,KAAMxI,SAAUnC,EAAM6B,UAAW2B,KAAM,OAC3E,CAACnB,YAAa,SAAUsI,QAAS,IAAKxI,SAAUnC,EAAM0B,OAAQ8B,KAAM,OACpE,CAACnB,YAAa,SAAUsI,QAAS,IAAKxI,SAAUnC,EAAM6B,UAAW2B,KAAM,OACvE,CAACnB,YAAa,SAAUsI,QAAS,IAAKxI,SAAUnC,EAAM6B,UAAW2B,KAAM,OACvE,CAACnB,YAAa,aAAcsI,OAAQ,IAAKxI,SAAUnC,EAAM6B,UAAW2B,KAAM,OAC1E,CAACnB,YAAa,SAAUsI,QAAS,IAAMxI,SAAUnC,EAAM6B,UAAW2B,KAAM,QAE5EqT,OAAQ,GAEZ3X,SAAW,CACP4X,iBAAkB,SAAC1X,EAAOC,GAAsC,IAAD,EAC/BA,EAAOC,QAA3B2Q,EADmD,EACnDA,QAAS4G,EAD0C,EAC1CA,OACjBzX,EAAM6Q,QAAUA,EAChB7Q,EAAMyX,OAASA,GAEnBE,SAAU,SAAC3X,EAAOC,GACdD,EAAMyX,QAAUxX,EAAOC,QAAQqL,OAC/BvL,EAAM6Q,QAAQ7F,KAAK/K,EAAOC,UAE9B0X,YAAa,SAAC5X,EAAOC,GAAmC,IAAD,EACnDD,EAAMyX,QAAN,UAAgBzX,EAAM6Q,QAAQtC,OAAOtO,EAAOC,QAAS,GAAG,UAAxD,aAAgB,EAA4CqL,W,GAKbiM,GAAgB7W,QAA5D+W,G,GAAAA,iBAAkBC,G,GAAAA,SAAUC,G,GAAAA,YClC9BC,IDmCEL,GAAf,QCnC0B,SAAC,GAAyB,IAAD,IAAtBM,eAAsB,SACzCtU,EAAUpE,GAAe,SAAAY,GAAK,OAAIA,EAAMwD,WACxCT,EAAW3D,GAAe,SAAAY,GAAK,OAAIA,EAAMuB,UAAUwB,YACnDgV,EAAe3Y,GAAe,SAAAY,GAAK,OAAIA,EAAMmP,WAAWsI,UACxDjQ,EAAWtI,IAJ8B,EAMPyH,mBAAS,CAAEpH,KAAM,GAAI0D,YAAa,GAAIH,KAAM,IANrC,mBAMxCkV,EANwC,KAM1BtJ,EAN0B,KAQzCuJ,EAAuB,GAoG7B,OAlGA7P,OAAOyN,KAAKxS,IAAYuN,SAAQ,SAAApR,GAAK,OAAIyY,EAAcjN,KAAKxL,MAmGxD,gBAACiV,EAAA,EAAD,CAAWyD,OAAK,EAAhB,UACI,eAAC7N,EAAA,EAAD,UACI,eAACxB,EAAA,EAAD,UACI,uDAGPiP,EAAUK,GAAmB3U,EAASkL,GAvG/C,WAA0B,IAAD,EACrB,SAAS0J,EAAgBC,GACrB,QAAS7U,EAAQ6U,GAGrB,OAAQ,iCACJ,eAAChO,EAAA,EAAD,UACKiO,GAAmB9U,EAASkL,KAEjC,eAACrE,EAAA,EAAD,UACI,eAACxB,EAAA,EAAD,UACI,gBAAC0B,GAAA,EAAD,CAAY2G,UAAU,OAAtB,UACI,eAAC3G,GAAA,EAAW4L,QAAZ,UACI,eAAC1L,EAAA,EAAD,CACI/B,QAAS,WACLlB,EAASrE,GAAU6U,IACnBxQ,EAASmQ,GAAS,CACd5U,SAAUiV,EAAajV,SACvBqB,KAAM,SACNmH,QAASgN,GAAcP,EAAcjV,GACrCE,YAAa+U,EAAazY,SAGlC+H,QAAQ,kBAVZ,SAWK9D,EAAQwU,EAAazY,MAAQ,eAAC,KAAD,IAAY,eAAC,KAAD,QAGlD,eAAC,KAAD,CACI0J,YAAa,aACbf,GAAG,0BACHmO,QAAS4B,EACTO,eAAgB,UAChBxP,KAAM,QACNsN,cAAe,SAAC/W,GAAD,OAAUmP,EAAgB,2BAAKsJ,GAAN,IAAoBzY,KAAMA,MAClE4J,SAAU,SAACoN,GAAD,eAAe7H,EAAgB,2BAElCrL,GAAU,UAACkT,EAAU,UAAX,aAAC,EAAc5D,aAFQ,IAGpCpT,KAAI,UAAEgX,EAAU,UAAZ,aAAE,EAAc5D,eAGxB8F,SAAUpV,GAAW2U,EAAazY,MAAQ,CAACyY,EAAazY,MAAQ,KAEpE,eAACwJ,EAAA,EAAD,CAAaE,YAAa,0BACbzJ,MAAOwY,EAAanJ,eAAiBmJ,EAAanJ,eAAiB,GACnE7F,KAAM,KACNG,SAAW,SAAAC,GAAK,OAAIsF,EAAgB,2BAC7BsJ,GAD4B,IAE/BnJ,eAAgBzF,EAAME,OAAO9J,YAG9C,gBAACyL,GAAA,EAAD,CAAgBjC,KAAM,KAAM1B,QAAQ,UAAU4D,MAAK,gBAAW8M,EAAalV,MAA3E,UACI,eAACkF,EAAA,EAASS,KAAV,CACIC,QAAS,kBAAMgG,EAAgB,2BAAKsJ,GAAN,IAAoBlV,KAAM,MAD5D,eAEA,eAACkF,EAAA,EAASS,KAAV,CACIC,QAAS,kBAAMgG,EAAgB,2BAAKsJ,GAAN,IAAoBlV,KAAM,MAD5D,eAEA,eAACkF,EAAA,EAASS,KAAV,CACIC,QAAS,kBAAMgG,EAAgB,2BAAKsJ,GAAN,IAAoBlV,KAAM,MAD5D,kBAGJ,eAACyH,GAAA,EAAWC,OAAZ,UACI,eAACC,EAAA,EAAD,CACI/B,QAAS,kBAAMlB,EAASlE,GAAa0U,KACrC1Q,QAAQ,kBAFZ,SAE8B,eAAC,KAAD,eAK9C,gBAAC+C,EAAA,EAAD,WACI,eAACxB,EAAA,EAAD,CAAKC,GAAI,EAAT,SAEI,eAACC,EAAA,EAAD,CAAaE,YAAa,cAAeyP,mBAAiB,eAC7ClH,GAAG,WAAWxI,KAAM,KAAM+N,KAAM,GAChCvX,MAAOwY,EAAa/U,YACpBkG,SAAW,SAAAC,GAAK,OAAIsF,EAAgB,2BAC7BsJ,GAD4B,IAE/B/U,YAAamG,EAAME,OAAO9J,cAG/C,gBAACqJ,EAAA,EAAD,oCAEI,gBAAC4M,GAAA,EAAD,qBACKuC,EAAahV,qBADlB,aACK,EAA4B6P,MAAM,KAAKvK,KAAI,SAAC+P,GAAD,OACxC,eAAC5C,GAAA,EAAUhN,KAAX,CAAgBgB,MAAO,CAAE0I,gBAAiBiG,EAAgBC,GAAe,QAAU,aAAnF,SACoDA,GADpD,sBACoCA,OAEvCL,EAAalV,KAAO,EAAI,gBAAC2S,GAAA,EAAUhN,KAAX,CACjBgB,MAAO,CAAE0I,gBAAiB4F,EAAeQ,GAAcP,EAAcjV,GAAY,QAAU,aAD1E,0BAEXwV,GAAcP,EAAcjV,GAFjB,OAGnB,kCAVd,cAagBiV,EAAajV,kBAayB4V,QAOtE,SAASJ,GAAcP,EAAuBjV,GAC1C,IAAM6V,EAAoB7V,GAAsBnC,EAAM6B,UAChDoW,EAAiBb,EAAajV,SAAWiV,EAAajV,SAAWnC,EAAM6B,UAE7E,OAAOE,GAAOqV,EAAalV,KAAO,GAAGF,GAAYiW,GAAgBD,IAGrE,SAAST,GAAmB3U,EAAuBsV,GAC/C,OAAO,eAACzO,EAAA,EAAD,UAAMjC,OAAOyN,KAAKrS,GAAS8E,KAAI,SAAA9I,GAAK,OAAI,eAAC,GAAD,2BAAuDgE,EAAQhE,IAA/D,IACqBkP,gBAAiBoK,IADtC,uBAA0CtZ,SAI7F,SAAS8Y,GAAmB9U,EAAuBsV,GAC/C,IAAMjN,EAAwB,GAC9B,IAAK,IAAMtM,KAAQiE,EACfqI,EAAOb,KACH,eAACnC,EAAA,EAAD,CAA4BY,MAAO,CAAEqD,QAAS,OAA9C,SACI,eAAC,GAAD,2BAAyBtJ,EAAQjE,IAAjC,IAAwCmP,gBAAiBoK,MAD7D,iBAAoBvZ,KAK5B,OAAOsM,E,cCtJLkN,GAAY,CACdC,KAAM,EACNC,QAAS,OACTvE,WAAY,SACZ5H,QAAS,OACToM,YAAa,EACbC,aAAc,EACdC,YAAa,UACbC,YAAa,SACblH,gBAAiB,UACjBzH,MAAO,UACP4O,QAAS,OACTC,WAAY,2BAGVC,GAAc,CAChBJ,YAAa,WAGXK,GAAc,CAChBL,YAAa,WAGXM,GAAc,CAChBN,YAAa,WAGJO,GAAiB,SAAC,GACiG,IAD/FC,EAC8F,EAD9FA,YAAaC,EACiF,EADjFA,eAGpCC,EAASC,uBAAY,SAACC,GACxBA,EAAcpJ,SAAQ,SAACqJ,GACnB,IAAMC,EAAS,IAAIC,WAEnBD,EAAOE,QAAU,kBAAM/Z,QAAQC,IAAI,6BACnC4Z,EAAOG,QAAU,kBAAMha,QAAQC,IAAI,4BACnC4Z,EAAOI,OAAS,WAEZ,IAAMC,EAAYL,EAAOrO,OAEzBgO,EADuBU,IAG3BL,EAAOM,WAAWP,QAGvB,IAjBwH,EAuBvHQ,aAAY,CAAEX,SAAQY,OAAQ,qBAJ9BC,EAnBuH,EAmBvHA,aACAC,EApBuH,EAoBvHA,aACAC,EArBuH,EAqBvHA,aACAC,EAtBuH,EAsBvHA,aAGErR,EAAQsR,mBAAQ,8BAAC,uCAChBhC,IACC6B,EAAepB,GAAc,IAC7BqB,EAAepB,GAAc,IAC7BqB,EAAepB,GAAc,MACjC,CACAkB,EACAE,EACAD,IAGJ,OACI,gDAASF,KAAT,IAAyBlR,MAAOA,EAAhC,SAEI,eAACc,GAAA,EAAD,UAEI,eAACxB,EAAA,EAAD,CAAayI,GAAG,WAAWxI,KAAM,KAAM+N,KAAM,GAChC9N,YAAa,kDACbC,aAAW,cACX1J,MAAOoa,EACPzQ,SAAU,SAACC,GACPyQ,EAAezQ,EAAME,OAAO9J,gBCvEhDwb,GAAqB,SAAC,GAK0F,IAAD,IAJrFC,iBAIqF,MAJzE,YAIyE,MAHrFC,gBAGqF,aAFrFC,mBAEqF,SADrFC,EACqF,EADrFA,aAE7B9D,EAASlY,GAAe,SAAAY,GAAK,OAAIA,EAAMsX,UACvC7W,EAAkBrB,GAAe,SAAAY,GAAK,OAAIA,EAAMS,mBAChD2L,EAAgBhN,GAAe,SAAAY,GAAK,OAAIA,EAAMuB,UAAU6K,iBACxDhB,EAAgBhM,GAAe,SAAAY,GAAK,OAAIA,EAAMuB,UAAU2K,QAAQlM,EAAMuB,UAAU2K,QAAQC,WACxF3E,EAAWtI,IALuG,EAOhGyH,oBAAS,GAPuF,mBAOjHO,EAPiH,KAO3GC,EAP2G,OAQhGR,mBAAS,IARuF,mBAQjHS,EARiH,KAQ3GC,EAR2G,OAS1FV,mBAAS,WATiF,mBASjHW,EATiH,KASxGC,EATwG,OAU1FZ,mBAAS,IAViF,mBAUjH0U,EAViH,KAUxGC,EAVwG,KAYlHrI,EAAQqE,EAAO2D,GACrB,IAAKhI,EAED,OADA5S,QAAQkb,MAAR,6BAAoCN,EAApC,YACO,+BAf6G,IAiBhH1b,EAAqC0T,EAArC1T,KAAMqU,EAA+BX,EAA/BW,MAAOxP,EAAwB6O,EAAxB7O,KAAM1E,EAAkBuT,EAAlBvT,MAAOyX,EAAWlE,EAAXkE,OAE5BlU,EAAciY,EAAQ,UAAM/D,EAAM,aAAS5X,GAASA,EAA9B,aAAuC6E,EAAvC,eAAoD+S,EAAM,aAAS5X,GAASA,GAExG,GAAI4b,GAAyB,IAAVvH,EACf,OAAO,+BAcX,SAAS4H,IACL,OAAO,eAAC3S,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,eAAC,KAAD,CAAWJ,QAAS,kBAZ3C,WAAiB,IAAD,EACNyC,EAAaiQ,EAAahQ,EAAegB,EAAhB,UAA+B3L,EAAgB2D,EAAKqX,sBAApD,aAA+B,EAAqCjc,MAAOyT,GAE1G1L,EAAW4D,EAAWU,OAAS,UAAY,UAC3C1E,GAAQ,GACRkF,YAAW,kBAAMlF,GAAQ,KAAQ,MACjCE,EAAQ,GAAD,OAAI9H,EAAJ,yBAAyB4L,EAAWuB,MAApC,wBAAyDvB,EAAW0I,IAApE,mBAAkF1I,EAAWU,OAAS,UAAY,WAM5EJ,IAAQf,MAAO,UAAWjB,MAAO,CAAEC,OAAQ,eAG5F,SAASgS,IACL,OAAO,gBAAC7S,EAAA,EAAD,CAAKC,GAAI,EAAT,UACF7F,EADE,OAwDX,OAAO,gBAACwR,EAAA,EAAD,CAAWhL,MAAO,CAAEqD,QAAS,GAA7B,UACFqO,EAZL,WAA0B,IAAD,IACrB,OAAO,gBAAC9Q,EAAA,EAAD,WACFmR,IACAE,IACD,eAAC7S,EAAA,EAAD,UAAoB,IAAb+K,EAAQ,KACf,eAAC/K,EAAA,EAAD,oBAAMpI,EAAgB2D,EAAKqX,sBAA3B,aAAM,EAAqCjc,QAC3C,eAACqJ,EAAA,EAAD,UAAMnJ,IACN,eAACmJ,EAAA,EAAD,UAAK,6BAAkB,IAAb+K,EAAQ,IAAT,UAAmBnT,EAAgB2D,EAAKqX,sBAAxC,aAAmB,EAAqCjc,OAAQE,SAK9Dic,GArDnB,WAEI,GAAIpc,EAAKqc,SAAS,SAAoB,UAATrc,EACzB,OAAO,uCACFsc,IACD,gBAACxR,EAAA,EAAD,CAAKZ,MAAO,CAAEqD,QAAS,GAAvB,UACI,eAACjE,EAAA,EAAD,UACI,eAAC4B,EAAA,EAAD,CAAQzB,KAAM,KAAMN,QAAS,kBAAMlB,EAAS+P,GAAS,CAAEhY,KAAM8b,EAASzH,MAAO,EAAGxP,OAAM1E,MAAO,EAAGyX,OAAQlE,MAAxG,iBAEJ,eAACpK,EAAA,EAAD,CAAKC,GAAI,GAAIW,MAAO,CAAEqD,QAAS,GAA/B,SACI,eAAC/D,EAAA,EAAD,CAAaC,KAAM,KAAMC,YAAY,WACxBE,SAAW,SAAAC,GAAK,OAAIkS,EAAWlS,EAAME,OAAO9J,kBAQzE,SAASqc,IACL,OAAO,gBAACxR,EAAA,EAAD,CAAKZ,MAAO,CAAEqD,QAAS,GAAvB,UACF4O,IACD,eAAC7S,EAAA,EAAD,CAAKC,GAAI,EAAGW,MAAO,CAAEqD,QAAS,GAA9B,SACI,gBAACvC,GAAA,EAAD,WACI,eAACA,GAAA,EAAWuR,SAAZ,CAAqBC,QAASnI,EAAQ,EAAGzK,SAAU,kBAAM3B,EAAS0P,GAAS,2BAAKjE,GAAN,IAAaW,MAAO,SAC9F,eAACrJ,GAAA,EAAWuR,SAAZ,CAAqBC,QAASnI,EAAQ,EAAGzK,SAAU,kBAAM3B,EAAS0P,GAAS,2BAAKjE,GAAN,IAAaW,MAAO,SAC9F,eAACrJ,GAAA,EAAWuR,SAAZ,CAAqBC,QAASnI,EAAQ,EAAGzK,SAAU,kBAAM3B,EAAS0P,GAAS,2BAAKjE,GAAN,IAAaW,MAAO,SAC9F,eAACrJ,GAAA,EAAWuR,SAAZ,CAAqBC,QAASnI,EAAQ,EAAGzK,SAAU,kBAAM3B,EAAS0P,GAAS,2BAAKjE,GAAN,IAAaW,MAAO,cAGtG,eAAC/K,EAAA,EAAD,CAAKC,GAAI,EAAGW,MAAO,CAAEqD,QAAS,GAA9B,SACI,eAAC/D,EAAA,EAAD,CAAaC,KAAM,KAAMxJ,MAAOE,EACnByJ,SAAW,SAAAC,GAAK,OAAI5B,EAAS4P,GAAS,2BAAKnE,GAAN,IAAavT,MAAO2J,SAASD,EAAME,OAAO9J,mBAMxG,OAAOqc,IAe0BG,GACjC,eAACjP,GAAA,EAAD,CAAOkP,aAAW,EAACjP,QAAS,kBAAM7F,GAAQ,IAAQD,KAAMA,EAAMI,QAASA,EAAvE,SACKF,QCzGA8U,GAAY,SAAC,GAAmF,IAAD,IAAhFC,YAAgF,MAAzE,EAAyE,MAAtEC,mBAAsE,aAAlDC,sBAAkD,aAA1BC,oBAA0B,WAEtE3V,mBAASwV,GAF6D,mBAEjGI,EAFiG,KAEtFC,EAFsF,OAGrE7V,mBAASyV,GAH4D,mBAGjGlB,EAHiG,KAGvFuB,EAHuF,OAI/D9V,mBAAS0V,GAJsD,mBAIjGlB,EAJiG,KAIpFuB,EAJoF,KAKlGpF,EAASlY,GAAe,SAAAY,GAAK,OAAIA,EAAMsX,UAsB7C,OAAO,gBAACqF,EAAA,EAAD,WACH,eAACtS,EAAA,EAAD,UACI,eAACxB,EAAA,EAAD,UACI,6CAGPyT,EAAe,gBAACjS,EAAA,EAAD,mBAAWkS,EACvB,eAAC9R,EAAA,EAAD,CAAQhB,MAAO,CAAEqD,QAAS,EAAGsJ,MAAO,OAAQwG,OAAQ,QAAUtV,QAAQ,oBAAoB0B,KAAK,KACvFN,QAAS,kBAAM8T,EAAaD,EAAY,IADhD,eAEA,eAAC9R,EAAA,EAAD,CAAQhB,MAAO,CAAEqD,QAAS,EAAGsJ,MAAO,OAAQwG,OAAQ,QAAUtV,QAAQ,oBAAoB0B,KAAK,KACvFN,QAAS,kBAAM8T,EAAaD,EAAY,IADhD,eAEA,eAAC9R,EAAA,EAAD,CAAQzB,KAAM,KAAMS,MAAO,CAAEqD,QAAS,EAAG8P,OAAQ,QACzClU,QAAS,kBAAM+T,GAAgBvB,IADvC,kBAEA,eAACzQ,EAAA,EAAD,CAAQzB,KAAM,KAAMS,MAAO,CAAEqD,QAAS,EAAG8P,OAAQ,QACzClU,QAAS,kBAAMgU,GAAmBvB,IAD1C,wBAEK,+BACT,eAAC1G,EAAA,EAAD,CAAWyD,OAAK,EAAhB,SACI,eAAC7N,EAAA,EAAD,UApCR,WAA8G,IAAnFwS,EAAkF,uDAA/D,EAAG3B,EAA4D,uCAAzCC,EAAyC,uCAAnBC,EAAmB,uCACnG0B,EAA8B,GAC9BC,EAAuB5B,EAAc/S,OAAOC,OAAOiP,GAAQ5G,QAAO,SAAAlR,GAAK,OAAIA,EAAMoU,MAAQ,KAAGtL,KAAI,SAAA2K,GAAK,OAAIA,EAAMkE,OAAN,UAAkBlE,EAAMkE,OAAO5X,KAA/B,cAAyC0T,EAAM1T,MAAS0T,EAAM1T,QAAQ6I,OAAOyN,KAAKyB,GAajM,OAZAyF,EAAWvO,MAAK,SAAC6D,EAAGC,GAAJ,OAAUD,EAAEyD,cAAcxD,MAE1CyK,EAAWnM,SAAQ,SAAAqK,GACf6B,EAAa9R,KACT,eAAC,GAAD,CACIiQ,YACAC,WACAC,cACAC,gBAJJ,gBAAkCH,QAQnC+B,GAAYF,EAAcD,GAsBxBI,CAAkBV,EAAWrB,EAAUC,EAAanI,IAA0B1K,KAAI,SAACiU,EAAWhU,GAAZ,OAC/E,gBAACM,EAAA,EAAD,WACI,eAACA,EAAA,EAAD,UACKsS,EAAc,gBAAC9Q,EAAA,EAAD,WACP,eAACxB,EAAA,EAAD,CAAKC,GAAI,IACT,eAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,6CACZ,eAACD,EAAA,EAAD,gBACA,eAACA,EAAA,EAAD,gBACA,eAACA,EAAA,EAAD,gBACA,eAACA,EAAA,EAAD,UAAK,0CAEP,gBAACwB,EAAA,EAAD,WACE,eAACxB,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,6CACZ,gBAACD,EAAA,EAAD,CAAKC,GAAI,EAAGW,MAAO,CAAEqD,QAAS,GAA9B,UACI,uBAAMrD,MAAO,CAAEyT,YAAa,EAAGC,aAAc,IAA7C,SAAmD,qCACnD,uBAAM1T,MAAO,CAAEyT,YAAa,EAAGC,aAAc,GAA7C,SAAkD,uCAClD,uBAAM1T,MAAO,CAAEyT,YAAa,EAAGC,aAAc,GAA7C,SAAkD,uCAClD,uBAAM1T,MAAO,CAAEyT,YAAa,EAAGC,aAAc,GAA7C,SAAkD,0CAEtD,eAACtU,EAAA,EAAD,CAAKC,GAAI,EAAT,wBAIXyT,IAtBL,mBAAsBhU,aAnBf,iB,UCzBd6U,GAAiB,WAC1B,IAAMjO,EAAa/P,GAAe,SAAAY,GAAK,OAAIA,EAAMmP,cAC3C3H,EAAWtI,IAFe,EAIAyH,mBAAS,IAJT,mBAIzB0W,EAJyB,KAIfC,EAJe,KAOhC,SAASC,EAAWhV,EAAeiV,GAC/B,OAAOA,EAAMC,MAAM,EAAGlV,EAAQ,GAAGmV,QAAO,SAAC7J,EAAD,UAAqBA,EAArB,EAAQtI,SAA2B,GAG/E,SAASoS,EAAoB5a,GACzB,OAAQA,GACJ,KAAKnC,EAAM0B,OAAQ,MAAO,CAAC6P,gBAAiB,QAASzH,MAAO,SAC5D,KAAK9J,EAAMyB,OAAQ,MAAO,CAAC8P,gBAAiB,OAC5C,KAAKvR,EAAM2B,SAAU,MAAO,CAAC4P,gBAAiB,QAC9C,KAAKvR,EAAM4B,SAAU,MAAO,CAAC2P,gBAAiB,gBAC9C,QAAS,MAAO,CAACA,gBAAiB,UAI1C,OAAO,gBAAC9H,EAAA,EAAD,WACH,gBAACuT,GAAA,EAAD,CAAOC,SAAO,EAACC,YAAU,EAACC,OAAK,EAAC/U,KAAM,KAAtC,UACI,iCACA,gCACI,oCACA,0CACA,yCACA,sCACA,yCAGJ,mCAECmG,EAAW0B,QAAQvI,KAAI,SAAC9I,EAAO+I,EAAOiV,GAAf,OACpB,gCACI,qBAAI/T,MAAOkU,EAAoBne,EAAMuD,UAArC,SAAiDwF,IACjD,8BAAK/I,EAAMyD,cACX,8BAAKzD,EAAM+L,SACX,8BAAKgS,EAAWhV,EAAOiV,KACvB,qBAAI/T,MAAO,CAAEC,OAAQ,WAArB,SACI,eAACQ,EAAA,EAAD,CACIC,QACI,eAACC,GAAA,EAAD,CAASlC,GAAE,SAAX,0BAFR,SAMI,eAAC,KAAD,CAAaQ,QAAS,kBAAMlB,EAASoQ,GAAYrP,KAASmC,MAAO,cAZ7E,aAAenC,EAAf,YAAwB/I,EAAMyD,iBAiBlC,gCACI,qBAAI+a,QAAS,EAAb,SAAgB,6CAChB,qBAAIA,QAAS,EAAb,SAAgB,6BAAI7O,EAAWsI,oBAKvC,gBAAClN,GAAA,EAAD,WACI,eAACxB,EAAA,EAAD,CACIE,YAAa,UACbzJ,MAAO6d,EAASpa,YAAcoa,EAASpa,YAAc,GACrD+F,KAAM,KACNG,SAAW,SAAAC,GAAK,OAAIkU,EAAY,2BACzBD,GADwB,IAE3Bpa,YAAamG,EAAME,OAAO9J,YAGlC,eAACuJ,EAAA,EAAD,CACIE,YAAa,SACbzJ,MAAO6d,EAAS9R,OAAS8R,EAAS9R,OAAS,GAC3CvC,KAAM,KACNG,SAAW,SAAAC,GAAK,OAAIkU,EAAY,2BACzBD,GADwB,IAE3B9R,OAAQ0S,OAAO7U,EAAME,OAAO9J,aAGpC,eAACiL,EAAA,EAAD,CACI/B,QAAS,kBAAMlB,EAASmQ,GAAS0F,KACjC/V,QAAQ,kBAFZ,SAGI,eAAC,KAAD,aC/EH4W,GAAa,WACtB,IAAMC,EAAc,GADQ,EAKYxX,mBAAS,CAAEpH,KAAM,GAAI0D,YAAa,KAL9C,mBAKrBmb,EALqB,KAKPC,EALO,KAOtBC,EAA0B,GAMhC,OAFAlW,OAAOyN,KAAPzN,OAAA,IAAAA,QAAA,IAAAA,CAAA,GAAiB/E,IAAegC,KAAYuL,SAAQ,SAAApR,GAAK,OAAI8e,EAActT,KAAKxL,MAEzE,gBAACiV,EAAA,EAAD,WACH,eAACpK,EAAA,EAAD,UACI,eAACxB,EAAA,EAAD,UACI,eAAC,KAAD,CACII,YAAa,SACbf,GAAG,yBACHmO,QAASiI,EACT9F,eAAgB,UAChBxP,KAAM,QACNsN,cAAe,SAAC/W,GAAD,OAAU8e,EAAgB,2BAAKF,GAAN,IAAmB5e,KAAMA,MACjE4J,SAAU,SAACoN,GAAD,iBAAe8H,EAAgB,mDAClCD,GAAiB/a,GAAU,UAACkT,EAAU,UAAX,aAAC,EAAc5D,aAAgBtN,GAAQ,UAACkR,EAAU,UAAX,aAAC,EAAc5D,aADhD,IAEpCpT,KAAI,UAAEgX,EAAU,UAAZ,aAAE,EAAc5D,eAGxB8F,SAAU,2BAAKpV,IAAegC,IAAW+Y,EAAa7e,MAAQ,CAAC6e,EAAa7e,MAAQ,SAI/F,2BAAK8D,IAAegC,IAAW+Y,EAAa7e,MACzC,eAAC8K,EAAA,EAAD,UACI,eAACxB,EAAA,EAAD,UACI,eAACE,EAAA,EAAD,CAAaE,YAAa,cAAeyP,mBAAiB,eAC7ClH,GAAG,WAAWxI,KAAM,KAAM+N,KAAM,GAChCvX,MAAOgN,KAAKC,UAAU2R,EAAc,KAAM,MACrCG,WAAW,MAAO,MAClBA,WAAW,IAAK,IAErB1M,WAAS,EACT2M,WAAW,aAI9BrN,MC9BDsN,GAAoB,WAAO,IAAD,EACH9X,mBAAS,GADN,mBAC5B+X,EAD4B,KAClBC,EADkB,OAEGhY,mBAAS,IAFZ,mBAE5BiT,EAF4B,KAEfC,EAFe,OAGelT,oBAAS,GAHxB,mBAG5BiY,EAH4B,KAGTC,EAHS,OAIGlY,oBAAS,GAJZ,mBAI5BmY,EAJ4B,KAIfC,EAJe,OAKapY,oBAAS,GALtB,mBAK5BqY,EAL4B,KAKVC,EALU,OAMKtY,mBAAS,GANd,mBAM5BuY,EAN4B,KAMdC,EANc,OAOGxY,mBAAS,KAPZ,mBAO5ByY,EAP4B,KAOfC,EAPe,KAU7BC,EAAgBlgB,GAAe,SAAAY,GAAK,OAAIA,KACxCwH,EAAWtI,IAsBjB,SAASqgB,IACL,OAAO,eAAC5C,EAAA,EAAD,UACH,gBAAClI,EAAA,EAAD,CAAWhL,MAAO,CAAEqD,QAAS,GAA7B,UACI,eAACzC,EAAA,EAAD,UACI,eAACxB,EAAA,EAAD,UACK+V,EACG,eAAC7V,EAAA,EAAD,CACI6I,aAAc,kBAAMiN,GAAqB,IACzCrf,MAAO8f,EAAc/d,UAAU6K,cAC/BjD,SAAW,SAAAC,GAAK,OAAI5B,EAASsG,GAAiB1E,EAAME,OAAO9J,SAC3DqS,WAAW,IAEf,qBAAIpI,MAAO,CAAE+V,WAAY,gBAAiBC,SAAU,aAChD/W,QAAS,kBAAMmW,GAAqB,IADxC,SAEES,EAAc/d,UAAU6K,oBAItC,eAAC/B,EAAA,EAAD,UACKqV,GAA6BpgB,KAElC,eAAC+K,EAAA,EAAD,UAEI,eAACsV,EAAA,EAAD,UACI,gBAACA,EAAA,EAAKtV,IAAN,WAEI,eAACxB,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,iDAGJ,eAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SAEI,gBAACyI,EAAA,EAAD,CAAWC,GAAInH,IAAf,UACI,eAACoH,EAAA,EAAD,CAAWC,QAAM,EAAC5I,GAAI,EAAtB,oBACA,eAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACC,EAAA,EAAD,CAAaC,KAAM,KAAMxJ,MAAO0f,EACnB/V,SAAU,SAAAC,GAAK,OAAI+V,EAAgB9V,SAASD,EAAME,OAAO9J,kBAIlF,eAACqJ,EAAA,EAAD,gBACA,eAACA,EAAA,EAAD,CAAKC,GAAI,EAAT,SAEI,gBAACyI,EAAA,EAAD,CAAWC,GAAInH,IAAf,UACI,eAACoH,EAAA,EAAD,CAAWC,QAAM,EAAC5I,GAAI,EAAtB,mBACA,eAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACC,EAAA,EAAD,CAAaC,KAAM,KAAMxJ,MAAO4f,EACnBjW,SAAU,SAAAC,GAAK,OAAIiW,EAAehW,SAASD,EAAME,OAAO9J,kBAIjF,eAACqJ,EAAA,EAAD,UACI,gBAAC4B,EAAA,EAAD,CACI/B,QAAS,kBhB1DtC,SAA8B0C,EAAuBC,GAA4D,IAC9GF,EAAaM,GADgG,uDAAxB,EAAwB,uDAAL,KAG9G,OADAM,GAAYX,EAAD,oBAAqCY,GAAqBb,GAAaE,GAC3EF,EgBuDwCyU,CAxDpCN,EAAc/d,UAAU2K,QAAQoT,EAAc/d,UAAU2K,QAAQC,QAwDamT,EAAc/d,UAAU6K,cAAe8S,EAAcE,IAC7G9X,QAAS,QAFb,mBAE4B,eAAC,KAAD,CAAWoD,MAAO,UAAWjB,MAAO,CAAEC,OAAQ,6BArD3E,yBA2F3B,SAASmW,IAgCL,OAAO,eAAClD,EAAA,EAAD,UACH,gBAAClI,EAAA,EAAD,WACI,eAACpK,EAAA,EAAD,UACI,eAACxB,EAAA,EAAD,UACI,8BAAKiX,EAAiBrc,GAAUsc,gBAGxC,gBAAC1V,EAAA,EAAD,WACI,gBAACxB,EAAA,EAAD,CAAK8I,GAAI,EAAT,UACI,gBAACtH,EAAA,EAAD,WACI,eAACxB,EAAA,EAAD,UACI,eAAC4B,EAAA,EAAD,CAAQzB,KAAM,KACNN,QAAS,kBAAMmR,EAAerN,KAAKC,UAAU6S,KADrD,sBAGJ,eAACzW,EAAA,EAAD,UACI,eAAC4B,EAAA,EAAD,CAAQzB,KAAM,KAAMN,QAAS,kBA/JzD,SAA6BkR,GACzB,GAAKA,EAAL,CAGA,IAAM5Z,EAAQwM,KAAKwT,MAAMpG,GAEzBpS,EAASqG,GAAgB7N,EAAMuB,YAE/BiG,EAAShH,EAAsBR,EAAMS,kBACrC+G,EAASlB,GAAgBtG,EAAMuG,YAC/BiB,EAAS6P,GAAarX,EAAMsX,SAC5B9P,EAASjE,GAAcvD,EAAMwD,UAC7BgE,EAAStF,EAAclC,EAAM+G,UAC7BS,EAASkQ,GAAiB1X,EAAMmP,cAkJ2B8Q,CAAoBrG,IAAvD,uBAGR,gBAACvP,EAAA,EAAD,WACI,eAACxB,EAAA,EAAD,UACI,oBAAGoN,KAAI,uCAAkCiK,mBACrC1T,KAAKC,UAAU6S,KAEhBa,SAAUb,EAAc/d,UAAU6K,cAAgBkT,EAAc/d,UAAU6K,cAAgB,QAAU,qBAHvG,SAII,eAAC3B,EAAA,EAAD,2BAGR,eAAC5B,EAAA,EAAD,OAIJ,gBAACwB,EAAA,EAAD,oBACWqU,EACP,eAACjU,EAAA,EAAD,CAAQhB,MAAO,CAAEqD,QAAS,EAAGsJ,MAAO,OAAQwG,OAAQ,QAAUtV,QAAQ,oBAC9D0B,KAAK,KACLN,QAAS,kBAAMiW,EAAYD,EAAW,IAF9C,eAGA,eAACjU,EAAA,EAAD,CAAQhB,MAAO,CAAEqD,QAAS,EAAGsJ,MAAO,OAAQwG,OAAQ,QAAUtV,QAAQ,oBAC9D0B,KAAK,KACLN,QAAS,kBAAMiW,EAAYD,EAAW,IAF9C,kBAIJ,eAACrU,EAAA,EAAD,UACI,eAACxB,EAAA,EAAD,UACI,eAAC4B,EAAA,EAAD,CAAQ/B,QAAS,kBAAMmR,EAAerN,KAAKC,UAxEnE,WACI,IAAMZ,EAAS,CACXuJ,MAAO,GACP9T,QAAS,GACTR,OAAQ,IAGNsU,EAAoB,GACpB9T,EAAwB,GACxBR,EAAsC,GAEtCyF,EAAY+Y,EAAc/Y,UAChC,IAAK,IAAM6Z,KAAY7Z,EACnB,KAAM6Z,KAAY/a,IAAY+a,KAAY1c,IAAc0c,KAAYjb,IAAY,CAC5E,IAAMU,EAAcU,EAAU6Z,GAC1Bva,EAAKlC,WAAaxB,GAAcyB,OAChCtC,EAAQ8e,GAAYva,EACbA,EAAKlC,WAAaxB,GAAciD,OACvCtE,EAAOsf,GAAYva,EAEnBuP,EAAMgL,GAAYva,EAO9B,OAHAgG,EAAOuJ,MAAQA,EACfvJ,EAAOvK,QAAUA,EACjBuK,EAAO/K,OAASA,EACT+K,EA6CkEwU,MAArD,qCAMZ,eAACxX,EAAA,EAAD,CAAK8I,GAAI,GAAT,SACI,eAAC,GAAD,CAAsBiI,cAAaC,wBAI3C,gBAACxP,EAAA,EAAD,WACI,gBAACxB,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,eAACuB,EAAA,EAAD,UACI,eAACxB,EAAA,EAAD,UAEJ,eAAC8W,EAAA,EAAKW,MAAN,CAAYrO,MAAM,OAAO1S,KAAK,SAAS6E,KAAM,QAAS8D,GAAE,yBAC5C6T,QAAoD,SAA3CuD,EAAc/d,UAAU2K,QAAQC,OACzChD,SAAU,kBAAM3B,EAASyG,GAAiB,gBAItD,eAAC5D,EAAA,EAAD,UACI,eAACxB,EAAA,EAAD,UACJ,eAAC8W,EAAA,EAAKW,MAAN,CAAYrO,MAAM,QAAQ1S,KAAK,SAAS6E,KAAM,QAAS8D,GAAE,yBAC7C6T,QAAoD,UAA3CuD,EAAc/d,UAAU2K,QAAQC,OACzChD,SAAU,kBAAM3B,EAASyG,GAAiB,oBAM1D,gBAACpF,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,eAACuB,EAAA,EAAD,CAAKZ,MAAO,CAAE8W,OAAQ,EAAGnH,YAAa,QAASC,YAAa,QAASmH,OAAQ,GAA7E,SACK1B,EACG,eAAC/V,EAAA,EAAD,CACI6I,aAAc,kBAAMmN,GAAe,IACnCvf,MAAO8f,EAAc/d,UAAU2K,QAAQkB,KACvCjE,SAAW,SAAAC,GAAK,OAAI5B,EAASuG,GAAiB3E,EAAME,OAAO9J,SAC3DqS,WAAW,IAEf,qBACInJ,QAAS,kBAAMqW,GAAe,IADlC,SAEEO,EAAc/d,UAAU2K,QAAQkB,KAAOkS,EAAc/d,UAAU2K,QAAQkB,KAAO,2BAIxF,eAAC/C,EAAA,EAAD,CAAKZ,MAAO,CAAE8W,OAAQ,EAAGnH,YAAa,QAASC,YAAa,QAASmH,OAAQ,GAA7E,SACKxB,EACG,eAACjW,EAAA,EAAD,CACI6I,aAAc,kBAAMqN,GAAoB,IACxCzf,MAAO8f,EAAc/d,UAAU2K,QAAQmB,MACvClE,SAAW,SAAAC,GAAK,OAAI5B,EAASwG,GAAsB5E,EAAME,OAAO9J,SAChEqS,WAAW,IAEf,qBACInJ,QAAS,kBAAMuW,GAAoB,IADvC,SAEEK,EAAc/d,UAAU2K,QAAQmB,MAAQiS,EAAc/d,UAAU2K,QAAQmB,MAAQ,yCAMjGjF,OAAOyN,KAAKpS,IACR+M,SAAQ,SAAChR,EAAO+I,GACb,OAAIkY,MAAMxC,OAAOze,IACN,GAGJ,gBAAC6K,EAAA,EAAD,WACH,eAACxB,EAAA,EAAD,CAAK6X,GAAI,EAAT,SAAaZ,EAAiBvX,KAC9B,eAACM,EAAA,EAAD,CAAK6X,GAAI,EAAGjX,MAAO,CAACqD,QAAQ,GAA5B,SACI,eAAC6S,EAAA,EAAD,UACI,uBAA0BzO,UAAU,OAApC,UACI,eAACyO,EAAA,EAAKW,MAAN,CAAY7M,QAAM,EAACxB,MAAM,eAAe1S,KAAK,SAAS6E,KAAM,QAAS8D,GAAE,UAAK1I,EAAL,mBAC3Duc,QAASuD,EAAc/d,UAAU+L,OAAOC,KAAKoT,SAASpY,GACtDY,SAAU,kBAAM3B,EAAS4G,GAAa,CAAEC,MAAO,OAAQ9F,cAEnE,eAACoX,EAAA,EAAKW,MAAN,CAAY7M,QAAM,EAACxB,MAAM,OAAO1S,KAAK,SAAS6E,KAAM,QAAS8D,GAAE,UAAK1I,EAAL,mBACnDuc,QAASuD,EAAc/d,UAAU+L,OAAOG,KAAKkT,SAASpY,GACtDY,SAAU,kBAAM3B,EAAS4G,GAAa,CAAEC,MAAO,OAAQ9F,cAEnE,eAACoX,EAAA,EAAKW,MAAN,CAAY7M,QAAM,EAACxB,MAAM,gBAAgB7N,KAAM,QAAS8D,GAAE,UAAK1I,EAAL,mBAC9Cuc,QAASuD,EAAc/d,UAAU+L,OAAOK,MAAMgT,SAASpY,GACvDY,SAAU,kBAAM3B,EAAS4G,GAAa,CAAEC,MAAO,QAAS9F,gBAXxE,sBAJL,iBAAoB/I,WA/GpB,kBAgK3B,SAASsgB,EAAiB/J,GACtB,OAAQA,GACJ,KAAKtS,GAAUiK,gBACX,MAAO,kBACX,KAAKjK,GAAUmd,OACX,MAAO,SACX,KAAKnd,GAAUod,QACX,MAAO,UACX,KAAKpd,GAAUqd,QACX,MAAO,UACX,KAAKrd,GAAUsd,UACX,MAAO,YACX,KAAKtd,GAAUsc,SACX,MAAO,WACX,KAAKtc,GAAUmK,WACX,MAAO,aACX,KAAKnK,GAAU+J,OACX,MAAO,SACX,QACI,MAAM,mBAAN,OAA0BuI,IAItC,SAASiL,EAAajL,EAAgBzI,GAClC,OAAQyI,GACJ,KAAKtS,GAAUiK,gBACX,OAAO6R,IACX,KAAK9b,GAAUmd,OACX,OAxPZ,SAAuBtT,GAEnB,MAAkB,SAAXA,EAAoB,eAAC,GAAD,GAAgB,aAAiB,eAAC,GAAD,eADpC,CAAE6O,KAAM,EAAGE,gBAAgB,EAAMC,cAAc,IACK,aAsP7D2E,CAAc3T,GACzB,KAAK7J,GAAUod,QACX,OArPZ,SAAwBvT,GACpB,OAAO,eAACqP,EAAA,EAAD,UACH,eAAC,GAAD,CAAY7E,QAAoB,SAAXxK,KADF,iBAoPR4T,CAAe5T,GAC1B,KAAK7J,GAAUqd,QACX,OArOD,eAACnE,EAAA,EAAD,UACH,eAAC,GAAD,KADmB,iBAsOnB,KAAKlZ,GAAUsd,UACX,OAlPD,gBAACpE,EAAA,EAAD,WACH,eAACtS,EAAA,EAAD,UACI,eAACxB,EAAA,EAAD,UACI,8BAAKiX,EAAiBrc,GAAUsd,iBAGxC,eAAC,GAAD,MANmB,mBAmPnB,KAAKtd,GAAUsc,SACX,OAAOF,IACX,KAAKpc,GAAUmK,WACX,OA1DD,gBAAC+O,EAAA,EAAD,WACH,eAACtS,EAAA,EAAD,UACI,eAACxB,EAAA,EAAD,UACI,8BAAKiX,EAAiBrc,GAAUmK,kBAGxC,eAAC,GAAD,MANmB,oBA2DnB,KAAKnK,GAAU+J,OACX,OAjDD,eAACmP,EAAA,EAAD,UACH,eAACtS,EAAA,EAAD,UACI,eAACxB,EAAA,EAAD,UACI,eAAC,GAAD,SAHW,gBAkDnB,QACI,OAAO,eAAC8T,EAAA,EAAD,mCAA8B5G,MAIjD,SAASoL,IAA0B,IAAlB7T,EAAiB,uDAAR,OAChB8T,EAAQ9B,EAAc/d,UAAU+L,OAAOA,GAAQhF,KAAI,SAAA/I,GAAI,OAAIyhB,EAAazhB,EAAM+N,MACpF,OAAO,qCACW,IAAboR,EACK,+BAAM1B,GAAYoE,EAAO1C,KACzB,eAACrU,EAAA,EAAD,UACG2S,GAAYoE,EAAO1C,GAAUpW,KAAI,SAAC+Y,EAAY9Y,GAAb,OAC9B,eAACM,EAAA,EAAD,CAA+BC,GAAI,EAAnC,SACKuY,GADL,mBAAsB9Y,WAS1C,OAAO,gBAAC8B,EAAA,EAAD,WACH,eAACxB,EAAA,EAAD,CAAK6X,GAAI,EAAGxY,GAAG,kBAAf,SACKiZ,EAAQ,UAEb,eAACtY,EAAA,EAAD,CAAK6X,GAAI,EAAGxY,GAAG,uBAAf,SACI,+BACKiZ,QAGT,eAACtY,EAAA,EAAD,CAAK6X,GAAI,EAAGxY,GAAG,kBAAf,SACKiZ,EAAQ,eAOrB,SAASzB,GAA6Bjf,GAClC,IAAMoL,EAAwB,GAC9B,IAAK,IAAMpM,KAASgB,EAChBoL,EAAOb,KACH,eAACnC,EAAA,EAAD,CAA2BY,MAAO,CAAEqD,QAAS,OAA7C,SACI,eAAC,GAAD,CAAwBrN,MAAOA,KADnC,eAAkBA,KAK1B,OAAOoM,EAIJ,SAASmR,GAAYsE,EAAwBzE,GAEhD,IADA,IAAM0E,EAAgB,GACbC,EAAI,EAAGA,EAAI3E,EAAU2E,IAAK,CAC/B,IAAMC,GAASH,EAAQ1O,OAAS,GAAKiK,EAAW,EAAI,EACpD0E,EAAOC,GAAK,IAAIE,MAAMD,GACtB,IAAK,IAAI1W,EAAI0W,EAAOD,EAAGzW,EAAI0W,GAAQD,EAAI,GAAIzW,IACvCwW,EAAOC,GAAGxW,KAAKsW,EAAQvW,IAG/B,OAAOwW,EC7aII,OAVf,WACI,OACI,eAAClN,EAAA,EAAD,CAAWyD,OAAK,EAAChH,UAAU,MAAMzH,MAAO,CAAE0I,gBAAiB,SAA3D,SAEI,eAAC,GAAD,OCIGyP,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,mBCmBCQ,GAhBDC,YAAe,CACzBC,QAAS,CACLhhB,UAAW4L,GAAeoV,QAC1B9hB,gBAAiBd,EAAqB4iB,QACtCjL,OAAQL,GAAWsL,QACnB/e,QAASN,GAAYqf,QACrBhc,UAAWf,GAAe+c,QAC1Bxb,QAASlG,EAAa0hB,QACtBpT,WAAYqI,GAAgB+K,SAEhCC,WAAW,aAAKC,iBCtBL,ICUfC,IAASC,OACL,eAAC,IAAMC,SAAP,UACI,gBAAC,IAAD,CAAUP,MAAOA,GAAjB,UACI,uBACIQ,IAAI,aACJ5M,KAAK,0EACL6M,UAAU,0EACVC,YAAY,cAEhB,eAAC,GAAD,SAGRC,SAASC,eAAe,SAM5BrB,O","file":"static/js/main.5db4541d.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { IItem } from \"../inventory/inventorySlice\";\r\n\r\nexport enum EWeaponCategory {\r\n    PISTOL,\r\n    _,\r\n    SWORD,\r\n    CHAIN,\r\n}\r\n\r\n\r\nexport interface IWeapon extends IItem{\r\n    weaponCategory: EWeaponCategory,\r\n    damage: string,\r\n    range: number,\r\n    rof: string,\r\n    clip: number,\r\n    rld: string\r\n    type: EDamageType,\r\n    pen: number,\r\n    weight: number,\r\n\r\n}\r\n\r\nexport enum ESpellType {\r\n    ATTACK = \"Attack\",\r\n    CONCENTRATION = \"Concentration\"\r\n}\r\n\r\nexport interface ISpell extends IItem {\r\n    exp: number,\r\n    prerequisites: string,\r\n    action: string,\r\n    focusPower: string,\r\n    range: string,\r\n    sustained: boolean,\r\n    subtype: ESpellType[],\r\n    pen: number,\r\n    damage: string,\r\n    type: EDamageType,\r\n}\r\n\r\nexport interface IWeaponState {\r\n    [name: string]: IWeapon | ISpell\r\n}\r\n\r\nexport enum EDamageType {\r\n    IMPACT,\r\n    RENDING,\r\n    SCHOCK,\r\n    LASER,\r\n    ENERGY,\r\n\r\n    MISC,\r\n}\r\n\r\n\r\nexport interface IArmourStats {\r\n    head?: number,\r\n    body?: number,\r\n    armR?: number,\r\n    armL?: number,\r\n    legR?: number,\r\n    legL?: number\r\n}\r\n\r\nexport interface IArmour extends IItem, IArmourStats {}\r\n\r\nexport interface IArmouryState {\r\n    armour: IArmourStats,\r\n    gear: {[name: string]: IArmour},\r\n    weapons: IWeaponState,\r\n    character: {\r\n        currentWounds: number,\r\n        maxWounds: number,\r\n        currentInfamy: number,\r\n    }\r\n}\r\n\r\nexport const armouryInitalState = {\r\n    armour: {\r\n        head: 0,\r\n        body: 0,\r\n        armR: 0,\r\n        armL: 0,\r\n        legR: 0,\r\n        legL: 0,\r\n    },\r\n    gear: { },\r\n    weapons: {},\r\n    character: {\r\n        currentWounds: 5,\r\n        maxWounds: 7,\r\n        currentInfamy: 2\r\n    }\r\n} as IArmouryState\r\n\r\nexport const armourySlice = createSlice({\r\n    name: 'armoury',\r\n    initialState: armouryInitalState,\r\n    reducers: {\r\n        setGear: (state, action: PayloadAction<IArmour>) =>  {\r\n            const { head, body, armL, armR, legL, legR, name } = action.payload;\r\n\r\n            state.armour.head = head ? head : state.armour.head\r\n            state.armour.body = body ? body : state.armour.body\r\n            state.armour.armL = armL ? armL : state.armour.armL\r\n            state.armour.armR = armR ? armR : state.armour.armR\r\n            state.armour.legL = legL ? legL : state.armour.legL\r\n            state.armour.legR = legR ? legR : state.armour.legR\r\n\r\n          state.gear[name] = action.payload;\r\n        },\r\n        removeGear: (state, action: PayloadAction<IArmour>) =>  {\r\n            const { head, body, armL, armR, legL, legR, name } = action.payload;\r\n\r\n            state.armour.head = head ? 0 : state.armour.head\r\n            state.armour.body = body ? 0 : state.armour.body\r\n            state.armour.armL = armL ? 0 : state.armour.armL\r\n            state.armour.armR = armR ? 0 : state.armour.armR\r\n            state.armour.legL = legL ? 0 : state.armour.legL\r\n            state.armour.legR = legR ? 0 : state.armour.legR\r\n\r\n            delete state.gear[name]\r\n        },\r\n        setWeapon: (state, action: PayloadAction<IWeapon | ISpell>) => {\r\n            state.weapons[action.payload.name] = {...action.payload, count: 1};\r\n        },\r\n        removeWeapon: (state, action) => {\r\n            delete state.weapons[action.payload.name];\r\n        },\r\n        setWounds: (state, action: PayloadAction<number>) => {\r\n            state.character.currentWounds = action.payload\r\n        },\r\n        setMaxWounds: (state, action) => {\r\n            state.character.maxWounds = action.payload\r\n        },\r\n        importArmoury: (state, action: PayloadAction<IArmouryState>) => {\r\n            const { armour, gear, weapons, character  } = action.payload;\r\n            state.armour = armour;\r\n            state.gear = gear;\r\n            state.weapons = weapons;\r\n            state.character = character;\r\n        }\r\n    },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setGear, removeGear, setWeapon, removeWeapon, setWounds, setMaxWounds, importArmoury } = armourySlice.actions\r\nexport default armourySlice.reducer\r\n\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"./store\";\r\n\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport interface ICharacteristics {\r\n    name: string;\r\n    value: number;\r\n    short: string;\r\n    bonus: number;\r\n}\r\n\r\nexport interface ICharacteristicsState {\r\n    [short: string]: ICharacteristics\r\n}\r\n\r\nexport const characteristicsInitialState = {\r\n    'WS': { name: \"Weapon Skill\", value: 30, short: 'WS', bonus: 0  },\r\n    'BS': { name: \"Ballistic Skill\", value: 30, short: 'BS', bonus: 0 },\r\n    'S': { name: \"Strength\", value: 30, short: 'S', bonus: 0 },\r\n    'T': { name: \"Toughness\", value: 30, short: 'T', bonus: 0 },\r\n    'AG': { name: \"Agility\", value: 30, short: 'AG', bonus: 0 },\r\n    'INT': { name: \"Intelligence\", value: 30, short: 'INT', bonus: 0 },\r\n    'PER': { name: \"Perception\", value: 30, short: 'PER', bonus: 0 },\r\n    'WP': { name: \"Willpower\", value: 30, short: 'WP', bonus: 0 },\r\n    'FEL': { name: \"Fellowship\", value: 30, short: 'FEL', bonus: 0 },\r\n    'INF': { name: \"Infamy\", value: 30, short: 'INF', bonus: 0 },\r\n    'COR': { name: \"Corruption\", value: 0, short: 'COR', bonus: 0}\r\n} as ICharacteristicsState\r\n\r\n\r\nexport const characteristicsSlice = createSlice({\r\n    name: 'characteristics',\r\n    initialState: characteristicsInitialState,\r\n    reducers: {\r\n        increment: (state, action: PayloadAction<string>) => {\r\n            state[action.payload].value += 1\r\n        },\r\n        decrement: (state, action: PayloadAction<string>) => {\r\n            state[action.payload].value -= 1\r\n        },\r\n        incrementBonus: (state, action: PayloadAction<string>) => {\r\n            console.log(action.payload)\r\n            state[action.payload].bonus += 1\r\n        },\r\n        decrementBonus: (state, action: PayloadAction<string>) => {\r\n            state[action.payload].bonus > 0 ? state[action.payload].bonus -= 1 : state[action.payload].bonus = 0;\r\n        },\r\n        importCharacteristics: (state, action) => {\r\n            const characteristics = action.payload;\r\n            for (const stat in characteristics) {\r\n                state[stat] = characteristics[stat]\r\n            }\r\n        }\r\n    },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementBonus, decrementBonus, importCharacteristics } = characteristicsSlice.actions\r\nexport default characteristicsSlice.reducer\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { allTalents } from \"../character/resources\";\r\n\r\nexport interface ITalent {\r\n    name: string,\r\n    tier: number,\r\n    prerequisites?: string,\r\n    devotion: EGods,\r\n    description?: string,\r\n    specialization?: string\r\n}\r\n\r\nexport enum EGods {\r\n    KHORNE = \"Khorne\",\r\n    NURGLE = \"Nurgle\",\r\n    SLAANESH = \"Slaanesh\",\r\n    TZEENTCH = \"Tzeentch\",\r\n    UNALIGNED = \"Unaligned\",\r\n    SPECIAL = \"Special\",\r\n}\r\n\r\nexport interface IGodMap {\r\n    \"Khorne\": EGods.KHORNE,\r\n    \"Nurgle\": EGods.NURGLE,\r\n    \"Slaanesh\": EGods.SLAANESH,\r\n    \"Tzeentch\": EGods.TZEENTCH,\r\n    \"Unaligned\": EGods.UNALIGNED,\r\n    \"Special\": EGods.SPECIAL,\r\n    [idx: string]: EGods\r\n}\r\n\r\nexport const godStringMap =  {\r\n    \"Khorne\": EGods.KHORNE,\r\n    \"Nurgle\": EGods.NURGLE,\r\n    \"Slaanesh\": EGods.SLAANESH,\r\n    \"Tzeentch\": EGods.TZEENTCH,\r\n    \"Unaligned\": EGods.UNALIGNED,\r\n    \"Special\": EGods.SPECIAL,\r\n} as IGodMap\r\n\r\n/**\r\nTier 1 Talente (T:200xp/A:250xp/O:500xp)\r\nTier 2 Talents (T:300xp/A:500xp/O:750xp)\r\nTier 3 Talents (T:400xp/A:750xp/O:1000xp)\r\n */\r\nexport const expMap = [\r\n    [200, 250, 500],\r\n    [300, 500, 750],\r\n    [400, 750, 1000]\r\n];\r\n\r\nexport const devotionMap = {\r\n    [EGods.UNALIGNED]: {\r\n        [EGods.UNALIGNED]: 1,\r\n        [EGods.SPECIAL]: 1,\r\n        [EGods.KHORNE]: 1,\r\n        [EGods.NURGLE]: 1,\r\n        [EGods.TZEENTCH]: 1,\r\n        [EGods.SLAANESH]: 1,\r\n    },\r\n    [EGods.KHORNE]: {\r\n        [EGods.UNALIGNED]: 1,\r\n        [EGods.SPECIAL]: 1,\r\n        [EGods.KHORNE]: 0,\r\n        [EGods.NURGLE]: 1,\r\n        [EGods.TZEENTCH]: 2,\r\n        [EGods.SLAANESH]: 2,\r\n    },\r\n    [EGods.NURGLE]: {\r\n        [EGods.UNALIGNED]: 1,\r\n        [EGods.SPECIAL]: 1,\r\n        [EGods.KHORNE]: 1,\r\n        [EGods.NURGLE]: 0,\r\n        [EGods.TZEENTCH]: 2,\r\n        [EGods.SLAANESH]: 2,\r\n    },\r\n    [EGods.TZEENTCH]: {\r\n        [EGods.UNALIGNED]: 1,\r\n        [EGods.SPECIAL]: 1,\r\n        [EGods.KHORNE]: 2,\r\n        [EGods.NURGLE]: 2,\r\n        [EGods.TZEENTCH]: 0,\r\n        [EGods.SLAANESH]: 1,\r\n    },\r\n    [EGods.SLAANESH]: {\r\n        [EGods.UNALIGNED]: 1,\r\n        [EGods.SPECIAL]: 1,\r\n        [EGods.KHORNE]: 2,\r\n        [EGods.NURGLE]: 2,\r\n        [EGods.TZEENTCH]: 1,\r\n        [EGods.SLAANESH]: 0,\r\n    },\r\n    [EGods.SPECIAL]: {\r\n        [EGods.UNALIGNED]: 1,\r\n        [EGods.SPECIAL]: 1,\r\n        [EGods.KHORNE]: 1,\r\n        [EGods.NURGLE]: 1,\r\n        [EGods.TZEENTCH]: 1,\r\n        [EGods.SLAANESH]: 1,\r\n    }\r\n};\r\n\r\nexport interface ITalentState {\r\n    [name: string]: ITalent\r\n}\r\n\r\nexport const talentsInitialState = {\r\n    'Total Recall': { name: \"Total Recall\", tier: 1, devotion: EGods.UNALIGNED, prerequisites: \"-\", description: \"The character can automatically remember trivial facts or pieces of information the character might feasibly have picked up in the past. When dealing with more detailed, complex or obscure facts, such as the exact layout of a defence network, the GM may require a successful Intelligence Test to recall the information.\" },\r\n} as ITalentState\r\n\r\nexport const talentSlice = createSlice({\r\n    name: 'skills',\r\n    initialState: talentsInitialState,\r\n    reducers: {\r\n        addTalent: (state, action: PayloadAction<ITalent>) => {\r\n            const talent = action.payload;\r\n            if (talent.name !== '') {\r\n                state[talent.name] = talent\r\n\r\n                if (!allTalents[talent.name]) {\r\n                    allTalents[talent.name] = talent;\r\n                }\r\n\r\n            }\r\n        },\r\n        removeTalent: (state, action) => {\r\n            delete state[action.payload.name];\r\n        },\r\n        importTalents: (state, action) => {\r\n            const talents = action.payload;\r\n            for (const name in talents) {\r\n                state[name] = talents[name];\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { addTalent, removeTalent, importTalents } = talentSlice.actions\r\nexport default talentSlice.reducer\r\n\r\n","export enum EItemCategory {\r\n    NONE = \"-\",\r\n    WEAPON = \"Weapon\",\r\n    ARMOUR = \"Armour\",\r\n    SPELL = \"Spells\",\r\n    MISC = \"Misc\",\r\n}\r\n","import { ISkillState } from \"../skills/skillSlice\";\r\nimport { IInventory } from \"../inventory/inventorySlice\";\r\nimport { EDamageType, ESpellType, EWeaponCategory, IArmour, ISpell, IWeapon, IWeaponState } from \"../armoury/armourySlice\";\r\nimport { EGods, ITalentState } from \"../talents/talentSlice\";\r\nimport { EItemCategory } from \"./EItemCategory\";\r\n\r\nexport const allSkills: ISkillState = {\r\n    'Acrobatics': { name: 'Acrobatics', level: 0, type: 'Ag', bonus: 0 },\r\n    'Athletics': { name: 'Athletics', level: 0, type: 'S', bonus: 0 },\r\n    'Awareness': { name: 'Awareness', level: 0, type: 'Per', bonus: 0 },\r\n    'Charm': { name: 'Charm', level: 0, type: 'Fel', bonus: 0 },\r\n    'Command': { name: 'Command', level: 0, type: 'Fel', bonus: 0 },\r\n    'Commerce': { name: 'Commerce', level: 0, type: 'Int', bonus: 0 },\r\n    'Common Lore': { name: 'Common Lore', level: 0, type: 'Int', bonus: 0 },\r\n    'Deceive': { name: 'Deceive', level: 0, type: 'Fel', bonus: 0 },\r\n    'Dodge': { name: 'Dodge', level: 0, type: 'Ag', bonus: 0 },\r\n    'Forbidden Lore': { name: 'Forbidden Lore', level: 0, type: 'Int', bonus: 0 },\r\n    'Interogate': { name: 'Interogate', level: 0, type: 'Fel', bonus: 0 },\r\n    'Inquiry': { name: 'Inquiry', level: 0, type: 'Fel', bonus: 0 },\r\n    'Intimidate': { name: 'Intimidate', level: 0, type: 'S', bonus: 0 },\r\n    'Linguistics': { name: 'Linguistics', level: 0, type: 'Int', bonus: 0 },\r\n    'Logic': { name: 'Logic', level: 0, type: 'Int', bonus: 0 },\r\n    'Medicae': { name: 'Medicae', level: 0, type: 'Int', bonus: 0 },\r\n    'Navigation (Surface)': { name: 'Navigation (Surface)', level: 0, type: 'Int', bonus: 0 },\r\n    'Navigation (Stellar)': { name: 'Navigation (Stellar)', level: 0, type: 'Int', bonus: 0 },\r\n    'Navigation (Warp)': { name: 'Navigation (Warp)', level: 0, type: 'Int', bonus: 0 },\r\n    'Operate (Aeronaut)': { name: 'Operate (Aeronaut)', level: 0, type: 'Ag', bonus: 0 },\r\n    'Operate (Surface)': { name: 'Operate (Surface)', level: 0, type: 'Ag', bonus: 0 },\r\n    'Operate (Voidship)': { name: 'Operate (Voidship)', level: 0, type: 'Ag', bonus: 0 },\r\n    'Parry': { name: 'Parry', level: 0, type: 'Ws', bonus: 0 },\r\n    'Psyniscience': { name: 'Psyniscience', level: 0, type: 'Per', bonus: 0 },\r\n    'Scholastic Lore': { name: 'Scholastic Lore', level: 0, type: 'Int', bonus: 0 },\r\n    'Scrutiny': { name: 'Scrutiny', level: 0, type: 'Per', bonus: 0 },\r\n    'Security': { name: 'Security', level: 0, type: 'Int', bonus: 0 },\r\n    'Sleight of Hand': { name: 'Sleight of Hand', level: 0, type: 'Ag', bonus: 0 },\r\n    'Stealth': { name: 'Stealth', level: 0, type: 'Ag', bonus: 0 },\r\n    'Tech-Use': { name: 'Tech-Use', level: 0, type: 'Int', bonus: 0 },\r\n    'Tracking': { name: 'Tracking', level: 0, type: 'Int', bonus: 0 },\r\n    'Trade': { name: 'Trade', level: 0, type: 'Ag', bonus: 0 },\r\n}\r\n\r\nexport const allTalents = {\r\n    'Air of Authority': { name: \"Air of Authority\", tier: 1, prerequisites: \"Fel 30\", devotion: EGods.SLAANESH, description: \"When making Command Skill Tests, the character may affect a number of targets equal to 10 times his Fellowship bonus. If the character has Minions (see page 135) they are also more devoted to him and add +10 to their Loyalty when in his presence. This talent has no effect on hostile targets, and only affects NPCs.\" },\r\n    'Ambidextrous': { name: \"Ambidextrous\", tier: 1, prerequisites: \"Ag 30\", devotion: EGods.UNALIGNED, description: \"The character may use either hand equally well for any task, and does not suffer the –20 penalty for actions using his off hand. Special: When combined with the Two-Weapon Wielder Talent, the penalty for making attacks with both weapons in the same Turn drops to –10.\" },\r\n    'Ancient Warrior': { name: \"Ancient Warrior\", tier: 1, devotion: EGods.UNALIGNED, description: \"This Talent must be taken at Character Creation. The character can command special respect from other veterans of the Long War and gains a +10 to all Fellowship Tests and Skill Tests based on Fellowship when dealing with such NPCs. In addition, Chaos Space Marine Minions of the character increase their loyalty by +10. Long War weaponry is also easier for him to obtain and all weapons with the word “Legion” in the title count as one Availability category easier than normal (i.e. Rare becomes Scarce, Scarce becomes Average, etc.). Finally, veterans of the Long War are despised by the Imperium and the Adeptus Astartes especially, and should the character’s past become known by these powers it is likely to end in blood…\" },\r\n    \"Armour-Monger\": { name: \"Armour-Monger\", tier: 2, prerequisites: \"Int 35, Tech Use, Trade (Armorer)\", devotion: EGods.UNALIGNED, description: \"The character increases the Armour Points of any armour he wears by 2 on all locations it would normally cover as long as he has at least an hour each day to clean and repair it or make minor modiﬁ cations. This bonus applies only to armour worn by the character as it combines his training as much as his skill at armoury.\" },\r\n    \"Arms Master\": { name: \"Arms Master\", tier: 3, prerequisites: \"WS 40, BS 40, Weapon Training (any two)\", devotion: EGods.UNALIGNED, description: \"When the Heretic uses a weapon he is untrained in, he only suffers a –10 penalty, rather than a –20. The only exceptions to the Arms Master Talent are exotic weapons, which are so unusual or rare that they always require their own weapon training Talents to use without penalty and gain no bonus when combined with this talent.\" },\r\n    \"Assassin Strike\": { name: \"Assassin Strike\", tier: 3, prerequisites: \"Ag 40, Acrobatics\", devotion: EGods.SLAANESH, description: \"After making a melee attack, a successful Acrobatics Skill Test allows the character to move at half rate as a Free Action. The character’s opponent does not receive a free attack resulting from this move. The character may only make this move once per round.\" },\r\n    \"Baleful Dirge\": { name: \"Baleful Dirge\", tier: 2, prerequisites: \"Disturbing Voice, Intimidate +10\", devotion: EGods.NURGLE, description: \"Singing the dirge takes some concentration and requires a Half Action each round to maintain. All creatures which can hear the character within a 30-metre radius must make a Willpower Test or suffer a –10 on their next roll. As long as the dirge is maintained, all those affected by it must test each turn to see if they suffer its effects. Once a creature passes a Willpower Test however, it has completely overcome the dirge and is not affected by it for the remainder of the encounter.\" },\r\n    \"Bastion of Iron Will\": { name: \"Bastion of Iron Will\", tier: 3, prerequisites: \"Psy Rating, Strong Minded, WP 40\", devotion: EGods.TZEENTCH, description: \"The character adds 5 x his Psy Rating on any Opposed Test involving defending against the Psyniscience Skill or Psychic Powers.\" },\r\n    \"Battle Rage\": { name: \"Battle Rage\", tier: 2, prerequisites: \"Frenzy\", devotion: EGods.KHORNE, description: \"The character may Parry while frenzied. In addition such is the character’s control he may reroll a failed roll to snap out of Frenzy or resist entering Frenzy if he so chooses.\" },\r\n    \"Berserk Charge\": { name: \"Berserk Charge\", tier: 1, devotion: EGods.KHORNE, description: \"If the character uses the Charge Action, he gains a +30 bonus to Weapon Skill instead of +20.\" },\r\n    \"Betrayer\": { name: \"Betrayer\", tier: 2, prerequisites: \"Cold Hearted, Intimidate\", devotion: EGods.UNALIGNED, description: \"Once per game session the character may kill either an allied NPC (i.e. an NPC which is openly friendly toward the PC and trusts him) or one of his own Minions. Such calculated cruelty boosts the Heretic’s reputation, granting him a +10 bonus on his next Infamy Test if the victim was an NPC and +20 if it was a Minion (and harder to replace). Killing NPCs and Minions usually has consequences as well which should be determined by the GM.\" },\r\n    \"Blade Dancer\": { name: \"Blade Dancer\", tier: 3, prerequisites: \"WS 40, Two-Weapon Wielder (Melee)\", devotion: EGods.UNALIGNED, description: \"When attacking with any bladed weapon, including chainswords, axes, and powerswords, the character may reroll one missed attack per round.\" },\r\n    \"Blademaster\": { name: \"Blademaster\", tier: 3, prerequisites: \"WS 30, Weapon Training (Any melee)\", devotion: EGods.KHORNE, description: \"When armed with two singled handed melee weapons with the Balanced Quality, the character reduces the penalties for Two-Weapon Fighting (see page 243) by 10 (so –20 would drop to –10). If taken with the Ambidextrous Talent, this drops the penalty to +0.\" },\r\n    \"Blasphemous Incantation\": { name: \"Blasphemous Incantation\", tier: 3, prerequisites: \"Psy Rating\", devotion: EGods.TZEENTCH, description: \"Using a power with an incantation increases the Focus Power Test by a Half Action, as the psyker requires a few moments to speak the required words. Powers for which the Focus Power Test takes a Reaction cannot be used with an invocation. Using a power with an invocation grants the psyker a +1 bonus to his Psy Rating, after determining Psychic Strength. This bonus to PR does not inﬂuence the Psychic Strength in any way; their beneﬁt is applied after determining whether a power is used at the Unfettered, Fettered or Push level. However, the psyker must add +20 to any roll on the Psychic Phenomena table. Finally, any result of 91 or higher on the Focus Power Test is an automatic failure that results in Perils of the Warp.\" },\r\n    \"Blind Fighting\": { name: \"Blind Fighting\", tier: 1, prerequisites: \"Per 30\", devotion: EGods.TZEENTCH, description: \"This talent reduces all penalties for ﬁghting with a melee weapon while suffering from obscured vision by half (rounded up), permitting the character to ﬁght in fog, smoke or darkness more effectively. See page 245 for a full list of attack penalties based on lighting and vision. Note this talent only improves a character’s chances to hit with melee weapons and has not effect on ranged weapon attacks.\" },\r\n    \"Blood God's Contempt\": { name: \"Blood God's Contempt\", tier: 3, prerequisites: \"Frenzy, WP 40\", devotion: EGods.KHORNE, description: \"The character spends the time before battle armouring himself against the power of the warp by cursing the names of sorcerers and showing his fearlessness before his feeble power and all those who wield the power of the warp. This talent may be used at any time by a character as long as he has at least an hour to perform his ritual of contempt (a player may say his character has already performed the ritual before play begins if the GM agrees). The character must also spend one Infamy Point. During the game session whenever the character is the subject of the effects of a psychic power, daemonic power or other warp based power, he may make a Willpower Test (make this test before any tests he would normally be permitted to resist the effects of the power). If the Willpower test is passed the character is unaffected by the psychic power. If the test is failed then the psychic power affects him as normal and he becomes Frenzied in addition to any other effects. The effects of this talent only apply to powers that directly affect the character (such as targeted powers or powers which catch him in their area of effect) and not powers which may harm him indirectly (such as attack from summoned daemons or falling or flung debris from a telekinetic). In addition, powers used by friendly psykers must also be resisted (and also cause Frenzy should he fail to resist them). A power that is resisted by a character using this talent is not nullified an others are affected by it as normal.\" },\r\n    \"Bolter Drill\": { name: \"Bolter Drill\", tier: 3, prerequisites: \"Weapon Training (Bolt), BS 40\", devotion: EGods.UNALIGNED, description: \"When ﬁring any class of Bolt weapon on full or semi-auto the character may score one additional Degree of Success (provided the Test is successful) if he does not take a Move Action in his turn.\" },\r\n    \"Bulging Biceps\t\": { name: \"Bulging Biceps\", tier: 2, prerequisites: \"S 45\", devotion: EGods.NURGLE, description: \"The character can ﬁre heavy weapons using Semi-Auto Burst or Full Auto Burst without bracing, and he does not suffer the -30 penalty for failing to brace. In addition whenever the character uses the Athletics Heft Special Skill Use (see page 96) he may add +20 to his Athletics Skill Test to reﬂect his massive muscles.\" },\r\n    \"Catfall\": { name: \"Catfall\", tier: 1, devotion: EGods.SLAANESH, description: \"The character automatically reduces the distance of all falls by a number of metres equal to his Agility Bonus, ignoring this distance as if it did not exist. In addition the character adds +20 to his Acrobatics Skill Tests when using the Jump Special Skill Use as it pertains to reducing Damage from falling.\" },\r\n    \"Child of the Warp\": { name: \"Child of the Warp\", tier: 2, prerequisites: \"Psy Rating\", devotion: EGods.UNALIGNED, description: \"This grants greater connection to the warp and increases the character’s Psy Rating by +1 when he chooses to Push . The downside, however, is that the warp is always partially manifest in his presence and he generates constant psychic phenomena. At the start of each game session the character should roll 1d10 on Table 4-4: Child of the Warp to determine the nature of these persistent effects which follow him for the duration of the session.\" },\r\n    \"Cold Hearted\": { name: \"Cold Hearted\", tier: 1, devotion: EGods.UNALIGNED, description: \"Seduction attempts against him automatically fail, and he gains a +20 to his Willpower when making Opposed Tests against an opponent using the Charm Skill. Taking this Talent gives the character one Corruption Point.\" },\r\n    \"Combat Formation\": { name: \"Combat Formation\", tier: 1, prerequisites: \"Int 40\", devotion: EGods.TZEENTCH, description: \"Before rolling initiative, all members of the group (including the character) add +1 to his Initiative Rolls. Any member of the group may also choose to use the Intelligence Bonus of the character for their initiative roll rather than their own Agility Bonus.\" },\r\n    \"Combat Master\": { name: \"Combat Master\", tier: 2, prerequisites: \"WS 30\", devotion: EGods.KHORNE, description: \"Opponents ﬁghting the character in hand-to-hand combat gain no bonuses for Ganging Up (see page 245).\" },\r\n    \"Combat Sense\": { name: \"Combat Sense\", tier: 1, prerequisites: \"Per 30\", devotion: EGods.UNALIGNED, description: \"The character may use his Perception Bonus in place of his Agility Bonus when rolling Initiative.\" },\r\n    \"Corpus Conversion\": { name: \"Corpus Conversion\", tier: 2, prerequisites: \"Psy Rating, Human\", devotion: EGods.NURGLE, description: \"A psyker with the Corpus Conversion Talent gains access to this Path to Power, and may elect to use it before he attempts his Focus Power Test. The psyker may gain a number of bonus Degrees of Success no greater than his Toughness Bonus on his Focus Power Test. However, for every Degree of Success gained in this way, the psyker suffers 1d10 Toughness Damage (note, this is not permanent Toughness Damage) and one Corruption Point as the energies of the warp poison his body from within. Traitor Legion characters may not beneﬁt from Corpus Conversion; the taint-resistant metabolism of the Astartes makes them incapable of burning away his ﬂesh to fuel warp-based powers.\" },\r\n    \"Counter Attack\": { name: \"Counter Attack\", tier: 2, prerequisites: \"WS 40\", devotion: EGods.UNALIGNED, description: \"After successfully parrying an opponent’s attack, the character may immediately make an attack against that opponent using the weapon with which he parried as a Free Action even though it is not his turn. This attack suffers a –20 penalty and may not be combined with any ability which allows more than one hit or attack such as Lighting Attack or Two-Weapon Fighting.\" },\r\n    \"Crack Shot\": { name: \"Crack Shot\", tier: 2, prerequisites: \"BS 50\", devotion: EGods.TZEENTCH, description: \"When the character’s ranged attack causes Critical Damage, add +2 to the Damage result.\" },\r\n    \"Crippling Strike\": { name: \"Crippling Strike\", tier: 2, prerequisites: \"WS 50\", devotion: EGods.SLAANESH, description: \"When the character’s melee attack causes Critical Damage add +2 to the Damage result.\" },\r\n    \"Crushing Blow\": { name: \"Crushing Blow\", tier: 3, prerequisites: \"WS 40\", devotion: EGods.KHORNE, description: \"The character adds half his Weapon Skill Bonus to Damage he inﬂicts in melee.\" },\r\n    \"Cursed Heirloom\": { name: \"Cursed Heirloom\", tier: 1, devotion: EGods.UNALIGNED, description: \"Passed down through the ages, the character has come into possession of an ancient ancestral heirloom. He must roll a 1d5 on the Cursed Heirloom Table for any weapon or armour giving it a permanent curse. He is now bonded to the item and even if it is lost, destroyed, or stolen it always somehow turns up in its original condition at the start of the next game session. Such items also usually come with a history of their own and the GM should feel free to have the item’s past come back to haunt the character from time to time\" },\r\n    \"Deadeye Shot\": { name: \"Deadeye Shot\", tier: 1, prerequisites: \"BS 30\", devotion: EGods.TZEENTCH, description: \"When making a Called Shot (see page 234) ranged attack, the character reduces the penalty by 10 (so a –20 becomes a –10 instead).\" },\r\n    \"Deflect Shot\": { name: \"Deflect Shot\", tier: 2, prerequisites: \"Ag 50\", devotion: EGods.UNALIGNED, description: \"When the character is armed with a readied melee weapon they add his Weapon Skill Bonus to his armour points on all locations (even unarmed locations) when calculating Damage from hits from ranged weapons with the Primitive Special Quality or Thrown weapons.\" },\r\n    \"Demagogue\": { name: \"Demagogue\", tier: 3, prerequisites: \"Inspire Wrath\", devotion: EGods.SLAANESH, description: \"When the character uses the Charm or Intimidate Skill to affect more than one person they may affect up to a 100 times his Fellowship Bonus. In addition such is the character’s natural magnetism and charisma that he adds +10 to the loyalty of all his Minions.\" },\r\n    \"Die Hard\": { name: \"Die Hard\", tier: 1, prerequisites: \"WP 40\", devotion: EGods.NURGLE, description: \"When he suffers from blood loss, he may roll twice to avoid death.\" },\r\n    \"Disarm\": { name: \"Disarm\", tier: 1, prerequisites: \"Ag 30\", devotion: EGods.UNALIGNED, description: \"If in close combat, the character may use a Full Action to disarm his foe by making an Opposed Weapon Skill Test. If the character wins the test, the enemy drops his weapon at his feet. Should the character obtain three or more Degrees of Success, he may take the enemy’s weapon from him.\" },\r\n    \"Disturbing Voice\": { name: \"Disturbing Voice\", tier: 1, devotion: EGods.NURGLE, description: \"The character gains a +10 bonus to all Intimidate Skill Tests, but suffers a –10 penalty to Fellowship Tests when dealing with others in a non-threatening manner, such as animals, children or the easily startled. In addition, the character is more adept at instilling fear in his followers and when using the Special Skill Use Terrify (see page 97), and adds +10 to his Command Skill Test to counter the effects of Fear.\" },\r\n    \"Double Team\": { name: \"Double Team\", tier: 1, devotion: EGods.UNALIGNED, description: \"When ganging up on an opponent, the character gains an additional +10 bonus to Weapon Skill Tests. If one or more of the other allies ganging up on the opponent have this Talent, both gain an additional +10 bonus, for a total of +20. This bonus is in addition to the normal bonus gained from Ganging Up on an opponent (see page 245).\" },\r\n    \"Electro Graft Use\": { name: \"Electro Graft Use\", tier: 1, prerequisites: \"Mechanicus Implants\", devotion: EGods.UNALIGNED, description: \"Grants and additional +10 to common lore, inquiry, or Tech-Use whilst connected to a data Port.\" },\r\n    \"Enemy\": { name: \"Enemy\", tier: 1, devotion: EGods.UNALIGNED, description: \"The character suffers an additional –10 multiplied X times penalty to Fellowship Tests when dealing with this group and the GM may use them to complicate his life from time to time. Unlike other talents this talent does not cost any experience points to purchase and cannot be taken as an advance.\" },\r\n    \"Excessive Wealth\": { name: \"Excessive Wealth\", tier: 1, prerequisites: \"Inf 40\", devotion: EGods.SLAANESH, description: \"The character gains a +10 bonus to his Infamy whenever he makes an Acquisition Test representing his increased ability to buy goods.\" },\r\n    \"Exotic Weapon Training\": { name: \"Exotic Weapon Training\", tier: 2, devotion: EGods.UNALIGNED, description: \"The character is trained to use a particularly obscure type of weapon, allowing him to use armaments few others have ever seen. Weapons requiring this unique talent are noted in their armoury descriptions. When a character attempts to use a weapon he does not have the correct Weapon Training Talent for, he suffers a –20 penalty to any relevant Weapon Skill or Ballistic Skill Test. Unlike other kinds of weapons training this talent applies only to a single weapon and not a class of weapons\" },\r\n    \"Eye of Vengeance\": { name: \"Eye of Vengeance\", tier: 3, prerequisites: \"BS 50\", devotion: EGods.TZEENTCH, description: \"Before making a Standard Attack ranged attack action, the character may spend an Infamy Point. If he does so, his attack deals +X Damage and gains +X Pen, where X equals the number of Degrees of Success scored on the attack roll.\" },\r\n    \"Favoured by the Warp\": { name: \"Favoured by the Warp\", tier: 3, prerequisites: \"WP 35\", devotion: EGods.TZEENTCH, description: \"Whenever a Power Roll results in Psychic Phenomena, the character may roll one additional time on that table and take the more favourable result. Perils of the Warp affect him as normal—such is the capacious nature of the gods that not even the “favoured” can avoid their gaze from time to time…\" },\r\n    \"Fearless\": { name: \"Fearless\", tier: 3, prerequisites: \"Nerves of Steel\", devotion: EGods.NURGLE, description: \"The character is immune to the effects of Fear and Pinning, but disengaging from combat or backing down from a ﬁght is difﬁcult for him to stomach and as such requires a successful Willpower Test.\" },\r\n    \"Ferric Summons\": { name: \"Ferric Summons\", tier: 1, prerequisites: \"Ferric Lure Implants\", devotion: EGods.UNALIGNED, description: \"The Heretic can call an unsecured metal object to his hand as with Ferric Lure Implants, but may summon objects of up to 2 kilograms per point of his Willpower Bonus and may summon objects up to 40 metres distant.\" },\r\n    \"Flesh Render\": { name: \"Flesh Render\", tier: 1, prerequisites: \"Weapon Training (Chain)\", devotion: EGods.KHORNE, description: \"When inﬂicting Damage with a melee weapon that has the Tearing Quality, the character rolls two additional die for Damage, rather than the normal one for using a Tearing weapon, and discards the lowest two Damage dice results.\" },\r\n    \"Foresight\": { name: \"Foresight\", tier: 2, prerequisites: \"Int 30\", devotion: EGods.TZEENTCH, description: \"By spending ten minutes studying or analysing a problem, the character gains a +10 bonus to his next Intelligence Test or a Skill Test based on Intelligence.\" },\r\n    \"Frenzy\": { name: \"Frenzy\", tier: 1, devotion: EGods.KHORNE, description: \"If the character spend one full round fuelling anger (through flagellation, drugs, or other means), next round go into an uncontrolled rage, gaining a +10 bonus to Weapon Skill, Strength, Toughness, and Willpower, but suffering a –20 penalty to Ballistic Skill, Intelligence and Fellowship. The character must attack the nearest enemy in melee combat if possible. While Frenzied, he is immune to Fear, Pinning, stunning effects, the effects of Fatigue, and he may not Parry, retreat, or flee. He remains Frenzied for the duration of the combat. Characters may not use psychic powers whilst in Frenzy. After combat ends, or if there are no more eligible targets for the character to attack he can make a Willpower Test to snap out of his Frenzy. If he fails he must continue to attack, favouring NPCs over PCs. Each successive round however he may make another Willpower Test, with a cumulative +10 Bonus to return to a stable state of mind and come out of Frenzy.\" },\r\n    \"Furious Assault\": { name: \"Furious Assault\", tier: 2, prerequisites: \"WS 35\", devotion: EGods.KHORNE, description: \"If the character successfully hits his target using the All Out Attack Action, he may spend his Reaction (and thus not being able to parry or dodge until his next turn) to make an additional attack using the same bonuses or penalties as the original attack.\" },\r\n    \"Greater Minion of Chaos\": { name: \"Greater Minion of Chaos\", tier: 3, prerequisites: \"Fel 55, Infamy 50\", devotion: EGods.UNALIGNED, description: \"Details on creating a Greater Minion can be found on page 135. This talent may be taken more than once, each time adding another Greater Minion to the character’s retinue.\" },\r\n    \"Gunslinger\": { name: \"Gunslinger\", tier: 3, prerequisites: \"BS 40, Two-Weapon Wielder (Ballistic)\", devotion: EGods.UNALIGNED, description: \"When armed with two pistol-class weapons, both of which he can use single-handedly, the character reduces the penalty for Two-Weapon Fighting by 10 (so –20 would drop to –10). If taken with the Ambidextrous Talent, this drops the penalty to +0.\" },\r\n    \"Hammer Blow\": { name: \"Hammer Blow\", tier: 3, prerequisites: \"Crushing Blow\", devotion: EGods.KHORNE, description: \"When the character makes an All Out Attack manoeuvre to make a single melee attack he may add half his Strength Bonus to the weapon’s Armour Penetration. The attack also counts as having the Concussive (2) Special Quality to represent the shocking force of the blow’s impact.\" },\r\n    \"Hard Target\": { name: \"Hard Target\", tier: 2, prerequisites: \"Ag 50\", devotion: EGods.SLAANESH, description: \"When the character performs a Charge or Run action, opponents suffer a –20 penalty to Ballistic Skill Tests made to hit the character with a ranged weapon. This penalty continues until the start of the character’s next turn.\" },\r\n    \"Hardy\": { name: \"Hardy\", tier: 2, prerequisites: \"T 40\", devotion: EGods.NURGLE, description: \"When undergoing medical treatment or healing from injures , the character always recovers Damage as if lightly wounded regardless of the level of Damage he has sustained.\" },\r\n    \"Hatred\": { name: \"Hatred\", tier: 2, devotion: EGods.KHORNE, description: \"A group, organisation or race has wronged the character in the past, fuelling this animosity. When fi ghting opponents of that group in close combat, the character gains a +10 bonus to all Weapon Skill Tests made against him. The character also finds it difficult to back down from a fight with his hated foe and must make a Willpower Test to retreat or surrender when fighting him unless massively outnumbered or outclassed\" },\r\n    \"Heightened Senses\": { name: \"Heightened Senses\", tier: 1, devotion: EGods.TZEENTCH, description: \"When the character gains this Talent, select one of the ﬁve senses: The character gains a +10 bonus to any tests speciﬁcally involving this sense. Thus, Heightened Senses (Sight) would apply to an Awareness Test to see a ﬂock of Shale Crows, but not to a Ballistic Skill Test simply because the character is using his eyes. This talent may be taken more than once, each time with a different specialisation.\" },\r\n    \"Hip Shooting\": { name: \"Hip Shooting\", tier: 2, prerequisites: \"BS 40, Ag 40\", devotion: EGods.UNALIGNED, description: \"As a Full Action, the character may both move up to his Full Move rate and make a single attack with a ranged weapon. This attack can only be a single shot and may not be a semi or full automatic ranged attack. Characters with the Two-Weapon Fighting talent may use this talent with Hip Shooting to make two single shots if he is armed with a ranged weapon in either hand.\" },\r\n    \"Hotshot Pilot\": { name: \"Hotshot Pilot\", tier: 2, prerequisites: \"Ag 40, Operate (any)\", devotion: EGods.UNALIGNED, description: \"The character counts as having all Operate Skills (essentially, he can drive or ﬂy anything) at Rank 1 (Known). If he wishs to later improve his Operate Skills they must be bought using experience points (from Rank 1) as normal. Such is his skill he also adds one Degree of Success to any successful Operate Tests.\" },\r\n    \"Independent Targeting\": { name: \"Independent Targeting\", tier: 2, prerequisites: \"BS 40\", devotion: EGods.UNALIGNED, description: \"When ﬁring two weapons as part of a single action (using the Two-Weapon Fighting talent), the targets need not be less than 10 metres apart.\" },\r\n    \"Infused Knowledge\": { name: \"Infused Knowledge\", tier: 3, prerequisites: \"Int 40, Lore (any)\", devotion: EGods.TZEENTCH, description: \"The character counts as having all Common Lore and Scholastic Lore (essentially, he knows something about everything) at Rank 1 (Known). If he wishes to later improve his Lore Skills they must be bought using experience points (from Rank 1) as normal. Such is his skill that he also adds one Degree of Success to any successful Common or Scholastic Lore Tests.\" },\r\n    \"Inspire Wrath\": { name: \"Inspire Wrath\", tier: 2, prerequisites: \"Air of Authority\", devotion: EGods.SLAANESH, description: \"As a Full Action, the character can make a Charm Test to grant the effects of the Hatred Talent to any people in his immediate vicinity. Success on the test grants the Hatred Talent to the listeners (with the object of hate chosen by the character) for the duration of an encounter. Listeners can resist the effects of the characters speech (and therefore not be burdened with his chosen hatred) by passing an Opposed Willpower Test against the character’s Charm Skill Test. Inspire Wrath affects up to 10 times the character’s Fellowship, which can be increased with the use of the Demagogue Talent as normal. Both players and GMs should bear in mind, however, that once a crowd has been inspired to hatred or mindless anger the effects can be unpredictable…\" },\r\n    \"Into the Jaws of Hell\": { name: \"Into the Jaws of Hell\", tier: 3, prerequisites: \"Iron Discipline, Fel 50\", devotion: EGods.SLAANESH, description: \"His followers become immune to the effects of Fear and Pinning as long as he is physically there to lead them and they can see him leading by example. Heretics cannot beneﬁt from the Into the Jaws of Hell of another Heretic.\" },\r\n    \"Iron Jaw\": { name: \"Iron Jaw\", tier: 1, prerequisites: \"T 40\", devotion: EGods.NURGLE, description: \"If ever Stunned, a successful Toughness Test allows the character to ignore the effects.\" },\r\n    \"Iron Discipline\": { name: \"Iron Discipline\", tier: 2, prerequisites: \"Fel 30\", devotion: EGods.SLAANESH, description: \"If the character is visible to his followers, either in person or via vox- or pict-caster, they may reroll failed Willpower Tests made to resist Fear and Pinning. Heretics cannot beneﬁt from the Iron Discipline of another Heretic.\" },\r\n    \"Jaded\": { name: \"Jaded\", tier: 1, prerequisites: \"WP 40\", devotion: EGods.NURGLE, description: \"Dead bodies, xenos creatures, and other terrifying but natural occurrences do not elicit Fear Tests. Terrors of the Warp still affect the character normally.\" },\r\n    \"Killing Strike\": { name: \"Killing Strike\", tier: 2, prerequisites: \"WS 50\", devotion: EGods.KHORNE, description: \"When making an All Out Attack, the character may spend one Infamy Point to choose to make that melee attack unavoidable with the Parry or Dodge Skills. Other means of stopping attacks (such as Shadow Fields or Displacement Fields) are unaffected.\" },\r\n    \"Leap Up\": { name: \"Leap Up\", tier: 1, prerequisites: \"Ag 30\", devotion: EGods.SLAANESH, description: \"The character may stand up as a Free Action\" },\r\n    \"Legion Weapon Training\": { name: \"Legion Weapon Training\", tier: 1, prerequisites: \"Chaos Space Marine\", devotion: EGods.UNALIGNED, description: \"Chaos Space Marines are proﬁcient with all weapons of the Bolt, Chain, Melta, Plasma, Power, Flame, Primary, Las, Solid Projectile, Thrown, and Launcher categories. In essence the only weapons that a Chaos Space Marine is not proﬁcient with are Exotic Weapons; for these he must acquire individual Talents as normal.\" },\r\n    \"Lesser Minion of Chaos\": { name: \"Lesser Minion of Chaos\", tier: 1, prerequisites: \"Fel 40\", devotion: EGods.UNALIGNED, description: \"Details on creating a Lesser Minion can be found on page 135. This Talent may be taken more than once, each time adding another Lesser Minion to the character’s retinue.\" },\r\n    \"Light Sleeper\": { name: \"Light Sleeper\", tier: 1, prerequisites: \"Per 30\", devotion: EGods.TZEENTCH, description: \"The character is always assumed to be awake, even when asleep, for the purposes of Awareness Tests or surprise. Unfortunately, the character’s sleep is not deep and can be frequently interrupted, resulting in a less-than-cheery disposition when awake.\" },\r\n    \"Lightning Attack\": { name: \"Lightning Attack\", tier: 3, prerequisites: \"Swift Attack\", devotion: EGods.KHORNE, description: \"A Heretic with this Talent may make the Lightning Attack Combat Action (see page 238).\" },\r\n    \"Lightning Reflexes\": { name: \"Lightning Reflexes\", tier: 1, devotion: EGods.SLAANESH, description: \"When making an Initiative Roll the character may roll twice and add the highest of the two dice result to his Agility Bonus.\" },\r\n    \"Lumimen Shock\": { name: \"Lumimen Shock\", tier: 2, prerequisites: \"Luminen Capacitors, Mechanicus Implants\", devotion: EGods.UNALIGNED, description: \"By making a successful melee attack (without penalties for being unarmed), the Heretic may deal 1d10 plus his Willpower Bonus in Energy Damage with Pen 2 and the Shocking Quality.\" },\r\n    \"Luminen Blast\": { name: \"Luminen Blast\", tier: 3, prerequisites: \"Luminen Shock\", devotion: EGods.UNALIGNED, description: \"The energies charged in the Heretic’s Luminen Capacitors can be expelled in a ranged attack with a Ballistic Skill Test directing this energy against a single target within 10 metres inﬂicting 1d10 plus twice the character’s Willpower Bonus in Energy Damage with Pen 2 and the Shocking and Blast (X) Quality. X equals any value between 1 and the Heretic’s Intelligence Bonus, chosen by the Heretic at the time of ﬁring. The attack uses a Half Action to accomplish (counting as a Single Attack Action) and the character must pass a Toughness Test when he uses this ability or gain a level of Fatigue.\" },\r\n    \"Maglev Transcendence\": { name: \"Maglev Transcendence\", tier: 2, prerequisites: \"Maglev Coils/Mechanicus Impants\", devotion: EGods.UNALIGNED, description: \"He may hover for a number of minutes equal to 1d10 plus twice his Toughness bonus. He may move his Run speed when making a Half Move Action, and suffers no Damage from falling if the Coils are active. Each use expends half the power stored in the coils (therefore he may use the Coils twice before recharging them).\" },\r\n    \"Marksman\": { name: \"Marksman\", tier: 2, prerequisites: \"BS 35\", devotion: EGods.UNALIGNED, description: \"Distance is no protection against the character’s marksmanship and he suffers no penalties for Ballistic Skill Tests at long or extended range.\" },\r\n    \"Master Chirurgeon\": { name: \"Master Chirurgeon\", tier: 3, prerequisites: \"Medicae +10\", devotion: EGods.NURGLE, description: \"The character gains a +10 bonus on all Medicae Skill Tests. Any successful heal attempt (including Heavily and Critically wounded patients) by the character heals 2 additional Wounds. If his patient is in danger of losing a limb from a Critical Hit (see Chapter VII: Combat), the character provides the patient with a +20 bonus to the Toughness Test to prevent limb loss.\" },\r\n    \"Master Engineer\": { name: \"Master Engineer\", tier: 3, prerequisites: \"Tech Use +20, Mechanicus Implants\", devotion: EGods.UNALIGNED, description: \"The character gains a +10 bonus on Tech-Use Skill Tests. The Heretic may spend an Infamy Point to automatically succeed on a Tech-Use Skill Test for enhancement, repair, or upgrade of a machine’s system, taking the minimum amount of time possible on the task. In addition at the GM’s discretion the character may repair objects without all the parts at hand, jury-rigging a working device as good as the original.\" },\r\n    \"Mastery\": { name: \"Mastery\", tier: 3, prerequisites: \"Rank 4 in selected Skill\", devotion: EGods.UNALIGNED, description: \"The character may spend an Infamy Point to automatically pass a Skill Test with his chosen skill provided the ﬁnal modiﬁer to his Skill Test is 0 or greater. In addition to simply passing the test the character passes it by a number of Degrees of Success equal to the Characteristic Bonus of its associated Characteristic. This Talent may be taken more than once, each time for a different Skill.\" },\r\n    \"Mechadendrite Use\": { name: \"Mechadendrite Use\", tier: 2, prerequisites: \"Mechanicus Implants\", devotion: EGods.UNALIGNED, description: \"The character is trained in the use of a particular kind of Mechendrite (Weapon or Utility) See gear/cybernetics.\" },\r\n    \"Meditation\": { name: \"Meditation\", tier: 1, devotion: EGods.TZEENTCH, description: \"10 minutes without interruption results in a success on a Willpower Test and removes one level of Fatigue.\" },\r\n    \"Mighty Shot\": { name: \"Mighty Shot\", tier: 3, prerequisites: \"BS 40\", devotion: EGods.NURGLE, description: \"The character adds half his Ballistic Skill Bonus to Damage the character inﬂict with a ranged weapon.\" },\r\n    \"Mimic\": { name: \"Mimic\", tier: 1, devotion: EGods.SLAANESH, description: \"The character must study the voice patterns of his intended target for at least one hour for proper imitation, and speak the same language. The character cannot accurately copy the voice of a xenos due to the difference in physiology and the subtle complexities of most alien languages. Listeners must pass a Scrutiny Skill Test with a –10 penalty to penetrate the deception. If the character’s study relied on vox recordings, or comm-link conversations rather than in-person observation, then there is no penalty to the Scrutiny Skill Test to see through it. The character’s deception automatically fails if the listener can clearly see him.\" },\r\n    \"Minion of Chaos\": { name: \"Minion of Chaos\", tier: 2, prerequisites: \"Fel 45, Infamy 30\", devotion: EGods.UNALIGNED, description: \"Details on creating a Minion can be found on page 135. This talent may be taken more than once, each time adding another Minion to the character’s retinue.\" },\r\n    \"Nerves of Steel\": { name: \"Nerves of Steel\", tier: 2, devotion: EGods.NURGLE, description: \"The character may reroll failed Willpower Tests to avoid or recover from Pinning. In addition is seldom impressed by the aggressive displays of his enemies and gains a +10 to Willpower Tests when resisting the effects of enemy Intimidation Skill attempts.\" },\r\n    \"Never Die\": { name: \"Never Die\", tier: 3, prerequisites: \"WP 50, T 50\", devotion: EGods.NURGLE, description: \"The character can spend one Infamy Point to ignore the effects of injury, Fatigue, and Stunning for a single combat. This talent does not prevent the Damage, but allows the character to temporarily ignore its effects for the duration of the combat. Death still affects him normally.\" },\r\n    \"Orthoproxy\": { name: \"Orthoproxy\", tier: 1, devotion: EGods.UNALIGNED, description: \"The character receives a +20 bonus to Willpower Tests made to resist mind control or interrogation. He tends not to get jokes, however.\" },\r\n    \"Paranoia\": { name: \"Paranoia\", tier: 2, devotion: EGods.TZEENTCH, description: \"The character gains a +2 bonus on Initiative rolls, and the GM may secretly test using the character’s Perception to notice hidden threats. The price of this eternal vigilance is a twitchy disposition and the inability to relax.\" },\r\n    \"Peer\": { name: \"Peer\", tier: 1, prerequisites: \"Fel 30\", devotion: EGods.UNALIGNED, description: \"The character knows how to deal with a particular social group or organisation. The character gains a +10 bonus to all Fellowship Tests when interacting with this chosen group and at the GM’s discretion my call upon them for favours from time to time.  In game terms, the bonus to Fellowship Tests increases to +10 times X, with X being the number of times the Talent has been awarded.\" },\r\n    \"Pity the Weak\": { name: \"Pity the Weak\", tier: 1, prerequisites: \"S 35, WP 35\", devotion: EGods.KHORNE, description: \"The character has nothing but contempt for those less powerful than himself and gains a +10 on Command, Commerce, Deception, and Intimidation Skill Tests when opposed by someone with either a Strength or Willpower Characteristic lower than themselves. Unfortunately, the character also has trouble hiding his contempt from such people and suffers a –10 to Charm Skill Tests when dealing the same people.\" },\r\n    \"Polyglot\": { name: \"Polyglot\", tier: 1, prerequisites: \"Int 40, Fel 30\", devotion: EGods.TZEENTCH, description: \"The character can make untrained Skill Tests with the Linguistics Skill even though it is a Specialist Skill. Being a Polyglot is not the same as having a true knowledge of a language, and characters must make a Linguistics Skill Test (along with the –20 modiﬁer for being untrained) to have more than the most basic conversations or exchanges of ideas.\" },\r\n    \"Precise Blow\": { name: \"Precise Blow\", tier: 2, prerequisites: \"WS 40, Sure Strike\", devotion: EGods.SLAANESH, description: \"When making a Called Shot (see page 234) melee attack, the character reduces the penalty by 10 (so a –20 becomes a –10 instead). If combined with Sure Strike, this reduces the penalty to 0.\" },\r\n    \"Preternatural Speed\": { name: \"Preternatural Speed\", tier: 3, prerequisites: \"WS 40, Ag 40\", devotion: EGods.SLAANESH, description: \"When making a Charge Move the character doubles his normal charge movement (i.e. a character with an AB of 3 has a charge movement of 9 metres, which is then doubled to 18 metres by the Preternatural Speed Talent).\" },\r\n    \"Prosanguine\": { name: \"Prosanguine\", tier: 2, prerequisites: \"Autosanguine\", devotion: EGods.NURGLE, description: \"He must spend 10 minutes in mediation and make a Tech-Use Test. If he succeeds, he heals 1d5 points of Damage plus one additional point of Damage for every two Degrees of Success. If he rolls a 96 or higher, he loses the ability to use his Black Blood implants or the Prosanguine Talent for one week.\" },\r\n    \"Psy Rating\": { name: \"Psy Rating\", tier: 3, prerequisites: \"Psyker\", devotion: EGods.UNALIGNED, description: \"Grants +1 Psy Rating to a maximum of 10\" },\r\n    \"Psychic Power\": { name: \"Psychic Power\", tier: 1, prerequisites: \"Psyker\", devotion: EGods.SPECIAL, description: \"Either through training or natural development, the character has learned an additional Psychic Power. This power must be selected from one of the powers presented in Chapter VI: Psychic Powers. The experience cost and requirements for psychic powers are not the same as other Talents (as detailed on page 77) and can instead be found in Chapter VI: Psychic Powers. Characters must have the Psyker trait to take this talent.\" },\r\n    \"Quick Draw\": { name: \"Quick Draw\", tier: 1, devotion: EGods.UNALIGNED, description: \"The character can draw and ready a weapon as a Free Action when the character is armed with a Pistol or Basic-class ranged weapon, or a melee weapon that can be wielded in one hand.\" },\r\n    \"Radiant Presence\": { name: \"Radiant Presence\", tier: 1, prerequisites: \"Fel\", devotion: EGods.SLAANESH, description: \"Everyone within 20 metres that can see the character feels a touch of euphoria just by being near him and suffer lessened effects from things that would upset of distress them. Those affected gain a +10 to Willpower Tests to resist Fear or against Intimidation attempts. This ability affects all those close to the character indiscriminately, though not the character himself.\" },\r\n    \"Rapid Reaction\": { name: \"Rapid Reaction\", tier: 2, prerequisites: \"Ag 40\", devotion: EGods.SLAANESH, description: \"When surprised or ambushed, a successful Agility Test allows the character to act normally.\" },\r\n    \"Rapid Reload\": { name: \"Rapid Reload\", tier: 1, devotion: EGods.SLAANESH, description: \"The character halves all reload times, rounding down. Thus, Half Action reload become a Free Action, a Full Action reload becomes a Half Action and so on.\" },\r\n    \"Raptor\": { name: \"Raptor\", tier: 1, prerequisites: \"Operate (Aeronautica)\", devotion: EGods.UNALIGNED, description: \"When the character makes a Charge Action using a Jump Pack his melee attack deals an extra d10 of Damage for every two Degrees of Success he scores on his Weapon Skill Test to a maximum of two extra d10.\" },\r\n    \"Resistance\": { name: \"Resistance\", tier: 1, devotion: EGods.NURGLE, description: \"Each time the character select this talent, choose one area of resistance. The character gains a +10 bonus when making tests to resist the effects of this group. The character’s GM may wish to approve certain choices or have them justified by the character’s past.\" },\r\n    \"Sacrifice\": { name: \"Sacrifice\", tier: 2, prerequisites: \"Psy Rating\", devotion: EGods.UNALIGNED, description: \"A psyker with the Sacriﬁce Talent may ritually prepare and slay a sacriﬁcial victim (which must be a human or intelligent xenos). It takes a Forbidden Lore (Warp) Skill Test, taking 2d5 minutes to prepare and anoint a bound and helpless sacrificial victim. Once prepared, it takes a Full Round action to slay the victim. In the subsequent turn, the psyker gains a +5 bonus to his Focus Power Test for every Degree of Success scored on Forbidden Lore (Warp) Skill Test. In addition, should any Psychic Phenomena or Perils of the Warp occur, the effects are focused through the dying victim. Any effects that would normally affect the psyker instead cause the body to burn to ash in a blaze of iridescent warp-flame, dealing 1d10 Energy Damage to anyone within three metres of the victim (gaining the Warp Weapon trait and increasing the area to a ﬁve-metre radius if it was caused by Perils of the Warp).\" },\r\n    \"Sharpshooter\": { name: \"Sharpshooter\", tier: 2, prerequisites: \"BS 40, Deadaye Shot\", devotion: EGods.UNALIGNED, description: \"When making a Called Shot (see page 234), the character reduces the penalty by 10 (so a –20 becomes a –10 instead). If combined with Deadeye shot, this reduces the penalty to 0.\" },\r\n    \"Sidearm\": { name: \"Sidearm\", tier: 3, prerequisites: \"WS 40, BS 40, Two-Weapon Wielder (Ballistic, Melee)\", devotion: EGods.UNALIGNED, description: \"When armed with a pistol and melee weapon in either hand (which the character could normally use single-handedly), the character reduces the penalty for Two-Weapon Fighting by 10 (so –20 would drop to –10). If taken with the Ambidextrous Talent, this drops the penalty to +0.\" },\r\n    \"Sound Constitution\": { name: \"Sound Constitution\", tier: 1, devotion: EGods.NURGLE, description: \"The character gains an additional Wound.  The character may purchase this Talent multiple times up to his Toughness Bonus.\" },\r\n    \"Sprint\": { name: \"Sprint\", tier: 3, devotion: EGods.SLAANESH, description: \"When taking a Full Move Action, the character can move an extra number of metres equal to his Agility Bonus. When taking the run action, the character may double his movement for one round. The character gains one level of Fatigue if he uses this Talent two turns in a row.\" },\r\n    \"Step Aside\": { name: \"Step Aside\", tier: 3, prerequisites: \"Ag 40, Dodge, Parry\", devotion: EGods.UNALIGNED, description: \"The character may make an additional Evasion attempt (either a dodge or a parry) once per round. In effect, this gives the character a second Reaction that may only be used for Dodge or Parry attempts, allowing two dodges, two parries or a dodge and a parry in a turn. However, the character may still only attempt a single dodge or parry against each individual attack.\" },\r\n    \"Storm of Iron\": { name: \"Storm of Iron\", tier: 2, prerequisites: \"BS 45, Weapon Training (any ranged)\", devotion: EGods.KHORNE, description: \"When the Heretic deals Damage to a Horde with a semi-auto burst, a full-auto burst, or a weapon with the Spray or Blast Qualities, the Heretic deals additional Damage to the Horde equal to half his Ballistic Skill Bonus. This additional Damage is applied once per attack, not once per hit.\" },\r\n    \"Street Fighting\": { name: \"Street Fighting\", tier: 1, prerequisites: \"WS 30\", devotion: EGods.KHORNE, description: \"When armed with a knife (powered, chain or otherwise), similar small weapon, or simply armed with his bare hands, he adds his Weapon Skill Bonus to any Critical Damage he inflicts.\" },\r\n    \"Strong Minded\": { name: \"Strong Minded\", tier: 2, prerequisites: \"WP 30, Resistance (Psychic Techniques)\", devotion: EGods.TZEENTCH, description: \"He may reroll failed Willpower Tests to resist any Psychic Powers that affect his mind. Psychic Powers that have a physical effect, such as Doombolt, are unaffected by this Talent.\" },\r\n    \"Sure Strike\": { name: \"Sure Strike\", tier: 1, prerequisites: \"WS 30\", devotion: EGods.SLAANESH, description: \"When making a Called Shot (see page 234) melee attack, the character reduces the penalty by 10 (so a – 20 becomes a –10 instead).\" },\r\n    \"Swift Attack\": { name: \"Swift Attack\", tier: 2, prerequisites: \"WS 30\", devotion: EGods.KHORNE, description: \"When a character makes a melee attack, he scores one hit on the initial Degree of Success on his Weapon Skill Test, plus one additional hit for every two additional Degrees of Success. Additional hits are counted as separate hits for all intents and purposes, roll their Damage separately and are reduced by Armour and Toughness as normal. Additional hits are made against the same body location as the original hit. When using Dodge or Parry against a Swift Attack then each Degree of Success scored with a Dodge or Parry Skill Test negates one hit from the Swift Attack. If a character is fi ghting with a weapon in either hand or benefits from a Talent or Power which allows him to make more than one attack in his turn only one of his attacks may be a Lightning Attack and have the chance of scoring additional hits. Melee weapons with the Unwieldy Special Quality cannot be used to make Lightning Attacks\" },\r\n    \"Takedown\": { name: \"Takedown\", tier: 1, devotion: EGods.UNALIGNED, description: \"As a Half Action or when making a Charge Attack the character may declare that he is attempting a takedown against an opponent in melee combat. He then roll to hit (using his Weapon Skill) as normal; using any modiﬁers for weapons and talents (or the +20 bonus from Charging). If the character hits and would have done at least one point of Damage (after reduction for Armour and Toughness) it is ignored, but the character’s opponent must make a Challenging (+0) Toughness Test or be stunned for 1 round and knocked prone. In addition, when performing a Stun Action, the character does not suffer a –20 penalty to his Weapon Skill.\" },\r\n    \"Target Selection\": { name: \"Target Selection\", tier: 3, prerequisites: \"BS 30\", devotion: EGods.UNALIGNED, description: \"The character may shoot into melee with no penalty. If he aims beforehand, he can avoid any chance of hitting friendly targets.\" },\r\n    \"Technical Knock\": { name: \"Technical Knock\", tier: 1, prerequisites: \"Int 30\", devotion: EGods.UNALIGNED, description: \"The character may un-jam any gun as a Half Action, but may only use this talent on one weapon per round. The character must touch the weapon (often quickly and violently) to make this talent work.\" },\r\n    \"Thunder Charge\": { name: \"Thunder Charge\", tier: 3, prerequisites: \"S 50\", devotion: EGods.KHORNE, description: \"When the character makes a Charge Action he can barrel through foes to get to his target. Make an Opposed Strength Test between the character and each foe in his way (i.e., each foe his charge would take him past or through). Those that fail are knocked to the ground. Once the character has tested to knock down those in his way, he may complete his Charge and make his attacks against his intended target.\" },\r\n    \"Total Recall\": { name: \"Total Recall\", tier: 1, prerequisites: \"Int 30\", devotion: EGods.TZEENTCH, description: \"The character can automatically remember trivial facts or pieces of information the character might feasibly have picked up in the past. When dealing with more detailed, complex or obscure facts, such as the exact layout of a defence network, the GM may require a successful Intelligence Test to recall the information.\" },\r\n    \"True Grit\": { name: \"True Grit\", tier: 3, prerequisites: \"T 40\", devotion: EGods.NURGLE, description: \"Whenever the character suffers Critical Damage (after reduction for Armour and Toughness) reduce the amount by his Toughness Bonus (to a minimum of 1).\" },\r\n    \"Two-Weapon Wielder\": { name: \"Two-Weapon Wielder\", tier: 2, devotion: EGods.UNALIGNED, description: \"Allows the character to use a weapon in each hand. This allow the character to attack twice in a round, once from each weapon. Both tests suffer a -20 penalty. Taken once for melee or range weapons. If both types are acquired he may fight with ine melee and one ranged weapon. \" },\r\n    \"Unarmed Master\": { name: \"Unarmed Master\", tier: 2, prerequisites: \"WS 45, Ag 40, Unarmed Warrior\", devotion: EGods.KHORNE, description: \"He counts as having the Deadly Natural Weapon Trait.\" },\r\n    \"Unarmed Warrior\": { name: \"Unarmed Warrior\", tier: 1, prerequisites: \"WS 35, Ag 35\", devotion: EGods.KHORNE, description: \"Due to extensive training in techniques of unarmed combat the character has gained the Natural Weapon Trait (see page 142) improving all his unarmed attacks from 1d5-3 to 1d10 Primitive (7) and meaning he counts as armed even when facing opponents with weapons while bare handed.\" },\r\n    \"Unholy Devotion\": { name: \"Unholy Devotion\", tier: 3, prerequisites: \"Minion of Chaos\", devotion: EGods.UNALIGNED, description: \"The character’s Minions are fanatically devoted to him and would gladly die in his name. Whenever the character would be hit by a ranged attack he can make an Agility Test for any of his Minions which are no further away from him than his Agility Bonus in metres. If he passes the test then they suffer the hit instead as they have thrown themselves in front of their master, and all the hits effects are worked out against the Minion.\" },\r\n    \"Unremarkable\": { name: \"Unremarkable\", tier: 1, devotion: EGods.SLAANESH, description: \"Any attempts to recall the character’s face or spot him in a crowd suffer a –20 penalty. In addition the character gains a +20 when using the Deceive Skill to either convince someone he has never seen or met him before or if he is trying to appear harmless and ordinary. Naturally this Talent doesn’t work if the character wears distinctive clothes or armour, or carries unique weaponry—a Chaos Space Marine hiding in a crowd of Imperial citizens is pretty easy to spot, especially since they are probably running screaming in all directions…\" },\r\n    \"Unshakable Will\": { name: \"Unshakable Will\", tier: 2, prerequisites: \"WP 35\", devotion: EGods.NURGLE, description: \"The character may reroll any failed Willpower Tests to avoid the effects of Fear.\" },\r\n    \"War Cry\": { name: \"War Cry\", tier: 3, prerequisites: \"S 50, WP 50, Disturbing Voice\", devotion: EGods.NURGLE, description: \"The character may declare at the start of any of his turns that he is making a war cry as a Free Action. All creatures within a 50-metre radius treat the character as if he had a Fear Rating of 1 provided they can hear him (though they do not need to be able to see him) until the start of his next turn. While screaming his bloodcurdling war cry, the character may not communicate in any other way. Making a war cry is taxing however and at the end of any encounter in which it is used (even if only for a single turn) the character suffers a level of Fatigue.\" },\r\n    \"Warp Conduit\": { name: \"Warp Conduit\", tier: 2, prerequisites: \"Psy Rating, Strong Minded, WP 50\", devotion: EGods.TZEENTCH, description: \"When Pushing (see page 207), the character may spend one Infamy Point to add 1d5 to his Psy Rating. Channelling such vast amounts of power is dangerous, however, and he must add +30 to any resultant Psychic Phenomenon rolls.\" },\r\n    \"Warp Lock\": { name: \"Warp Lock\", tier: 3, prerequisites: \"Psy Rating, Strong Minded, WP 50\", devotion: EGods.TZEENTCH, description: \"Once per game session the character may ignore a Psychic Phenomenon result he has rolled (including a result which would indicate rolling on the Perils of the Warp Table) completely negating its effects. Such rapid dislocation from the warp is stressful and traumatic to the character’s mind, however, and he suffers 1d5 Damage (not reduced by armour or Toughness) as a result, and may not make any Focus Power Tests or sustain other Psychic Powers until the beginning of his next Turn.\" },\r\n    \"Warp Sense\": { name: \"Warp Sense\", tier: 1, prerequisites: \"Psy Rating, Psyniscience, Per 30\", devotion: EGods.TZEENTCH, description: \"After gaining this talent, using the Psyniscience Skill requires a Free Action instead of a Half Action. In addition, the character can passively detect psychic effects and entities without the need to actively seek them out. Whenever the character could detect such warp signature or creature the GM may allow him to make a Psyniscience Skill Test to detect it, in the same way he might use Awareness to spot an ambush without knowing it is there.\" },\r\n    \"Weapon Training\": { name: \"Weapon Training\", tier: 1, devotion: EGods.UNALIGNED, description: \"The character can use all weapons with Class: Pistol, Basic, Heavy, Throwing, and Melee within the group he has selected with this talent. When a character attempts to use a weapon he does not have the correct Weapon Training Talent for, he suffers a –20 penalty to any relevant Weapon Skill or Ballistic Skill Test. This talent may be taken more than once, each time with a different specialisation.\" },\r\n    \"Weapon Tech\": { name: \"Weapon Tech\", tier: 1, prerequisites: \"Tech Use +10, Int 40\", devotion: EGods.UNALIGNED, description: \"Once per combat, the character can enhance his weapon increasing it ﬁrepower and deadliness. For one Round per combat Encounter, a weapon personally wielded by the character from the Melta, Plasma, Power, or Exotic category increases its Damage and Penetration by an amount equal to his Intelligence Bonus.\" },\r\n    \"Whirlwind of Death\": { name: \"Whirlwind of Death\", tier: 2, prerequisites: \"WS 40\", devotion: EGods.UNALIGNED, description: \"When attacking a Horde, the character deals additional Magnitude damage equal to half his Weapon Skill Bonus.\" },\r\n    \"Wisdom of the Ancients\": { name: \"Wisdom of the Ancients\", tier: 2, prerequisites: \"Int 40\", devotion: EGods.TZEENTCH, description: \"The character may spend an Infamy Point to get insight on a situation and ask the GM a question (which he should answer as helpfully as possible) about the immediate situation which his character faces. The question can be anything the character might legitimately know from stories he has heard or his own experience. For example, when raiding an Imperial cruiser the question might be “where are the Navigator’s quarters.”\" },\r\n\r\n    // TRAITS\r\n    \"Amphibious\": {name: \"Amphibious\", tier: 0, devotion: EGods.UNALIGNED, description: \"The creature can breathe water as well as air and can stay underwater indefi nitely without the need to surface. If this trait is taken by a creature with the ability to breathe a substance other than air (i.e. water, ammonia, carbon-dioxide etc) then it can breathe air as well as its native atmosphere.\"},\r\n    \"Amorphous\": {name: \"Amorphous\", tier: 0, devotion: EGods.UNALIGNED, description: \"An amorphous creature which has a malleable form, capable of squeezing its body or expanding it. It can change size by one-step in either direction, though doing so does not change its speed. Creatures with this trait determine their movement rates using one-half their Agility Bonus rounded up. Amorphous creatures are often missing senses and so rely on the Unnatural Senses Trait to perceive their surroundings.\"},\r\n    \"Auto-Stabilised\": {name: \"Auto-Stabilised\", devotion: EGods.UNALIGNED, tier: 0, description: \"The creature always counts as braced when firing heavy weapons and therefore may fire a ranged weapon on full or semi-automatic without taking the Brace action first without suffering any penalties to hit.\"},\r\n    \"Bestial\": {name: \"Bestial\", tier: 0, devotion: EGods.UNALIGNED, description: \"A creature with this trait is animalistic, tending to behave instinctively rather than rationally. No matter how high its Intelligence score is, it is still bestial. A creature with this trait never needs to make a Survival Skill Test whilst in its natural habitat. Unless starving or desperate, a bestial creature must make a Willpower Test when frightened, startled or injured. On a failed test, the creature flees.\"},\r\n    \"Blind\": {name: \"Blind\", tier: 0, devotion: EGods.UNALIGNED, description: \"Blind creatures automatically fail all tests based on vision and automatically fail all Ballistic Skill Tests. Such creatures take a –30 penalty to Weapon Skill Tests and most other tests that ordinarily involve or are benefited by vision. Note that this Trait indicates not only that the creature cannot see but that it also has no other senses which would provide the same benefit as eyes. The Blind Fighting Talent reduces the penalties to Weapon Skill Tests as normal for Blind creatures, reducing it from –30 to –15.\"},\r\n    \"Brutal Charge\": {name: \"Brutal Charge\", devotion: EGods.UNALIGNED, tier: 0, description: \"A creature with this trait deals an extra (X) points of damage per attack when it charges in the same round.\"},\r\n    \"Burrower\": {name: \"Burrower\", tier: 0, devotion: EGods.UNALIGNED, description: \"A creature with this trait can move through solid objects by burrowing through them. The number in parenthesis (X) indicates its speed when burrowing. Such creatures can burrow through soil, rock, sand, and so on, though some (expressed in the creature entry) can burrow through metal. When a creature burrows, it leaves behind a tunnel. Creatures of one-size smaller than the creature that created the tunnel can enter these areas without impediment. There’s a 50% chance each round that the tunnel collapses behind the creature.\"},\r\n    \"Crawler\": {name: \"Crawler\", tier: 0, devotion: EGods.UNALIGNED, description: \"Worms, serpents, and similar creatures crawl and slither rather than walk. The base move for a creature with this trait is half their normal movement rate (round up) as determined by their Agility Bonus, but they do not take penalties for moving over difficult terrain.\"},\r\n    \"Daemonic\": {name: \"Daemonic\", tier: 0, devotion: EGods.UNALIGNED, description: \"Daemonic creatures are creatures of the warp, but can manifest in real space either through sheer strength of will, hunger, or occult rituals. Creatures with this trait increase their Toughness Bonus against all Damage by the number indicated in the parenthesis (X) in the same manner as an Unnatural Characteristic (see Unnatural Characteristics trait on page 144). The effects of this trait stack with the effects of the Unnatural Characteristic trait. This increase is negated by Damage inflicted by force weapons, psychic powers, holy attacks, or other creatures with this trait. Daemonic creatures are also immune to poison and disease. Creatures with the Daemonic trait also gain benefits when using Psychic Powers as detailed in Chapter VI: The Powers of the Warp.\"},\r\n    \"Dark-Sight\": {name: \"Dark-Sight\", tier: 0, devotion: EGods.UNALIGNED, description: \"A creature with this trait sees normally even in areas of total darkness, and never takes a penalty for fighting in areas of dim or no lighting.\"},\r\n    \"Fear\": {name: \"Fear\", tier: 0, devotion: EGods.UNALIGNED, description: \"A creature with this trait has an unnerving appearance. The fear of it always has an associated rating (1–4) to reflect just how awful the creature is to behold and is indicated by the number in parenthesis (X). The higher the Fear Rating the harder it is for others to resist going encounter, as shown on Table 4-7: Fear Ratings. When a character encounters a creature with this Trait, they must make a Willpower Test, modified by the severity of the creature’s trait. On a success, the character may act as normal. On a failure, the character must roll on Table 8-4: Shock (see page 277), adding +10 to the roll for every Degree of Failure by which the Willpower Test was failed.\"},\r\n    \"Flyer\": {name: \"Flyer\", tier: 0, devotion: EGods.UNALIGNED, description: \"A creature with this trait has the natural ability to fly, whether with broad leathery wings, strange Warp energies, or inflatable gas sacs. The number in parenthesis (X) indicates its speed when flying. This number replaces the creature’s Agility Bonus for movement Actions. For more details on flying, see Chapter I: Playing the Game.\"},\r\n    \"From Beyond\": {name: \"From Beyond\", devotion: EGods.UNALIGNED, tier: 0, description: \"The mind of a creature with this trait is beyond the petty frailties and precarious sanity of a mortal mind. It is immune to Fear, Pinning, Insanity Points, and psychic powers used to cloud, control, or delude its minds.\"},\r\n    \"Deadly Natural Weapons\": {name: \"Deadly Natural Weapons\", tier: 0, devotion: EGods.UNALIGNED, description: \"This creature’s natural attacks are powerful enough to crush plasteel or punch through armour. The creature gains all the benefits of the Natural Weapons Trait, except that its attacks no longer have the Primitive Special Quality.\"},\r\n    \"Hoverer\": {name: \"Hoverer\", tier: 0, devotion: EGods.UNALIGNED, description: \"Creatures with this trait have a limited capability for flight, flying no higher than two metres. The number in parenthesis (X) indicates its speed when hovering. This number replaces its Agility Bonus for purposes of calculating Movement. For more details on flying, see Chapter I: Playing the Game.\"},\r\n    \"Incorporeal\": {name: \"Incorporeal\", tier: 0, devotion: EGods.UNALIGNED, description: \"Incorporeal creatures are insubstantial and weightless, able to pass through solid objects such as walls and weapons. An incorporeal creature gains a +30 bonus on Stealth Tests due to their ability to merge with objects and the fact they make practically no sounds when they move. Incorporeal creatures gain the Hoverer (6) trait. An incorporeal creature is also immune to normal weapons—they simply pass through its body as if it wasn’t there. Daemons, psychic powers, warp creatures, other incorporeal creatures, and opponents armed with force weapons may all injure an incorporeal creature normally. An incorporeal creature can’t normally affect the mortal world, and thus can’t Damage non-incorporeal opponents unless it has a suitable special ability or Talent. Creatures with the Incorporeal trait can Damage other creatures with the Incorporeal trait normally. Certain devices can keep an incorporeal creature at bay, most notably the Gellar Field of a spaceship. Creatures with this trait cannot pass through such a field.\"},\r\n    \"Machine\": {name: \"Machine\", tier: 0, devotion: EGods.UNALIGNED, description: \"A creature with the Machine trait is fashioned from inorganic materials and is generally more rigorous then fleshy folks. Machines do not breathe, are immune to the effects of a vacuum, extremes of cold, any mind-influencing psychic effect, and their Armour Points apply toward fire Damage. Machines have a certain number of Armour Points (indicated by the number in parentheses). This armour stacks with worn armour, but not with the Natural Armour Trait.\"},\r\n    \"Multiple Arms\": {name: \"Multiple Arms\", tier: 0, devotion: EGods.UNALIGNED, description: \"This creature has more than one pair of arms. The exact number of arms is indicated in parenthesis (X), so a Genestealer with Multiple Arms (4) has four arms total. It gains a +10 bonus on Athletics Tests involving climbing and swimming. In addition, for each pair of arms it has—the Multiple Arms value divided by 2—it may make an additional attack as if wielding multiple melee weapons (the creature must either have natural weapons or actual melee weapons to wield for this to take effect). Note, that a creature still requires Two Weapon Wielder (Melee) to make multiple attacks in the same turn.\"},\r\n    \"Natural Armor\": {name: \"Natural Armor\", tier: 0, devotion: EGods.UNALIGNED, description: \"This creature has a naturally tough hide or an exoskeleton, affording it some protection against attacks. The number in parenthesis (X) indicates how many Armour Points the creature gains to all locations. This trait does not stack with armour. This armour stacks with worn armour, but not with the Machine Trait.\"},\r\n    \"Natural Weapons\": {name: \"Natural Weapons\", tier: 0, devotion: EGods.UNALIGNED, description: \"This creature has sharp claws, teeth, spines or some other natural weapon with which it can slice and dice its foes. It counts as being armed even when not wielding weapons. Its attacks deal 1d10 points of Damage plus its Strength Bonus. The creature may make attacks with its Natural Weapons using its Weapon Skill, though it cannot parry with its natural weapons, nor can it be disarmed—unless, of course its limbs are hacked off ! (In general, creatures with Natural Weapons are immune to the Power Field quality, as it’s assumed they have enough teeth, claws, or spines to ignore a few being removed.) Natural weapons have the Primitive (7) Special Quality, unless stated otherwise in the profile.\"},\r\n    \"Phase\": {name: \"Phase\", tier: 0, devotion: EGods.UNALIGNED, description: \"A creature with this trait can transform its body into an insubstantial state, passing ghost-like through solid objects or barriers of any sort. This trait functions exactly like the Incorporeal trait, except the creature may become solid or insubstantial by spending a Half Action. Phase carries additional limitations. A creature in a phased state cannot cross psychically charged barriers, holy wards, or energy fields designed to flux space or manipulate the warp, such as a Gellar Field or a Void Shield.\"},\r\n    \"Psyker\": {name: \"Psyker\", tier: 0, devotion: EGods.UNALIGNED, description: \"Whether due to unnatural influences, the study of forbidden lore, or simply sheer force of will, this individual is a Psyker, and can bend the Immaterium to his will. Though this Trait has no benefits on its own, it allows characters to purchase the Psyniscience Skill and the Psy Rating and Psychic Power Talents.\"},\r\n    \"Possession\": {name: \"Possession\", tier: 0, devotion: EGods.UNALIGNED, description: \"Certain spirit-beings and denizens of the warp have the ability to possess mortal bodies. This is a far more insidious and damaging process than most forms of mental control, or even the power of the strongest psykers to “wear” the bodies of others, as the very fabric of the assaulting warp being is merged with the victim’s living body on a fundamental level so as to allow it to remain in our reality. The mechanisms by which these possessions occur in the game are detailed below, although circumstance and the nature of the entity itself may vary. Note that Daemonhosts, being extraordinary powerful examples of deliberate, ritualistic possessions, designed to bind and control daemons in living vessels, are a special case and dealt with separately.\"},\r\n    \"Quadruped\": {name: \"Quadruped\", tier: 0, devotion: EGods.UNALIGNED, description: \"Quadrupeds are much quicker over a distance than their bipedal counterparts. There movement is double that normally indicated by their Agility Bonus (see page 39). This trait is intended to cover creatures with hind legs and forepaws. Creatures with more than four legs may gain this Trait as well increasing their movement as indicated above but adding an addition 2 to their final movement rate (after doubling) for each set of legs beyond the first two (i.e. +2 for 6 legs, +4 for 8 legs etc).\"},\r\n    \"Regeneration\": {name: \"Regeneration\", tier: 0, devotion: EGods.UNALIGNED, description: \"Creatures with this trait heal very quickly. Each round, at the start of its turn, the creature makes a Toughness Test to removes an amount of Damage indicated in the parenthesis after the trait. It loses this trait when slain.\"},\r\n    \"Size\": {name: \"Size\", tier: 0, devotion: EGods.UNALIGNED, description: \"Creatures come in one of ten different size categories, as shown on Table 4-8: Size. Size affects movement, how well the creature can hide and move undetected and how easy or hard it is to strike in combat. When calculating movement, apply the size modifier first, and then other modifiers from other Traits or Talents (such as Quadruped). For the purposes of comparison, a human is a Size (4) creature. Note, a creature’s movement cannot be reduced to less than 1.\"},\r\n    \"Sonar Sense\": {name: \"Sonar Sense\", tier: 0, devotion: EGods.UNALIGNED, description: \"A creature with this trait perceives its surroundings by emitting a frequency noise, allowing the creature to locate the position of any solid object within 30 metres. Other creatures within this 30 metre range, and that succeed on an Awareness Skill Test at -10, may detect the curious keening.\"},\r\n    \"Soul Bound\": {name: \"Soul Bound\", tier: 0, devotion: EGods.UNALIGNED, description: \"The soul of this creature is bound to a higher power or being, in return for a measure of protection. When this Trait is fi rst gained, the entity to which the soul is bound must be decided. Many Imperial psykers, especially Astropaths, are soul-bound to the Emperor, for example, whereas Chaos Sorcerers may be bound to one of the Ruinous Powers. A soul-bound psyker rolls an additional die when forced to roll on the Perils of the Warp table, discarding whichever one he chooses to get a more favourable result. (Essentially, he may replace either the ones die or the tens die with the extra die he rolls) Upon becoming soul-bound, a character must choose one of the following effects: 1d10 Insanity Points (this does not apply to Heretics, as they do not suffer Insanity), the permanent loss of their sight, permanent loss of 1d10 from one Characteristic, or a random mutation. In addition, a soul-bound character is permanently indebted to the entity, which undoubtedly entails all manner of other duties and consequences.\"},\r\n    \"Stampede\": {name: \"Stampede\", tier: 0, devotion: EGods.UNALIGNED, description: \"Whenever a creature with this trait fails a Willpower Test, it automatically stampedes, charging in a straight line forwards as far as possible, overrunning anything in its path until the source of danger has escaped or is crushed under hoof, taking Damage equal to the creature’s Natural Weapon Damage (or 1d5+SB I if it doesn’t have one). One stampeding creature automatically causes all other creatures within sight to stampede. The stampede lasts until the source of danger is no longer visible or for 1d10 minutes, whichever occurs last.\"},\r\n    \"Strange Physiology\": {name: \"Strange Physiology\", tier: 0, devotion: EGods.UNALIGNED, description: \"A creature with this Trait has an unusual, alien, or altogether bizarre anatomy. All hits count as Body hits and death results when damage equals or exceeds the creature’s Wounds.\"},\r\n    \"Sturdy\": {name: \"Sturdy\", tier: 0, devotion: EGods.UNALIGNED, description: \"Sturdy creatures are hard to move and thus gain a +20 bonus to tests made to resist grappling and uses of the Takedown Talent.\"},\r\n    \"Swarm\": {name: \"Swarm\", tier: 0, devotion: EGods.UNALIGNED, description: \"Too small to do much on their own, swarms overwhelm their opponents via sheer weight of numbers. A swarm is often a mass of Miniscule or Puny creatures. Any attack from a weapon that does not either have the Blast, Flame, Spray, or Scatter Qualities only inflicts half Damage. In most circumstances, a swarm creature cannot be Grappled, Knocked Down, or Pinned, and the swarm may “pour” through suitable small openings such as ducts, vents, and the like, but they may not Jump. The swarm is counted as being destroyed once all its Wounds are lost. The swarm’s attacks have a variable Penetration value (roll each time an attack lands), representing its ability to engulf their victims and attack vulnerable areas.\"},\r\n    \"The Stuff of Nightmares\": {name: \"The Stuff Of Nightmares\", tier: 0, devotion: EGods.UNALIGNED, description: \"Some warp entities are so terribly powerful the will perpetuating their bodies in our reality is almost impossible to break or disrupt. Such entities are completely immune to the effects of poisons, diseases, the need to breathe, most environmental hazards, bleeding, stunning. They also ignore any critical result other than one that would destroy them outright, unless it was caused by a psychic power, force weapon, or holy attack.\"},\r\n    \"Touched by the Fates\": {name: \"Touched by the Fates\", tier: 0, devotion: EGods.UNALIGNED, description: \"The creature or NPC has a number of Fate Points shown in parenthesis (X). It may use these Fate Points in exactly the same way as Player Characters and may even ‘burn’ a Fate Point to survive death and destruction at the GM’s discretion. The rules for Zealous Hatred also apply to this creature or NPC.\"},\r\n    \"Toxic\": {name: \"Toxic\", tier: 0, devotion: EGods.UNALIGNED, description: \"A creature with this trait is poisonous Some weapons rely on toxins and poisons to do their damage. Anyone that successfully deals damage to a Toxic creature must make a Toughness Test with a penalty equal to 10 times the number in parenthesis (X) or suffer 1d10 points of Damage (of the same type as the weapon which inflicted the hit) not reduced by armour or Toughness. For example a creature with Toxic (4) would impose a –40 on Toughness Tests. Some creatures may carry additional effects with their toxins or inflict more Damage as indicated in their individual descriptions.\"},\r\n    \"Undying\": {name: \"Undying\", tier: 0, devotion: EGods.UNALIGNED, description: \"This creature has a strange and ill understood physiology. It cannot be harmed by diseases, poisons, or toxic effects. It has no need to breathe and can survive unaided in a vacuum.\"},\r\n    \"Unnatural Characteristic\": {name: \"Unnatural Characteristic\", tier: 0, devotion: EGods.UNALIGNED, description: \"One or more of the creature’s Characteristics is unnatural. This is indicated by a number which is then added directly to the creature’s Characteristic Bonus. For example, a creature with a Strength of 41 normally has a 4 Strength Bonus. If the creature had Unnatural Characteristic Strength (3) then its Strength Bonus increases to 7 (4+3). A creature may have this Trait more than once. Each time, it is applied to a new Characteristic. In addition, whenever someone with an Unnatural Characteristic succeeds on a Test utilizing that Characteristic, they gain a number of bonus Degrees of Success equal to half of their Unnatural Characteristic.\"},\r\n    \"Unnatural Senses\": {name: \"Unnatural Senses\", tier: 0, devotion: EGods.UNALIGNED, description: \"The creature can perceive its surroundings using senses other than sight or hearing, using special organs, fine hairs, or some other disturbing trait to make itself aware of what’s around it. This trait always includes a range in metres indicated by the number in parenthesis (X)\"},\r\n    \"Warp Instability\": {name: \"Warp Instability\", tier: 0, devotion: EGods.UNALIGNED, description: \"Most warp-entities have a tenuous hold on our reality, often maintained only by horror and bloodshed, and may be disrupted if sufficient harm can be done to their manifested forms. If a creature with this trait takes Damage and does not deal Damage or Insanity Points on other creatures by the end of its next turn, it must make a Willpower Test. The creature takes 1d5 Damage for failure, plus 1 Damage for each Degree of Failure. This Damage cannot be prevented by any means including armour and Toughness. If this would deal Damage equal to or in excess of the creature’s Wounds, it is cast back into the warp.\"},\r\n    \"Warp Weapons\": {name: \"Warp Weapons\", tier: 0, devotion: EGods.UNALIGNED, description: \"Creatures with this trait have weapons that are partially insubstantial, able to ignore such mundane things as armour or cover. Natural weapons and attacks made by a creature with this trait ignore physical armour unless it is created from psychoactive materials or is somehow warded against the warp. Force fields still work against these attacks normally\"},\r\n\r\n    // GIFT OF THE GODS\r\n    \"Addiction\": {name: \"Addiction\", tier: -1, devotion: EGods.SPECIAL, description: \"Exposure to the raw stuff of Chaos twists and alters the character’s\\nbrain chemistry to such an extent that he develops an all-consuming\\naddiction to one particular substance. The object of the addiction\\ncan be almost anything, from the last thing he ate to something he\\nhas never even heard of, so fi ckle are the effects of the warp.\\nThe GM should choose a substance for the character to\\nbe addicted to (the more bizarre the better!). During any\\nEncounter in which the character does not feed his addiction\\nhe suffers –10 to all Skill Tests until he does so. With the GM’s\\nconsent, the addiction can be slaked before the Encounter\\nbegins, but this should not be abused.\"},\r\n    \"Additional Limb\": {name: \"Additional Limb\", tier: -1, devotion: EGods.SPECIAL, description: \"The growth of additional limbs is common amongst those\\nwho seek to wield the power of Chaos as a weapon, and such\\na gift allows the character to fi ght more effectively and carry\\nmore weapons. Some notable renegades receive the gift several\\ntimes over, taking on the appearance of some multi-armed or\\nmany-legged spider god able to wield a small arsenal of guns\\nor use their limbs to climb otherwise unscaleable heights.\\nThe character gains the Multiple Arms Trait, with a value equal\\nto the number of limbs he started out with, plus one for each time\\nthis gift is applied. He may choose what type it is and whether\\nit has a hand, claw, or other appendage attached. Roll on Table\\n9-2: Limb Table to determine where the limb is located.\\nKhorne: The limb is bristling with bony spikes. Any unarmed\\nattacks made using the limb have the Tearing Quality.\\nSlaanesh: The limb is unnaturally lithe and dextrous. Any\\nunarmed attacks made using the limb are carried out at +10\\nto the character’s Weapon Skill.\\nNurgle: The limb oozes necrotic slime and terminates in\\na drooling orifi ce. Any unarmed attacks made with the limb\\nhas the Toxic (1) Quality.\\nTzeentch: The limb writhes and darts in an unpredictable\\nmanner, granting the character the Disarm Talent, which he\\nmay use as a Free Action so long as he is making an unarmed\\nattack using the limb.\"},\r\n    \"Animal Hybrid\": {name: \"Animal Hybrid\", tier: -1, devotion: EGods.SPECIAL, description: \"The character’s body is fused with that of a beast, creating a\\nbizarre hybrid combining the most lethal qualities of both. Far\\nmore than a cosmetic mutation, the character’s very essence takes\\non something of that of the animal it merges with, altering his\\nthought patterns to something other than a human’s. However,\\nhis abilities to think and reason are largely unaffected, unlike\\nthose unfortunates who suffer the Bestial Gift.\\nUnless the character is dedicated to a Chaos Power, roll\\non Table 9-4 to determine what type of animal the character\\nfuses with. The character should be played in such a manner\\nas to play up the characteristics of the creature, and the GM\\nshould award additional Experience Points to reflect this.\\nKhorne: The character takes on the characteristics of a\\nferal bull, his face elongating to accommodate great horns\\nand his skin growing a leathery texture.\\nSlaanesh: The character’s features become disturbingly\\nsnakelike, his tongue becomes long and sinuous, and his skin\\nbecomes smooth and hard.\\nNurgle: The character’s features begin to resemble those\\nof a slug, his mouth becomes lamprey-like, and his skin\\noozes foul slime.\\nTzeentch: The character’s body becomes bird-like, his\\nlegs becoming back-jointed while his jaw and nose fuse and\\nstretch to become a sharp beak.\"},\r\n    \"Bestial God\": {name: \"Bestial God\", tier: -1, devotion: EGods.SPECIAL, description: \"While the character does not completely mutate into a beast,\\nhe adopts the physical appearances and mannerisms of a\\ncertain type of animal. Unfortunately, while he is still capable\\nof intelligent thought, his bestial mannerisms make it more\\ndifficult.\\nPermanently reduce the character’s Intelligence by\\n1d10+5 and his Willpower by 1d10+5. However, increase\\nhis Strength by 1d5+1. Additionally, roll on Table 9-4 to\\ndetermine exactly what animal’s traits the character’s adopted,\\nas the character will undergo cosmetic changes (scales, fur, or\\na forked tongue) from the mutation as well\"},\r\n    \"Blood Substitution\": {name: \"Blood Substitution\", tier: -1, devotion: EGods.SPECIAL, description: \"Something other than blood pumps through the character’s veins,\\nthough the exact substance is dependent upon his own character\\nor that of his patron. Ordinarily, the exact nature of the blood\\nsubstitution has little relevance and may even be unknown to\\nthe character until he is wounded. When that happens, the warptinged fluid spews forth, forming a weapon in its own right.\\nShould the character ever be wounded and suffer Damage that\\nleads to Blood Loss (see page 257), one randomly determined\\ncharacter within 1 metre immediately takes 1d10 Impact Damage\\nunless he can pass a Difficult (–10) Agility Test.\\nKhorne: Lava courses through the character’s veins. The\\nDamage described above has the Flame Quality.\\nSlaanesh: The substance in the character’s veins is highly\\ncorrosive. The Damage described above has the Tearing Quality.\\nNurgle: Ravening maggots spill from the wound. The\\nDamage described above has the Toxic Quality.\\nTzeentch: Upon being wounded, the character’s body\\nemits a wave of warp energy. The Agility Test to avoid the\\ndamage is Hard (–20)\"},\r\n    \"Blasted Senses\": {name: \"Blasted Senses\", tier: -1, devotion: EGods.SPECIAL, description: \"The raw power of Chaos blasts the character’s senses—\\nburning out nerve endings and searing the brain’s ability to\\ntranslate what his perceptions are trying to tell it.\\nThe character is unable to use one randomly determined\\nsense from the following list (sight, hearing, smell, or touch),\\nwith all the penalties that may apply. However, his body\\ndoes compensate slightly for this deformity and he gains\\nthe Heightened Senses Trait for one different, randomly\\ndetermined, sense. At the GM’s discretion, the character can\\nobtain cybernetic augmentation to partially overcome a loss of\\nsight or hearing, although even then the character still suffers\\na –10 penalty to all Awareness Tests made with that sense.\"},\r\n    \"Blessed Fits\": {name: \"Blessed Fits\", tier: -1, devotion: EGods.SPECIAL, description: \"The character is prone to bouts of severe seizures—shaking\\nuncontrollably, frothing at the mouth, and thrashing about\\nwildly. Many consider these fi ts to be special gifts from the\\ngods, during which the afflicted is experiencing intimate\\ncommunion with the Ruinous Powers.\\nShould the character ever declare that he is using an\\nInfamy Point to reroll a failed Test and then fail on the reroll,\\nhe is struck by a seizure and Stunned for 1d10 Rounds. When\\nhe awakens, however, he does not count as having used the\\nInfamy Point.\"},\r\n    \"Boneless\": {name: \"Boneless\", tier: -1, devotion: EGods.SPECIAL, description: \"Some of the character’s bone tissue dissolves into his blood\\nstream, weakening him while at the same time making his\\nbody more flexible. There are those who may be disgusted\\nwith his constantly shifting features.\\nThe character permanently loses 1d10+10 Strength, but\\ngains 1d5+2 Agility\"},\r\n    \"Burning Body\": {name: \"Burning Body\", tier: -1, devotion: EGods.SPECIAL, description: \"The character’s body is wreathed in empyreal flames. While\\nhis own body is unaffected, others who approach too close\\nmay be burned or consumed entirely.\\nThe character’s body is constantly aflame and may damage\\nhis surroundings, betray his presence, and the like, as determined\\nby the GM. In addition, any enemy landing a blow on him with\\ntheir bare hands or attempting to grapple with him must pass\\na Challenging (+0) Agility Test or immediately take 1d10 E\\nDamage. In addition, the character always has a light.\\nKhorne: The flames in which the character is wreathed\\nare those of Khorne’s forges. They inflict 2d10 Damage, but\\nmake it all but impossible for the character to hide in any way\\n(as is appropriate for a champion of the Lord of Battles!).\\nSlaanesh: Slaanesh has gifted the character with a wreath\\nof invisible flames. They will not betray the character’s\\npresence, and unless an enemy is forewarned or has a special\\nability, he will not know of them until it is too late. In\\naddition, the flames no longer count as a light source.\\nNurgle: Corpse-gas flames release a choking scent. Instead\\nof their normal effects, all living creatures in melee with the\\nHeretic must pass an Ordinary (+10) Toughness Test or\\ntake 1d5 Toughness Damage.\\nTzeentch: Writhing multi-hued flames scar the soul as well\\nas the body. In addition to the regular effects, enemies who take\\nDamage from this ability also receive 1 Corruption Point.\"},\r\n    \"Centauroid\": {name: \"Centauroid\", tier: -1, devotion: EGods.SPECIAL, description: \"The character’s entire lower body has been replaced with\\nthat of a hoofed quadruped, creating a bizarre, centauroid\\nform. In many cases the beast in question is entirely random,\\nand may be drawn from some alien world never before\\nwitnessed by man. In other cases, the creature is one that\\nstrikes terror into the hearts of all who face it, or that grants\\nsome special ability drawn from its very nature.\\nThe character gains the Quadruped Trait, and his body\\nfrom the waist down is replaced by that of an animal\\ndetermined by rolling on Table 9-4.\\nKhorne: The body with which the character is fused has\\nskin as hard as brass, granting him an additional +2 Armour\\nPoints to attacks that strike his legs.\\nSlaanesh: The animal’s body is especially lithe and agile,\\ngranting him +10 to all Acrobatics Skill Tests.\\nNurgle: The skin of the animal’s body oozes with necrotic\\nslime, increasing his movement by a further +2.\\nTzeentch: The animal’s feet are replaced with splayed\\nsuckers, granting the character the Sturdy Trait.\"},\r\n    \"Chaos Organ\": {name: \"Chaos Organ\", tier: -1, devotion: EGods.SPECIAL, description: \"This gift confers upon the character an organ or appendage\\nnormally only found attached to a daemon of one of the\\nRuinous Powers. Such a gift is sure to be regarded with awe\\nby other mortals, who will regard it as a sure sign of the\\ncharacter’s favour in the eyes of his otherworldly patrons.\\nThe character gains some aspect of one of the many daemons\\nof Chaos. This could take the form of unnatural eyes burning\\nwith daemonic fi re, long grasping talons replacing hands, cloven\\nhooves, or other, more insidious mutations. The Heretic may\\nselect one of the following Traits: Natural Weapons, Heightened\\nSenses (any one), or Unnatural Characteristic (+1) (any one). He\\nand the GM then determine what daemonic organ contributed\\nthis Trait—a Bloodletter’s eyes, a Flesh Hound’s nose, the\\nrending claws of a Horror, or something altogether stranger.\\nKhorne: The character sprouts a set of horns resembling those\\nof a Bloodletter. The character gains the Furious Assault Talent.\\nSlaanesh:One of the character’s hands (randomly determined)\\nis replaced by the razor-sharp crab claw of a Daemonette. The\\ncharacter gains the Natural Weapons (Claws) Trait, in addition\\nthis weapon has the Razor Sharp Quality. However, the Heretic\\nmay not hold or wield anything in that hand.\\nNurgle: The character’s belly swells with fetid corpse gas,\\nhis entrails pushing horribly through the distended rupture.\\nThe character gains the Regeneration (1) Trait.\\nTzeentch: The character gains an additional arm, topped\\nwith a distended claw like those of a Horror of Tzeentch. The\\ncharacter gains the Multiple Limbs Trait, with the exception\\nthat this additional limb can melt into his body and vanish or\\nreappear at the Heretic’s whim (a Full Action in game terms).\"},\r\n    \"Cyclops\": {name: \"Cyclops\", tier: -1, devotion: EGods.SPECIAL, description: \"The character has been cursed by the fi ckle will of Chaos.\\nIn return for one of his eyes, he is given the ability to see\\nsomething of the future. Unfortunately, the only part of the\\nfuture he is able to see is his own death, and he turns maudlin\\nor enraged as he dwells upon his doom and seeks to plot how\\nit might be avoided.\\nOne of the character’s eyes seals over or turns into a gaping\\nsocket. He permanently loses 1d5 Perception and counts as\\nhaving the Conspiracy Theorist Disorder (see page 278).\"},\r\n    \"Darksoul\": {name: \"Darksoul\", tier: -1, devotion: EGods.SPECIAL, description: \"The character radiates the power of the warp and his soul\\nglows darkly with the blessings of the Ruinous Powers. His\\neyes flicker with the lambent energies of the warp and the air\\nchills with his passing.\\nThe character gains the Fear 1 (Disturbing) Trait or, if\\nhe already causes Fear, increases the level by +1, up to a\\nmaximum of 4 (Terrifying).\\nKhorne: Enemy warriors know that they are facing\\na champion of the Lord of Battles himself, and tremble in\\nfear. Enemy warriors (Imperial Guardsmen, planetary defence\\nforce troops, Space Marines, etc.) count the character’s Fear\\nrating as one level higher.\\nSlaanesh: The character strikes especial terror into the hearts\\nof those who worship the False Emperor of Mankind, for they\\nknow that no extreme of sacrilege is beyond him. Enemies such\\nas Adepta Sororitas, Inquisitors, and members of the Ecclesiarchy\\ncount the character’s Fear rating as one level higher.\\nNurgle: The character is especially horrifying to those who\\nconsider themselves lost or abandoned. When facing renegades,\\nlost colonists, or anyone else beyond the Imperium’s boundaries,\\nthe character’s Fear rating is counted as one level higher.\\nTzeentch: Enemy psykers fi nd the character especially\\ndisturbing, instinctively knowing that they are in the presence\\nof a servant of the Architect of Fate. Enemies with psychic\\npowers count the character’s Fear rating as one level higher\"},\r\n    \"Dimensional Instability\": {name: \"Dimensional Instability\", tier: -1, devotion: EGods.SPECIAL, description: \"The character’s connection to the physical realm begins to\\nslip, his consciousness segueing between real space and the\\nRealm of Chaos. At times, he appears to fade away entirely as\\nhe walks the otherworld of daemons and fell gods.\\nOnce per session, the character may choose to be subject\\nto the Incorporeal Trait for a number of consecutive Rounds\\nequal to his Corruption Bonus.\\nKhorne: So raw is the character’s hatred that he can strike\\nhis foes from beyond the veil of reality. If the character passes\\na Very Hard (-30) Willpower Test, he may make melee\\nattacks while Incorporeal.\\nSlaanesh: The servants of Slaanesh sometimes utilise this\\nstate to invade the dreams and nightmares of their enemies,\\nwhispering subtle lies at the edge of consciousness, or else\\nthey assume ethereally beguiling forms to bewitch their foes.\\nIf the character passes a Very Hard (–30) Willpower Test,\\nhe gains +30 to all Interaction Tests while Insubstantial.\\nNurgle: If the character can pass a Very Hard (–30)\\nWillpower Test, he gains the Fear 1 (Disturbing) Trait while\\nIncorporeal or, if he already cause Fear, increase the level by\\n+1 while Incorporeal (up to a maximum of Fear 4).\\nTzeentch: If the character can pass a Very Hard (–30)\\nWillpower Test, he may use Psychic Powers while Incorporeal.\"},\r\n    \"Emaciated\": {name: \"Emaciated\", tier: -1, devotion: EGods.SPECIAL, description: \"The character’s frame withers until he is all but skeletal and he\\nbecomes weak and frail. He is affl icted by an eternal hunger that\\ncan never be satiated as all but the merest fraction of the food\\nhe imbibes is claimed by the warp, never to strengthen his body.\\nThe character suffers a –20 penalty from Fatigue, rather\\nthan a –10.\"},\r\n    \"Eye of Chaos\": {name: \"Eye of Chaos\", tier: -1, devotion: EGods.SPECIAL, description: \"If the eyes are the window to the soul, then what gazes\\nout from behind the character’s gaze is something far from\\nmortal. His fell gaze is imbued with the weirdling light of the\\nempyrean, and to fall under it is to have one’s soul desiccated\\nas if looking into the warp itself.\\nThe character gains the Psyniscience Skill or, if he already\\npossesses the Skill, advances it by +10.\\nKhorne: The rage of the Blood God himself radiates from\\nthe champion’s eyes. The character gains the Intimidation Skill\\nor, if he already possesses the Skill, advances it by +10.\\nSlaanesh: The character sees into the soul of his victim,\\nrecognising lies and deceit. The character gains the Interrogation\\nSkill, or, if he already possesses the Skill, advances it by +10.\\nNurgle: Nurgle promises deliverance from pain and\\nsuffering. The character gains the Charm Skill, or, if he\\nalready possesses the Skill, advances it by +10.\\nTzeentch: The character’s eyes shine with the multihued\\ngaze of the Lord of Lies. The character gains the Deceive\\nSkill, or, if he already possesses the Skill, advances it by +10\"},\r\n    \"Eye-Stalks\": {name: \"Eye-Stalks\", tier: -1, devotion: EGods.SPECIAL, description: \"The fi ckle nature of Chaos imprints itself upon the character,\\nextending his eyes out of their sockets and causing them to\\nwave above his head on elongated stalks. Though better able\\nto see his surroundings, the danger to his exposed eyeballs\\nshould not be understated.\\nThe character permanently gains 1d5 Perception, but\\nwhenever he suffers Critical Damage to the head (for any\\nreason) he adds +1 to the result. Additionally, he may not be\\nable to wear certain helmets, though the eye-stalks can coil up.\"},\r\n    \"Featureless Face\": {name: \"Featureless Face\", tier: -1, devotion: EGods.SPECIAL, description: \"The character’s features fade away to nothing, leaving him\\nwithout eyes, nose, or mouth. Despite appearances, the character\\n294is left with his senses intact and, in addition, has no need to take in\\nphysical sustenance, gaining nourishment from the imperceptible\\nebb and fl ow of Chaos itself. The effect of this affliction varies, for\\nwhile the character cannot speak in the conventional manner, he\\nis both intensely disturbing and powerfully intimidating.\\nThe character has no need to eat or drink to survive (and\\ncan see normally even without eyes), but he cannot speak\\n(though he may be able to communicate in other ways, such\\nas telepathically or with hand-signs). Any Interaction Tests\\n(except Intimidation Tests) suffer a –20 penalty\"},\r\n    \"Flaming Skull\": {name: \"Flaming Skull\", tier: -1, devotion: EGods.SPECIAL, description: \"The champion’s skin is seared away by unnatural fl ames that\\nmay never be extinguished.\\nThe character gains the Fear (1) Trait or, if he already\\ncauses Fear the rating is increased by one level to a maximum\\nof 4 (Terrifying). His Fellowship is reduced by 10+2d10, to\\na minimum of 1. This may also cause additional disorders\\ndepending on the character’s temperament and personality\"},\r\n    \"Grossly Fat\": {name: \"Grossly Fat\", tier: -1, devotion: EGods.SPECIAL, description: \"The character’s fl esh swells and distorts, muscle turning to\\nblubber before his very eyes and expanding until he is two or\\nthree times his previous mass.\\nThe character permanently loses 1d10+10 Agility and\\n1d10+2 Fellowship, but does permanently gain 1d10 Toughness\\nand the Size (Hulking) Trait (if he does not have it already)\"},\r\n    \"Headless\": {name: \"Headless\", tier: -1, devotion: EGods.SPECIAL, description: \"The touch of Chaos causes the character’s head to shrink into his\\nshoulders, until his features are merged into his upper chest.\\nThe character is slow to react in combat and always\\ncounts as rolling a 1 for Initiative Tests. However, any\\nattacks that hit the head count as hitting the chest\\nlocation instead.\"},\r\n    \"Icon of Blasphemy\": {name: \"Icon of Blasphemy\", tier: -1, devotion: EGods.SPECIAL, description: \"The character embodies all that is blasphemous to those\\nwho blindly worship the False Emperor of Mankind. His\\nblasphemies take many forms, from iconoclastic scripts\\ntattooed upon his skin to a mocking resemblance to a fi gure\\nsuch as an Imperial Saint. Some are capable of channelling\\ntheir very essence into their blasphemies, and these are truly\\na scourge on the weakling Imperium of Man.\\nOnce per session, the character may unveil or unleash his\\nblasphemy upon his foe. For one round, he gains the Fear 3\\n(Horrifying) Trait.\\nKhorne: By passing a Hard (–20) Strength Test, the\\ncharacter may extend the the effect for an additional Round.\\nSlaanesh: By passing a Hard (–20) Fellowship Test,\\nthe character may extend the length of the effect for an\\nadditional Round.\\nNurgle: By passing a Hard (–20) Toughness Test,\\nthe character may extend the length of the effect for an\\nadditional Round.\\nTzeentch: By passing a Hard (–20) Willpower Test,\\nthe character may extend the length of the effect for an\\nadditional Round.\"},\r\n    \"Illusion of Normality\": {name: \"Illusion of Normality\", tier: -1, devotion: EGods.SPECIAL, description: \"Perhaps the most bizarre of all Gifts of the Gods is that which\\nlends the recipient the outward appearance of complete\\nnormality when he is, in fact, a seething mass of mutation and\\ncorruption. To most, the character appears to have the unaltered\\nform he was born with, while to those touched by the warp the\\ntruth is more likely to be visible, and truly horrific.\\nThe character gains the Unremarkable Trait, regardless of how\\nmany mutations he has, what weapons he is carrying, or even if\\nhe is a Chaos Space Marine. This gift is more than a quirk, it is an\\nactive power, and as such it may be detected by enemies using the\\nPsyniscience Skill. For each Gift the character has, deduct 5 from\\nthe difficulty of the Psyniscience Test.\\nKhorne: The character’s enemies are always Surprised\\n(see page 233) when he attacks.\\nSlaanesh: The character gains +20 to all Deceive Skill Tests.\\nNurgle: The character’s range of Nurgle’s Rot (either\\nthe mutation or the psychic power) is now 2 x his\\nCorruption Bonus.\\nTzeentch: The number of mutations the character has does\\nnot affect enemy Psyniscience Tests made to detect his presence\"},\r\n    \"Infernal Will\": {name: \"Infernal Will\", tier: -1, devotion: EGods.SPECIAL, description: \"The needs and desires of the mortal realm hold no power over\\nthe character, and his drives and passions are entirely those of\\nthe warp. He is motivated by the will of the empyrean, and\\nhis deeds make little sense to mere mortals.\\nThe character is entirely immune to the effects of Fear.\\nShould the character fail any Skill Test by four or more\\nDegrees, however, he must immediately roll on Table 8–4:\\nShock and apply the result.\\nKhorne: If the Skill Test was for a Skill aligned with\\nKhorne (see page 93), the character may adjust the result\\nrolled up to an amount equal to his Corruption Bonus.\\nSlaanesh: If the Skill Test was for a Skill aligned with\\nSlaanesh (see page 93), the character may adjust the result\\nrolled up to an amount equal to his Corruption Bonus.\\nNurgle: If the Skill Test was for a Skill aligned with\\nNurgle (see page 93), he may adjust the result rolled up to an\\namount equal to his Corruption Bonus.\\nTzeentch: If the Skill Test was for a Skill aligned with\\nTzeentch (see page 93) the character may adjust the result\\nrolled up to an amount equal to his Corruption Bonus.\"},\r\n    \"Inside Out\": {name: \"Inside Out\", tier: -1, devotion: EGods.SPECIAL, description: \"Occasionally, the dark things that lurk within the warp cause\\na man’s innards to burst through his fl esh so that his body\\nappears clothed in a hideous skin of glistening organs—a\\nfickle caprice that cannot be understood by mere mortals.\\nThe character suffers a –30 penalty to all Interaction Skill Tests\\n(except Intimidate Tests), but gains a +20 to Intimidate Tests.\"},\r\n    \"Intelligent Cyst\": {name: \"Intelligent Cyst\", tier: -1, devotion: EGods.SPECIAL, description: \"A new, cyst-like organ grows inside the character’s body,\\ndeveloping a mind and will of its own. Periodically, the cyst\\nattempts to gain control of the character’s body and, when\\nit does so, it pursues its own ends, which may be entirely\\ndifferent from those of the character.\\n295The cyst gains brief control whenever the host’s\\nconcentration slips. Should the character ever fail an\\nInteraction Skill Test, he fails it by two additional Degrees\\nof Failure, as the Cyst momentarily causes him to do or say\\nsomething contrary to his interests\"},\r\n    \"Limb Loss\": {name: \"Limb Loss\", tier: -1, devotion: EGods.SPECIAL, description: \"The unknowable powers of the warp claim one of the\\ncharacter’s limbs, leaving behind nothing but a healed stump.\\nMost fi nd that the lost limb still feels like it is there, while\\nothers claim to feel the pain of its slow dissolution somewhere\\nin the depths of the Empyrean.\\nThe character loses one randomly determined limb\"},\r\n    \"Magnificent Horns\": {name: \"Magnificent Horns\", tier: -1, devotion: EGods.SPECIAL, description: \"The character is blessed with an impressive set of horns,\\nwhich serve as both weapons and status symbols amongst the\\nranks of the lost and the damned.\\nThe character gains +10 Loyalty with any Minions he\\nmay have. In addition, whenever he makes a Charge Action,\\nhis attack cannot be Parried.\\nKhorne: Only Minions dedicated to the Blood God gain\\nthe Loyalty bonus.\\nSlaanesh: Only Minions dedicated to the Dark Prince\\ngain the Loyalty bonus.\\nNurgle: Only Minions dedicated to the Lord of Decay\\ngain the Loyalty bonus.\\nTzeentch: Only Minions dedicated to the Architect of\\nFate gain the Loyalty bonus.\"},\r\n    \"Mechanoid\": {name: \"Mechanoid\", tier: -1, devotion: EGods.SPECIAL, description: \"The recipient’s body is fused with the machine, his bone\\nreplaced with metal and his muscles with pistons. His psyche\\nis absorbed into the new form, until nothing of the biological\\nremains at all. The resultant machine is the ultimate blasphemy\\nto the Tech-Priests of Mars, and an object of adoration to the\\nDark Mechanicus. Its function obeys no laws of the machine\\nand its internal workings are anathema to logic and reason.\\nThe character gains the Machine (+1) Trait.\\nKhorne: The character’s skin is gleaming bronze, granting\\nhim the Natural Armour (3) Trait.\\nSlaanesh: The character’s muscles are replaced with an\\nimpossibly fi ne mesh of micro actuators, granting him +1 to\\nInitiative Checks.\\nNurgle: The character’s already-formidable frame is\\nfortified still further by an array of mechanical callipers,\\ngranting him the Sturdy Trait.\\nTzeentch: The character’s senses are enhanced by a\\ncomplex web of machine receptors, granting him +10 to all\\nAwareness Tests.\"},\r\n    \"Nerveless Ennui\": {name: \"Nerveless Ennui\", tier: -1, devotion: EGods.SPECIAL, description: \"The character is incapable of feeling physical stimuli, caring\\nfor neither the kiss of lips nor the caress of the blade.\\nThe character’s physical senses are so dulled that he feels little\\nin the way of pain. The character ignores the –10 penalty when\\nsuffering Fatigue. However, any Awareness Tests based on sensing\\nby touch are counted as one level of difficulty harder.\\nKhorne: Whenever the character suffers Critical Damage\\n(after reduction for Armour and Toughness) reduce the\\namount by his Corruption Bonus (to a minimum of 1).\\nSlaanesh: The character may reroll any failed attempts\\nto resist the effects of torture or seduction based on the\\napplication of physical stimuli.\\nNurgle: The character’s resistance is heightened even\\nmore. He must suffer a number of levels of Fatigue equal to\\n2 + his Toughness Bonus before he is knocked unconscious.\\nTzeentch: While the character’s physical senses are dulled,\\nhis supernatural ones are greatly heightened. He adds +20 to\\nthe result of all Psyniscience Skill Tests.\"},\r\n    \"Pervasive Miasma\": {name: \"Pervasive Miasma\", tier: -1, devotion: EGods.SPECIAL, description: \"A drastic imbalance in the character’s humours brought about\\nby prolonged exposure to the baleful energies of the warp\\ncauses him to be surrounded by the creeping, noxious stench\\nof brimstone and corruption.\\nWhen the character fails Stealth Tests, he gains an\\nadditional Degree of Failure.\"},\r\n    \"Projectile Attack\": {name: \"Projectile Attack\", tier: -1, devotion: EGods.SPECIAL, description: \"The character is gifted with the ability to summon forth a\\nstream of unreal matter brewed from the raw stuff of Chaos.\\nThe stream is generally projected from the recipient’s mouth,\\nand the exact nature this matter assumes upon leaving the\\ncharacter’s body varies enormously.\\nThe character may make a Standard Attack Half Action to\\nunleash a projectile attack with the following profi le; Range:\\n10m; Rate of Fire: S/-/-; Damage: 1d10+5; Penetration 3;\\nSpray, Smoke. Obviously, the character may not make this\\nattack if he is wearing an enclosed helmet!\\nKhorne: The matter forms a sheet of raging fi re. The\\nattack gains the Flame Quality.\\nSlaanesh: The stream of matter twists and writhes as\\nincorporeal limbs entwine the victim. The attack gains the\\nShocking Quality.\\nNurgle: The nature of the substance spewing forth from\\nthe character’s innards is best left unsaid. The attack gains the\\nToxic Quality.\\nTzeentch: The character vomits the raw stuff of the warp\\nitself. The attack gains the Warp Weapon Quality.\"},\r\n    \"Pseudo-Deamonhood\": {name: \"Pseudo-Deamonhood\", tier: -1, devotion: EGods.SPECIAL, description: \"A gift held by many as both a curse and a blessing, the\\nrecipient’s body is twisted and mutated until they come to\\nresemble that of one of the myriad lesser daemons of the\\nwarp, such as the dreaded Ebon Geist, the mournful Dispayre,\\nor the savage Manripper. The character’s very nature becomes\\nmelded with the warp and his perception of the material\\nuniverse fades while that of the unreal beyond is magnified a\\nthousand-fold.\\nThe character gains the Fear 4 (Terrifying) and Warp\\nInstability Traits. If the character is ever banished to the\\nwarp, the GM will have to determine the length of time he is\\nbanished for and the conditions of his return. If not dedicated\\nto one of the Chaos Powers, his appearance mutates to\\nresemble a hideous, bestial fiend.\\nKhorne: The character assumes something of the\\nappearance and nature of a Bloodletter. He gains the Brutal\\nCharge Trait.\\nSlaanesh: The character’s body and soul mutates so that it\\ncomes to resemble that of a Daemonette. The character gains\\nthe Unnatural Agility (+2) Trait.\\nNurgle: The character changes so that he appears to be a\\nPlaguebearer. The character gains the Undying Trait.\\nTzeentch: The character’s form twists so that it resembles\\na Horror. The character gains the Blessing of Tzeentch. This\\ncounts as a force fi eld with a Protection Rating of 20, but it\\ncannot be overloaded (see page 178)\"},\r\n    \"Slayer Limb\": {name: \"Slayer Limb\", tier: -1, devotion: EGods.SPECIAL, description: \"One of the character’s limbs fuses with a weapon, either one\\nhe already owns or a new weapon granted as part of the\\ngift. The limb becomes a twisted mass of metal and flesh,\\nmechanisms and muscles flowing together while blood vessels\\nand ammunition feeds become as one. Any trigger mechanism\\nthe character had before is bypassed and it operates with but\\na thought. The character’s metabolism hybridises with the\\nworking of the weapon, and the two become as one, such\\nthat it can even derive power or ammunition from his body.\\nThe player must choose one weapon carried by his character\\nto become fused with his body. The weapon conjoins with\\na single limb of the player’s choice, replacing it from the\\nelbow (or equivalent joint) down (and therefore replacing\\nany hands). The weapon may be of any type, and henceforth\\nnever requires reloading or any other type of maintenance.\\nIf the character is Aligned to a God, his weapon may gain\\nadditional Qualities if it does not already have them.\\nKhorne: The weapon gains the Tearing Quality.\\nSlaanesh: The weapon gains the Crippling (1d5) Quality.\\nNurgle: The weapon gains the Toxic (1) Quality.\\nTzeentch: The weapon gains the Warp Weapon Quality.\"},\r\n    \"Steel-Hearted\": {name: \"Steel-Hearted\", tier: -1, devotion: EGods.SPECIAL, description: \"Some have seen into the depths of the warp and, know how\\ntrivial the concerns of mortals truly are. The character’s heart\\nis steeled to the terrors of the material universe, and only\\nwhat lies beyond it concerns him.\\nThe character counts Fear caused by enemies as one level\\nlower than described in that enemy’s profi le. If the enemy\\ncauses Fear (1), then no effects are suffered at all.\\nKhorne: When facing Fear-causing enemy warriors\\n(Imperial Guard, planetary defence troops, Space Marines,\\netc.), the enemy’s Fear rating is reduced by a further level.\\nSlaanesh: When facing enemies dedicated to the worship of\\nthe corpse-god of the Imperium (such as Adepta Sororitas, priests,\\netc.) who cause Fear, their rating is reduced by a further level.\\nNurgle: Fear effects caused by any other servants of\\nChaos are counted as a further Fear level lower.\\nTzeentch: Any Fear effect caused by an enemy with any\\npsychic ability is reduced by a further level.\"},\r\n    \"Strange Voice\": {name: \"Strange Voice\", tier: -1, devotion: EGods.SPECIAL, description: \"The character’s vocal chords are twisted and distorted as\\nChaos ebbs and flows through his body. A lucky few fi nd\\ntheir voices have become deep and resounding, while the less\\nfortunate are left sounding like a Grot with cranial distemper\\nor merely incomprehensible. More likely, a character may fi nd\\nthat his voice fluctuates depending on the situation.\\nAt the beginning of the game session, roll 1d10. If the\\nresult is a 4 or lower, the character gains +10 to Intimidate\\nSkill Tests, but suffers –10 to Stealth Tests. If the result is a 5\\nor higher, he suffers –20 to all Interaction Tests. These effects\\nlast until the end of the game session\"},\r\n    \"Strange Walk\": {name: \"Strange Walk\", tier: -1, devotion: EGods.SPECIAL, description: \"Any number of afflictions could result in the character suffering\\nfrom a strange walk—from a minor change in proportions\\nto an acute imbalance of the mind. This may result in the\\ncharacter gaining a disturbing gait, perhaps appearing to slide\\nacross the ground, or something more debilitating, such as a\\ncrabwise shuffle or a rigid, straight-legged march.\\nThe character’s movement rate is halved.\"},\r\n    \"Tail\": {name: \"Tail\", tier: -1, devotion: EGods.SPECIAL, description: \"The powers of the warp have granted the character the gift\\nof an impressive tail. More than a mere status symbol, the tail\\nmakes a formidable weapon too.\\nThe character gains an additional attack, made using the\\ntail and counting as a normal, unarmed attack.\\nKhorne: The gift takes the form of a scorpion’s tail and\\nhas the Toxic Quality.\\nSlaanesh:The tail takes the form of a writhing, darting tentacle,\\nand attacks made with it add +20 to the character’s Weapon Skill.\\n297Nurgle: The tail resembles the gristly abdomen of a huge fl y,\\nthe tip of which seeps a noxious gruel of vile liquid. The effect\\nis to reduce the Initiative of all enemies within 20 metres by 20.\\nTzeentch: The tail is prehensile and dextrous, and may be\\nused to carry and operate a weapon, just like a normal arm.\"},\r\n    \"Tentacle\": {name: \"Tentacle\", tier: -1, devotion: EGods.SPECIAL, description: \"One of the character’s limbs shrivels and warps into a boneless\\ntentacle or, in some cases, a writhing mass of them extending\\nfrom where the limb once was.\\nRandomly determine which limb is affected. If it is an arm\\nthen the character may not bear any weapons with that limb\\n(in effect, he can only wield one-handed weapons). If it is a leg\\nthen his movement rate is reduced by 1. However, having a\\ntentacle does give him a +10 bonus to Grapple Tests and, may\\nallow him to reach into tight spaces such as ventilation ducts.\"},\r\n    \"Vampiric Addiction\": {name: \"Vampiric Addiction\", tier: -1, devotion: EGods.SPECIAL, description: \"The character is infused with a burning desire to partake of\\na particular substance and, soon becomes unable to function\\nnormally without doing so on a regular basis. Despite the\\ndrawbacks, the character is able to draw power from his addiction,\\nwhich he utilises to propel himself further along the path to glory.\\nThe character is addicted to a substance chosen by the\\nplayer with the GM’s approval. The substance should be\\nsomething obtained from a living creature, such as the blood,\\nmarrow, or cranial fl uid. In any session in which the character\\npartakes of this substance, he counts his Infamy Points as\\none higher than normal for the remainder of the session.\\nIf he does not partake in the substance by the end of the\\nsession, he permanently loses 1 Toughness. Note that it is not\\nnecessarily vital that the victim “providing” the substance die\\nin the process, meaning the character could theoretically use\\nhis minions as willing (or not-so-willing) donors.\"},\r\n    \"Warp-Eater\": {name: \"Warp-Eater\", tier: -1, devotion: EGods.SPECIAL, description: \"Physical sustenance tastes as ashes to the character and,\\ninstead of imbibing normal food and drink, he must derive\\nnourishment from the infinite fount of the warp. Doing so\\ncarries certain risks, however.\\nThe character need never eat or drink, and so may survive for\\nextended periods while others wither away and die. However,\\nonce per month he must take a Challenging (+0) Toughness\\nTest. If he fails, he gains 1d5+1 Corruption as if from a Failing.\\nKhorne: Followers of Khorne may assuage their warp\\nhunger by slaying the foes of the Blood God. For every foe\\nslain throughout the month, the character gains a +5 bonus\\nto the Toughness Test.\\nSlaanesh: Those who serve the Dark Prince of Chaos may\\nslake their thirst through acts of blasphemy and excess. For\\nevery such deed committed, the character gains a +10 bonus\\nto the Toughness Test.\\nNurgle: By gifting mortals with the delights of Nurgle,\\nthe character may keep his hunger at bay. For every victim\\nhe infects with disease, or kills with an attack with the Toxic\\nQuality, the character gains a +5 bonus to the Toughness Test.\\nTzeentch: To the followers of the Great Schemer, lies and\\ndeceit are more delicious than the fi nest wine. For every lie\\nof consequence told to further one’s own goals, the character\\ngains a +10 bonus to the Toughness Test\"},\r\n    \"Warp-Touched\": {name: \"Warp-Touched\", tier: -1, devotion: EGods.SPECIAL, description: \"Those who pursue glory by walking the path of Chaos are\\nall but immune to what mortals call madness, for they have\\nalready seen and done things that would shatter the frail\\nminds of the Emperor’s lapdogs. However, some are afflicted\\nby such capricious or contrary natures that they appear all but\\ninsane to others, expressing themselves and pursuing goals all\\nbut impenetrable to many around them.\\nThe character must roll on a Disorder Table (page 278)\\nappropriate to the character’s Alignment. If the character is\\nunaligned, then the GM chooses a Disorder Table to roll on.\"},\r\n    \"Warped Appearance\": {name: \"Warped Appearance\", tier: -1, devotion: EGods.SPECIAL, description: \"The character’s appearance mutates and changes with the\\nImmaterium’s touch, making him utterly unmistakable.\\nThe player and GM should work together to determine some\\nway the character’s appearance has warped, whether it be skin\\nstained with coloured blotches, purple hair, black veins running\\nbeneath the skin, or something even more hideous. Whatever\\nthe cosmetic affect, the character suffers a –20 to any Tests\\nmade to disguise himself or cover up his appearance.\"},\r\n    \"Warpsight\": {name: \"Warpsight\", tier: -1, devotion: EGods.SPECIAL, description: \"The character is able to see the world as it really is – the souls\\nof mortals gutter like lanterns in the night while the predators\\nof the warp circle all about like sharks scenting blood.\\nThe character literally sees the souls of his enemy. All\\nAwareness Tests gain a +10 bonus; however, any Scrutiny\\nTests suffer a –10 penalty as the character is less able to see\\nsuch mundane things as facial expressions.\"},\r\n    \"Winged\": {name: \"Winged\", tier: -1, devotion: EGods.SPECIAL, description: \"The Ruinous Power hear the character’s pleas for aid and\\nbestow upon him a pair of mighty pinions with which he is\\nable to soar through the air and visit death from above upon\\nthe heads of his enemies.\\nThe character gains the Flyer Trait at a movement rate\\nequal to his Agility Bonus x 2.\\nKhorne: The character’s wings are black and bat-like.\\nSlaanesh: Gossamer-thin pinions sprout from the\\ncharacter’s back.\\nNurgle: The character’s wings are those of an overgrown fl y.\\nTzeentch: The wings are feathered, like those of a Greater\\nDaemon of Tzeentch.\"},\r\n    \"Wreathed in Chaos\": {name: \"Wreathed in Chaos\", tier: -1, devotion: EGods.SPECIAL, description: \"The warp so infuses the character that it leaks from his\\nvery pores and coils from his eyes, nose, and mouth.\\nThe character gains a +10 bonus to all Interaction Skill\\nTests with fellow Disciples of the Dark Gods. Against others,\\nsuch as xenos or inhabitants of the hated Imperium, he gains\\na +10 to Intimidate Tests only.\\nKhorne: The heat of Khorne’s infernal forges causes the air\\naround the character to ripple and distort. When engaged in\\nmelee, his enemies suffer a –10 penalty to their Weapon Skill.\\nSlaanesh: The character is enveloped in a soporific musk,\\nwhich distracts and confuses opponents. All enemies within\\n10 metres suffer –10 Willpower.\\nNurgle: A cloud of disease-ridden flies constantly\\nbuzzes around the character. All enemies within 10 metres\\nsuffer –5 Initiative.\\nTzeentch: Arcs of aetheric power crackle and seethe from\\nthe character’s body, grounding through anything he touches.\\nThe character adds +2 to melee Damage rolls\"},\r\n\r\n    // REWARDS OF THE GODS\r\n    // SLAANESH\r\n    \"Slaanesh Daemonic Name\": {name: \"Slaanesh Daemonic Name\", tier: -2, devotion: EGods.SLAANESH, description: \"The character is granted a secret name, derived from the\\nimpossible vowels and consonants voiced in the sibilant,\\nlilting tongue of the servants of Slaanesh.\\nThe character gains+1d5 Infamy. However, if the name is\\never discovered by a foe the foe gains the use of an additional\\nInfamy Point (or Fate Point) when battling this character. The\\nmost powerful servants of Chaos gain countless names, and\\nso this gift may be taken multiple times\"},\r\n    \"Slaanesh Daemon Weapon\": {name: \"Slaanesh Daemon Weapon\", tier: -2, devotion: EGods.SLAANESH, description: \"The character is gifted with one of the most cherished blessings\\na servants of the Ruinous Powers can ever receive—a Daemon\\nWeapon, imbued with the essence of a daemon of Chaos.\\nThe character may generate a Daemon Weapon, bound with\\nthe essence of a Daemonette, as described on page 192.\"},\r\n    \"Face of Slaanesh\": {name: \"Face of Slaanesh\", tier: -2, devotion: EGods.SLAANESH, description: \"The visage of the Dark Prince of Chaos is, to most mere mortals\\nat least, both utterly horrifying and achingly beautiful to\\nbehold. Neither male nor female, human nor alien, it transfixes\\nthe soul and obliterates all other desires. Having looked upon\\nsuch a face, all others are mere empty husks. The character’s\\nface assumes the merest fraction of Slaanesh’s countenance and\\nall who look upon him are utterly enslaved by his dark allure.\\nThe character gains the Fear 2 (Frightening) Trait (or\\nincreases his Fear Rating by +1 to a maximum of 4 if he already\\nhas it) plus the Peer (Mortal Followers of Slaanesh) Talent\"},\r\n    \"Hermaphrodite\": {name: \"Hermaphrodite\", tier: -2, devotion: EGods.SLAANESH, description: \"Slaanesh is said to be both male and female, and neither, for\\nmere mortal perception cannot begin to quantify its true nature\\nand such terms are but pale shadows of the terrible truth. The\\ncharacter’s body is changed to reflect something of this state,\\nassuming the characteristic single breast so common amongst\\nthe servants of the Dark Prince of Chaos, as well as features\\nthat are disturbingly attractive yet ultimately sexless. The\\ncharacter becomes an object of adoration to all around him,\\nwhether male or female, and fi nds his own identity assuming\\nan amorphous, genderless quality where such petty mortal\\nqualities as masculinity and femininity become meaningless.\\nWhenever the character passes any Interaction Test, double\\nthe number of Degrees of Success by which it is passed.\"},\r\n    \"Mark of Slaanesh\": {name: \"Mark of Slaanesh\", tier: -2, devotion: EGods.SLAANESH, description: \"So driven is the character, so darkly does his soul shine in\\nthe stygian depths of the Sea of Souls, that he attracts the\\nfl eeting notice of the Dark Prince of Chaos. Slaanesh touches\\nthe character, bestowing upon him his mark and claiming his\\nsoul for all eternity. Having been touched in such a manner,\\nthe character is driven to such extremes of ambition and\\ndesire that entire worlds will tremble to hear his name, and\\nno experience is forbidden to his dark desire.\\nThe character gains the Heightened Senses (All) Talent and\\nthe Unnatural Fellowship (+2) Trait. In addition, the Mark\\nmay grant further bonuses as determined by the GM, and\\nmay be a prerequisite when performing rituals and interacting\\nwith various beings of the warp, etc.\"},\r\n    \"One thousand and one Senses\": {name: \"One thousand and one Senses\", tier: -2, devotion: EGods.SLAANESH, description: \"Those most touched by the power of the Dark Prince are\\ndriven to ever-greater extremes of experience, the sensations\\nof the material universe growing duller by the year. Most\\nfi nd themselves prisoners of their own senses and unable\\nto experience sensations beyond those perceptible to the\\nmortal body they were born into. The character has been\\ngifted with an entirely new and previously unheard of array\\nof sensory perceptions, the merest of which makes those\\nhe was born with pale into insignificance. Armed with his\\nnew perceptions, he sets out into the universe once more,\\ndetermined to experience each to the fullest extent possible.\\nWhenever the character passes an Awareness Skill Test, double\\nthe number of Degrees of Success by which it is passed\"},\r\n    // NURGLE\r\n    \"Corpulent Immensity\": {name: \"Corpulent Immensity\", tier: -2, devotion: EGods.NURGLE, description: \"The character’s frame swells and distorts until he comes\\nto resemble the massive form of Papa Nurgle himself. His\\ninnards bloat and swell, his skin sloughs off, and pus weeps\\nfrom open sores, yet he is blessed with a vigour and strength\\nentirely at odds with his appearance.\\nThe character gains an additional +5 Wounds, but may not\\nmake a Run Action. He also gains the Size (Enormous) Trait.\"},\r\n    \"Nurgle Daemonic Name\": {name: \"Nurgle Daemonic Name\", tier: -2, devotion: EGods.NURGLE, description: \"Nurgle’s tallymen know the name of every disease ever to\\nbeset the mortal realm and they know the true name of the\\ncharacter too. The name is revealed to the recipient and\\nbestowed upon him, granting him equal status to the denizens\\nof Father Nurgle’s bountiful Garden of Decay.\\nThe character gains +1d5 Infamy. However, if the name is\\never discovered by a foe, the foe gains the use of an additional\\nInfamy Point (or Fate Point) when battling this character. The\\nmost powerful servants of Chaos gain countless names, and\\nso this gift may be taken multiple times.\"},\r\n    \"Nurgle Daemon Weapon\": {name: \"Nurgle Daemon Weapon\", tier: -2, devotion: EGods.NURGLE, description: \"The character is gifted with one of the most cherished blessings\\na servant of the Ruinous Powers can ever receive—a Daemon\\nWeapon, imbued with the essence of a daemon of Chaos.\\nThe character may generate a Daemon Weapon, bound\\nwith the essence of a Plaguebearer, as described on page 192\\nin the Armoury Chapter.\"},\r\n    \"Face of Nurgle\": {name: \"Face of Nurgle\", tier: -2, devotion: EGods.NURGLE, description: \"The character is blessed with the most disgusting visage\\npossible—that of Father Nurgle himself. His fl esh becomes\\nswollen and great lumps of it slough off entirely, revealing\\nputrescent corruption beneath. Despite his loathsome, deathly\\ncountenance, the character’s eyes twinkle with Nurgle’s\\nmischievous humour and darkling beneficence, and tiny\\nNurglings prance and caper in the putrid phlegm drooling\\nfrom his ever-grinning maw.\\nThe character gains the Fear 2 (Frightening) Trait (or\\nincreases his Fear Rating by +1 to a maximum of 4 if he already\\nhas it) plus the Peer (Mortal Followers of Nurgle) Talent.\"},\r\n    \"Mark of Nurgle\": {name: \"Mark of Nurgle\", tier: -2, devotion: EGods.NURGLE, description: \"The character is branded as a servant of Grandfather Nurgle\\nand a place in the eternal cavalcade through the Gardens of\\nthe Plaguefather is reserved for him.\\nThe character gains the Stuff of Nightmares and Unnatural\\nToughness (+1) Traits. In addition to these Talents, the Mark\\nmay grant further bonuses as determined by the GM and may\\nbe a prerequisite when performing rituals and interacting\\nwith various beings of the warp\"},\r\n    \"Nurgle's Rot\": {name: \"Nurgle's Rot\", tier: -2, devotion: EGods.NURGLE, description: \"Nurgle’s Rot is the most virulent and pleasing of all of\\nNurgle’s countless plagues, and the character is blessed to be\\nits host. While the character himself does not fall victim to\\nthe rot, his very touch can bestow it upon another, consuming\\nand destroying it.\\nThe character may spend a Full Action and roll a d100. If\\nhe rolls equal to or under his Corruption Point Total (in effect,\\nhe Tests Corruption) everyone within a number of metres\\nequal to his Corruption Point bonus suffers 1d10 Damage\\nwith the Tainted and Toxic (4) qualities. The Damage from\\nthis power ignores Armour unless it is environmentally sealed.\\nThose Devoted to Nurgle are unaffected by this power.\"},\r\n    \"Nurgling Infestation\": {name: \"Nurgling Infestation\", tier: -2, devotion: EGods.NURGLE, description: \"The character’s skin stretches and writhes as loathsome shapes\\ngestate beneath its surface. Soon after, the shapes become\\nboils and then seeping pustules from which tiny Nurglings\\nare hatched. These tiny creatures live in the recesses of the\\ncharacter’s body, finding warmth and sustenance in the most\\nunlikely of places. They are fiercely loyal to their host and\\nfight viscously to defend their home from attack.\\nOnce per combat the character may spill its distended guts\\nand, in so doing, instantly summon a number of Nurglings\\nequal to its Toughness Bonus.\"},\r\n    // KHORNE\r\n    \"Collar of Khorne\": {name: \"Collar of Khorne\", tier: -2, devotion: EGods.KHORNE, description: \"A brass collar, cruelly spiked and engraved with the sigils of the\\nBlood God, materialises around the character’s neck. Forged in\\nKhorne’s weapons-foundries, it may never be removed, but its\\nblessings will protect the recipient from enemy sorcerers.\\nThis gift works in the same manner as the Blood God’s\\nContempt Talent (see page 120), except no Willpower Test is\\nrequired to resist psychic powers.\"},\r\n    \"Khorne Daemonic Name\": {name: \"Khorne Daemonic Name\", tier: -2, devotion: EGods.KHORNE, description: \"The Blood God turns his vast consciousness towards the\\ncharacter for but the briefest instant, and recognises the mortal\\nas one of his own. He bestows, or reveals, the character’s true\\nname, as he is known to the denizens of the Realm of Chaos.\\nThe character gains +1d5 Infamy. However, if the name is\\never discovered by a foe the foe gains the use of an additional\\nInfamy Point (or Fate Point) when battling this character. The\\nmost powerful servants of Chaos gain countless names, and\\nso this gift may be taken multiple times.\"},\r\n    \"Khorne Daemon Weapon\": {name: \"Khorne Daemon Weapon\", tier: -2, devotion: EGods.KHORNE, description: \"The character is gifted with one of the most cherished blessings\\na servant of the Ruinous Powers can ever receive—a Daemon\\nWeapon, imbued with the essence of a daemon of Chaos..\\nThe character may generate a Daemon Weapon, bound with\\nthe essence of a Bloodletter, as described on page 192\"},\r\n    \"Face of Khorne\": {name: \"Face of Khorne\", tier: -2, devotion: EGods.KHORNE, description: \"The Blood God bestows upon the character something of\\nhis own visage—or a manifestation of it that mortals might\\nbe able to perceive, at least. The face is the very essence of\\nbloodshed, its eyes shining with the inner light of Khorne’s\\nbone-furnaces and the nostrils billowing the thick black\\nsmoke of every funeral pyre ever burnt.\\nThe character gains the Fear 2 (Frightening) Trait (or\\nincreases his Fear Rating by +1 to a maximum of 4 if he already\\nhas it), plus the Peer (Mortal Followers of Khorne) Talent.\"},\r\n    \"Flesh-Fused Weapon\": {name: \"Flesh-Fused Weapon\", tier: -2, devotion: EGods.KHORNE, description: \"The Blood God answers the champion’s prayers by instilling\\none of his favoured weapons with a portion of his power and\\nfusing it with the champion’s own body.\\nOne of the character’s primary weapons fuses with one of\\nthe character’s arms. This weapon may not be removed, but it\\ncounts as Best-Craftsmanship if it did not previously, never\\nrequires maintenance, cannot be destroyed, and never runs out of\\nammunition. This weapon may be made into a Legacy Weapon.\"},\r\n    \"Hand of Khorne\": {name: \"Hand of Khorne\", tier: -2, devotion: EGods.KHORNE, description: \"One of the character’s hands swells to two or three times its\\nformer size and the nails become distended and as hard as\\niron. The Hand of Khorne is the tool by which the Blood\\nGod’s will is enacted, and that will is nothing less than the\\nslaughter of every living soul in existence.\\nAttacks made with the Hand of Khorne do not count as\\nUnarmed and deal 2d10 plus Strength Bonus Damage with a\\nPenetration of 8. (see page 243).\"},\r\n    \"Mark of Khorne\": {name: \"Mark of Khorne\", tier: -2, devotion: EGods.KHORNE, description: \"The fell skull rune of Khorne is branded on the character’s\\nfl esh, claiming his soul for the Blood God for all time and\\nmarking him as one of Khorne’s Chosen.\\nThe character gains the Resistance (Psychic Powers)\\nTalent, the Brutal Charge Trait, and Unnatural Strength (+2)\\nif he does not already have them. In addition to these Talents,\\nthe Mark may grant further bonuses as determined by the\\nGM and may be a pre-requisite when performing rituals and\\ninteracting with various beings of the warp, etc.\"},\r\n    \"Purity of Aggression\": {name: \"Purity of Aggression\", tier: -2, devotion: EGods.KHORNE, description: \"The character is blessed with the utter clarity of Khorne’s will,\\nall emotions other than those that fuel bloodshed driven from\\nhis mind. No foe is beyond his hatred, and the feeling is mutual.\\nThe character gains the Enemy (Everyone) Talent, as well\\nas the Hatred (Everyone) Talent.\"},\r\n    // TZEENTCH\r\n    \"Changing of the Ways\": {name: \"Changing of the Ways\", tier: -2, devotion: EGods.TZEENTCH, description: \"Exposure to the raw, unknowable will of Tzeentch causes the\\ncharacter to undergo a complete change in his outward appearance\\nand he assumes a form more pleasing to the God of Change.\\nThe character loses consciousness for d10 hours, and when\\nhe awakens fi nds that all of the gifts he has previously been\\ngranted are gone, and replaced with new ones. Randomly\\ngenerate replacements for each gift, ensuring that the new\\ngifts fall under the same categories as those they are replacing.\\nIf the character does not have any mutations, reroll.\"},\r\n    \"Tzeentch Daemon Weapon\": {name: \"Tzeentch Daemon Weapon\", tier: -2, devotion: EGods.TZEENTCH, description: \"The character is gifted with one of the most cherished blessings\\na servant of the Ruinous Powers can ever receive—a Daemon\\nWeapon, imbued with the essence of a daemon of Chaos.\\nThe character may generate a Daemon Weapon, bound\\nwith the essence of a Horror, as described on page 192.\"},\r\n    \"Tzeentch Daemonic Name\": {name: \"Tzeentch Daemonic Name\", tier: -2, devotion: EGods.TZEENTCH, description: \"The character calls upon Tzeentch and Tzeentch recognises\\none of his own, revealing to the recipient the name by which\\nhe is known in the Realm of Chaos.\\nThe character gains +1d5 Infamy. However, if the name is\\never discovered by a foe the foe gains the use of an additional\\nInfamy Point (or Fate Point) when battling this character. The\\nmost powerful servants of Chaos gain countless names, and\\nso this gift may be taken multiple times.\"},\r\n    \"Ecstatic Duplication\": {name: \"Ecstatic Duplication\", tier: -2, devotion: EGods.TZEENTCH, description: \"The character is granted a most bizarre reward—one that\\ntruly befi ts Tzeentch’s inscrutable ways. Upon his death,\\nthe character’s body dissolves and melts, running in greater\\nshimmering rivulets until its mass reforms into two Blue\\nHorrors, the lesser daemons of Tzeentch.\\nIf the character dies, he is immediately replaced by two\\nBlue Horrors (see page 354), which the player may control for\\nthe remainder of the Encounter. Don’t forget that these two\\nlesser daemons each become two Pink Horrors should they be\\nslain. The character may still burn Infamy to survive, in which\\ncase he returns at the beginning of the next game session after\\ncongealing out of the remains of the daemons he became.\"},\r\n    \"Face of Tzeentch\": {name: \"Face of Tzeentch\", tier: -2, devotion: EGods.TZEENTCH, description: \"The God of Change grants the character a face resembling\\nhis own. His features pucker and take on something of\\nthe inscrutable visage of Tzeentch, they shift and change\\nconstantly, his eyes, nose, and mouth moving around his face\\nin a most disturbing manner.\\nThe character gains the Fear 2 (Frightening) Trait (or\\nincreases his Fear Rating by +1 to a maximum of 4 if\\nhe already has it), plus the Peer (Mortal Followers of\\nTzeentch) Talent.\"},\r\n    \"Flaming Arm\": {name: \"Flaming Arm\", tier: -2, devotion: EGods.TZEENTCH, description: \"One of the character’s arms is replaced with the arm of a\\nFlamer of Tzeentch, and he is able to project from its blunt tip\\na stream of mutating fl ame.\\nOne randomly determined arm is replaced by that of a\\nFlamer of Tzeentch, a twisting limb capped with a hand that can\\nbecome a gaping, tooth-ringed mouth that belches fl ame. The\\nCharacter may use it to make ranged attacks as if it was a weapon\\nwith the following profi le: (10m; S/–/–; 1d10+Intelligence\\nBonus E Damage; Pen 0; Spray, Tainted, Warp Weapon).\"},\r\n    \"Massive Intellect\": {name: \"Massive Intellect\", tier: -2, devotion: EGods.TZEENTCH, description: \"Exposure to the will of Tzeentch gifts the character with a\\nvastly swollen intellect, enabling him to perceive something\\nof the God of Change’s great scheme and align his own\\nthoughts and deeds with it.\\nWhenever the character passes a Logic Skill Test, double\\nthe number of Degrees of Success by which it is passed.\"},\r\n    \"Mark of Tzeentch\": {name: \"Mark of Tzeentch\", tier: -2, devotion: EGods.TZEENTCH, description: \"Tzeentch shares with the character but a minute portion of his\\ngrand scheme for the universe, just enough to empower the\\nrecipient without blasting his soul to a cinder. The character\\nis marked forever, the arcane rune of Tzeentch burned into his\\nfl esh and his soul claimed by the God of Change.\\nThe character gains the Unnatural Willpower (+1) Trait and\\nthe Psy Rating (+1) Talent. If he does not already have it, he\\nalso gains the Psyker Trait. He now counts as a Bound psyker,\\nas the reward binds him to Tzeentch. In addition to these\\nTalents, the Mark may grant further bonuses as determined by\\nthe GM, and may be a prerequisite when performing rituals\\nand interacting with various beings of the warp.\"},\r\n    \"Warpsmith\": {name: \"Warpsmith\", tier: -2, devotion: EGods.TZEENTCH, description: \"The character is rewarded with the ability to manipulate the\\ntides of the warp as if he were born in its unknowable depths\\nand not the mortal realm.\\nThe character gains the Psy Rating (+2) Talent, plus the\\nPsyker Trait if he does not already have it. He now counts as\\na Bound psyker, as the reward binds him to Tzeentc\"},\r\n    // \"ADDICTION\": {name: \"ADDICTION\", tier: -1, devotion: EGods.TZEENTCH, description: \"\"},\r\n\r\n\r\n} as ITalentState\r\n\r\n\r\n// export const allEffects\r\n\r\n\r\nexport const allWeapons: IWeaponState = {\r\n    'Autopistol': { name: 'Autopistol', category: EItemCategory.WEAPON, count: 1, weaponCategory: EWeaponCategory.PISTOL, damage: '1d10+2', range: 30, rof: 's/-/6', clip: 18, rld: 'FULL', type: EDamageType.IMPACT, pen: 0, weight: 1.5 } as IWeapon,\r\n    \"Chaindagger\": { name: 'Chaindagger', category: EItemCategory.WEAPON, count: 1, weaponCategory: EWeaponCategory.CHAIN, damage: '1d10+1', range: 0, rof: '', clip: 0, rld: '', type: EDamageType.RENDING, pen: 0, weight: 1.5 } as IWeapon,\r\n    \"Splinter Rifle\": { name: \"Splinter Rifle\", category: EItemCategory.WEAPON, count: 1, damage: \"1d10+2\", clip: 200, range: 100, pen: 3, rof: \"s/3/5\", rld: \"FULL\", description: \"Toxic (4) - (-40 Thougness Test or 1d10 pure)\", weaponCategory: EWeaponCategory.PISTOL, type: EDamageType.LASER, weight: 0 } as IWeapon,\r\n\r\n\r\n//    SPELLS\r\n    \"Doombolt\" : { name: \"Doombolt\", category: EItemCategory.SPELL, count: 1, damage: \"1d10 + Psy Rating\", pen: 8, type: EDamageType.ENERGY, exp: 200, prerequisites: \"None\", action: \"Half\", focusPower: \"Challenging (+0) WP\", range: \"20m x Psy Rating\", sustained: false, subtype: [ESpellType.ATTACK, ESpellType.CONCENTRATION], description: \"Known by a variety of names, the Doombolt is a common destructive power utilised by a great many Chaos magos to strike down their foes. Formed from the coalesced spite and loathing of the Sorcerer, they are corrosive bolts of dark energy, raining down like black hail upon the enemy. As the Sorcerer conjures these bitter projectiles with clenched fi sts, he fi lls the air with the stench of brimstone and the booming roar of daemons for the brief moment of the power’s manifestation. Doombolt is a Psychic Barrage that deals 1d10+ Psy Rating Energy Damage with a Pen of 8.\" } as ISpell,\r\n    \"Rain of Foulness\" : { name: \"Rain of Foulness\", category: EItemCategory.SPELL, count: 1, damage: \"1d10+7\", pen: 1, type: EDamageType.ENERGY, exp: 300, prerequisites: \"Aligned Nurgle\", action: \"Half\", focusPower: \"Challenging (+0) WP\", sustained: true, subtype: [ESpellType.ATTACK, ESpellType.CONCENTRATION], description: \"At the Sorcerer’s command, the skies fi ll with brooding, discoloured clouds that split open and pour filth and rotten blood down upon the Sorcerer’s foes. Few can do little more than fl ee from this downpour of vileness. The most devout of Nurgle’s sorcerers speak of this power as being agift from Grandfather Nurgle, bestowed upon the world from the Plague Lord’s domain. This power is a Psychic Blast with a radius of 1+ the Degrees of Success on the Focus Power Test. Anyone caught within the area of effect suffers 1d10+7 I Damage with a Penequal to Psy Rating and the Toxic (3) Quality, and must take a Pinning Test.\" } as ISpell\r\n    // \"Foul Cage\": {name: \"Foul Cage\",  }\r\n}\r\n\r\n\r\n\r\nexport const allArmour: {[name: string]: IArmour} = {\r\n    \"Light Carapace\": {\r\n        name: \"Light Carapace\",\r\n        count: 1,\r\n        category: EItemCategory.ARMOUR,\r\n        armL: 5,\r\n        legL: 5,\r\n        legR: 5,\r\n        armR: 5,\r\n        body: 5\r\n    },\r\n    \"Carapace Helm\": {\r\n        name: \"Carapace Helm\",\r\n        count: 1,\r\n        category: EItemCategory.ARMOUR,\r\n        head: 4\r\n    },\r\n}\r\n\r\nexport const allItems: IInventory = {\r\n    'Medipack': {\r\n        name: \"Medipack\",\r\n        count: 3,\r\n        category: EItemCategory.MISC,\r\n        description: \"Basic Medi-Pack kits will usually contain drugs and bandages to treat a variety of injuries and illnesses, such as cataplasm patches and contraseptics. More advanced models might include a diagnostic Cogitator with bio-scanner and probes to determine the patient's ailments. The most advanced types, available to the elite of the Imperium, can include cast sprays, tox wands, synthskin applicators and more.\"\r\n    },\r\n    'Data Slate': {\r\n        name: 'Data Slate',\r\n        count: 1,\r\n        category: EItemCategory.MISC,\r\n        description: 'Data Slate which can contain various informations.'\r\n    },\r\n    ...allWeapons,\r\n    ...allArmour,\r\n}\r\n\r\n\r\n\r\n","export enum ETabNames {\r\n    CHARACTERISTICS,\r\n    SKILLS,\r\n    TALENTS,\r\n    ARMOURY,\r\n    INVENTORY,\r\n    SETTINGS,\r\n    EXPERIENCE,\r\n    SEARCH\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { allItems } from \"../character/resources\";\r\nimport { EWeaponCategory, EDamageType, IArmour, IWeapon } from \"../armoury/armourySlice\";\r\nimport { EItemCategory } from \"../character/EItemCategory\";\r\n\r\nexport interface IItem {\r\n    name: string,\r\n    count: number,\r\n    category: EItemCategory\r\n    description?: string\r\n}\r\n\r\nexport type TItem = IItem | IWeapon | IArmour;\r\n\r\nexport interface IInventory {\r\n    [name: string]: TItem\r\n}\r\n\r\nexport const itemsInitialState = {\r\n    'Data Slate': {\r\n        name: 'Data Slate',\r\n        count: 1,\r\n        category: EItemCategory.MISC,\r\n        description: 'Data Slate which can contain various informations.'\r\n    },\r\n    'Autopistol': {\r\n        name: 'Autopistol',\r\n        category: EItemCategory.WEAPON,\r\n        count: 1,\r\n        weaponCategory: EWeaponCategory.PISTOL,\r\n        damage: '1d10+2',\r\n        range: 30,\r\n        rof: 's/-/6',\r\n        clip: 18,\r\n        rld: 'FULL',\r\n        type: EDamageType.IMPACT,\r\n        pen: 0,\r\n        weight: 1.5\r\n    },\r\n    [`Chaindagger`]: {\r\n        name: 'Chaindagger',\r\n        category: EItemCategory.WEAPON,\r\n        count: 1,\r\n        weaponCategory: EWeaponCategory.CHAIN,\r\n        damage: '1d10+1',\r\n        range: 0,\r\n        rof: '',\r\n        clip: 0,\r\n        rld: '',\r\n        type: EDamageType.RENDING,\r\n        pen: 0,\r\n        weight: 1.5\r\n    },\r\n    ['DummyArmour']: {\r\n        name: 'DummyArmour',\r\n        count: 1,\r\n        category: EItemCategory.ARMOUR,\r\n        body: 95\r\n\r\n    }\r\n} as IInventory\r\n\r\nexport const inventorySlice = createSlice({\r\n    name: 'items',\r\n    initialState: itemsInitialState,\r\n    reducers: {\r\n        addItem: (state, action: PayloadAction<IItem>) => {\r\n            const { name } = action.payload;\r\n            const oldCount = state[name]?.count\r\n            state[name] = { ...action.payload, count: oldCount ? oldCount + 1 : 1 };\r\n        },\r\n        addItemByName: (state, action: PayloadAction<string>) => {\r\n            const itemname = action.payload;\r\n            if (state[itemname]) {\r\n                state[itemname].count++;\r\n            } else {\r\n                console.log(itemname)\r\n                console.log(allItems[itemname])\r\n                console.log()\r\n                const item = allItems[itemname];\r\n\r\n                item ? state[itemname] = item\r\n                    : state[itemname] = { name: itemname, count: 1, category: EItemCategory.NONE };\r\n            }\r\n        },\r\n        changeWeaponName: (state, action: PayloadAction<IWeapon & { oldName: string }>) => {\r\n            state[action.payload.name] = action.payload;\r\n            delete state[action.payload.oldName]\r\n        },\r\n        editWeapon: (state, action: PayloadAction<IWeapon>) => {\r\n            state[action.payload.name] = action.payload;\r\n        },\r\n        editArmour: (state, action: PayloadAction<IArmour>) => {\r\n            state[action.payload.name] = action.payload;\r\n        },\r\n        removeItem: (state, action: PayloadAction<TItem>) => {\r\n            const item = action.payload;\r\n            if (item.count === 1) {\r\n                delete state[item.name];\r\n            } else {\r\n                state[item.name].count--;\r\n            }\r\n        },\r\n        editDescription: (state, action: PayloadAction<IItem>) => {\r\n            const item = action.payload;\r\n            state[item.name].description = item.description\r\n        },\r\n        editCategory: (state, action: PayloadAction<IItem>) => {\r\n            const item = action.payload;\r\n            state[item.name].category = item.category\r\n        },\r\n        importInventory: (state, action) => {\r\n            const inventory = action.payload;\r\n            //clear existing\r\n            for(const item in state) {\r\n                delete state[item];\r\n            }\r\n            for (const name in inventory) {\r\n                state[name] = inventory[name];\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {\r\n    addItem,\r\n    addItemByName,\r\n    changeWeaponName,\r\n    editWeapon,\r\n    editArmour,\r\n    removeItem,\r\n    editDescription,\r\n    editCategory,\r\n    importInventory\r\n} = inventorySlice.actions\r\nexport default inventorySlice.reducer\r\n\r\n","import {\r\n    Alert,\r\n    Badge,\r\n    Button,\r\n    Card,\r\n    Col, Container,\r\n    Dropdown, DropdownButton,\r\n    FormControl,\r\n    InputGroup,\r\n    OverlayTrigger,\r\n    Row,\r\n    Tooltip\r\n} from \"react-bootstrap\";\r\nimport {\r\n    BiCrosshair,\r\n    BiQuestionMark, FaDiceD20,\r\n    GiAncientSword,\r\n    GiArrowScope, GiBulletImpacts,\r\n    GiChainsaw, GiElectric,\r\n    GiLaserPrecision,\r\n    GiMachineGunMagazine,\r\n    GiPistolGun,\r\n    GiReloadGunBarrel,\r\n    GiShieldImpact,\r\n    GiWeight,\r\n    IoMdCheckmarkCircle\r\n} from \"react-icons/all\";\r\nimport React, { useState } from \"react\";\r\nimport './weaponCard.scss';\r\nimport { EWeaponCategory, EDamageType, IWeapon, removeWeapon } from \"./armourySlice\";\r\nimport { addItem, editWeapon, changeWeaponName } from \"../inventory/inventorySlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\nimport {\r\n    IDamageRoll,\r\n    IRollResult,\r\n    IStatRoll,\r\n    rollAimAndSendToDiscord,\r\n    rollDamageAndSendToDiscord,\r\n    rollStatAndSendToDiscord\r\n} from \"../character/Rolls\";\r\nimport { getHitLocation } from \"./armoury\";\r\n\r\n\r\nexport const WeaponCard = ({ weapon, editMode = false }: { weapon: IWeapon, editMode?: boolean }) => {\r\n    const [newName, setNewName] = useState(weapon.name);\r\n\r\n    const weaponEquipped = useAppSelector(state => state.armoury.weapons[weapon.name]);\r\n    const character = useAppSelector(state => state.character);\r\n    const characteristics = useAppSelector(state => state.characteristics);\r\n    const [testModifier, setTestModifier] = useState(10);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [variant, setVariant] = useState('success');\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n\r\n    function getJSXForWeaponCategory(cat: EWeaponCategory) {\r\n        switch (cat) {\r\n            case EWeaponCategory.SWORD:\r\n                return <GiAncientSword/>;\r\n            case EWeaponCategory.PISTOL:\r\n                return <GiPistolGun/>\r\n            case EWeaponCategory.CHAIN:\r\n                return <GiChainsaw/>\r\n        }\r\n        return <BiQuestionMark/>\r\n    }\r\n\r\n\r\n    function getJSXForWeaponType(weaponType: EDamageType) {\r\n        switch (weaponType) {\r\n            case EDamageType.IMPACT:\r\n                return <GiBulletImpacts/>\r\n            case EDamageType.RENDING:\r\n                return <GiChainsaw/>\r\n            case EDamageType.SCHOCK:\r\n                return <GiElectric/>\r\n            case EDamageType.LASER:\r\n                return <GiLaserPrecision/>\r\n\r\n        }\r\n\r\n        return <BiQuestionMark/>;\r\n    }\r\n\r\n    function getWeaponTypeDropdown() {\r\n        return <Dropdown>\r\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                {getJSXForWeaponCategory(weapon.weaponCategory)}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n                {Object.values(EWeaponCategory).map((value, index) => {\r\n                        // @ts-ignore\r\n                        const e = EWeaponCategory[index]\r\n                        return e ? <Dropdown.Item\r\n                            key={`category-dropdown-${e}`}\r\n                            onClick={() => {\r\n                                dispatch(editWeapon({ ...weapon, weaponCategory: index }))\r\n                            }}>{e}</Dropdown.Item> : null\r\n                    }\r\n                )}\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    }\r\n\r\n    function getWeightField(col = 2) {\r\n        return editMode ?\r\n            <Col md={col}> <GiWeight/> <FormControl size={\"sm\"}\r\n                                                    value={weapon.weight}\r\n                                                    placeholder={\"1\"}\r\n                                                    aria-label=\"Weight\"\r\n                                                    onChange={(event) => dispatch(editWeapon({\r\n                                                        ...weapon,\r\n                                                        weight: parseInt(event.target.value)\r\n                                                    }))}/> </Col>\r\n            : <Col md={col}> <GiWeight/> {weapon.weight} </Col>\r\n    }\r\n\r\n\r\n    function getDamageField() {\r\n        return editMode ?\r\n            <Col md={4}>\r\n                Damage\r\n                <FormControl size={\"sm\"}\r\n                             value={weapon.damage}\r\n                             placeholder={\"xd10+y\"}\r\n                             aria-label=\"Damage in Form xd10 + y\"\r\n                             onChange={(event) => dispatch(editWeapon({ ...weapon, damage: event.target.value }))}/>\r\n                <div>\r\n                    <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                           onClick={() => dispatch(editWeapon({\r\n                               ...weapon,\r\n                               pen: weapon.pen ? weapon.pen + 1 : 1\r\n                           }))}>+</Badge>\r\n                    <Badge pill={true} variant={\"secondary\"}> <GiShieldImpact/> {weapon.pen ? weapon.pen : 0} </Badge>\r\n                    <Badge variant={'danger'} style={{ cursor: 'pointer' }}\r\n                           onClick={() => dispatch(editWeapon({\r\n                               ...weapon,\r\n                               pen: weapon.pen ? Math.max(weapon.pen - 1, 0) : 0\r\n                           }))}>-</Badge>\r\n                </div>\r\n\r\n                <Dropdown>\r\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                        {getJSXForWeaponType(weapon.type)}\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                        {Object.values(EDamageType).map((value, index) => {\r\n                                // @ts-ignore\r\n                                const e = EDamageType[index]\r\n                                return e ? <Dropdown.Item\r\n                                    key={`category-dropdown-${e}`}\r\n                                    onClick={() => {\r\n                                        dispatch(editWeapon({ ...weapon, type: index }))\r\n                                    }}\r\n                                >{e}</Dropdown.Item> : null\r\n                            }\r\n                        )}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n            </Col>\r\n            : <Col md={4}>{weapon.damage} <Badge pill={true} variant={\"secondary\"}> <GiShieldImpact/> {weapon.pen}\r\n            </Badge> </Col>\r\n    }\r\n\r\n    function getRangeField() {\r\n        return editMode ?\r\n            <Col> <GiArrowScope/> Range<FormControl size={\"sm\"}\r\n                                                    placeholder={\"30\"}\r\n                                                    value={weapon.range}\r\n                                                    aria-label=\"Range in m\"\r\n                                                    onChange={(event) => dispatch(editWeapon({\r\n                                                        ...weapon,\r\n                                                        range: parseInt(event.target.value)\r\n                                                    }))}/>\r\n                Rate of Fire\r\n                <FormControl size={\"sm\"}\r\n                             value={weapon.rof}\r\n                             placeholder={\"s/-/6\"}\r\n                             aria-label=\"Rate of Fire\"\r\n                             onChange={(event) => dispatch(editWeapon({ ...weapon, rof: event.target.value }))}/>\r\n            </Col>\r\n            : <Col> <GiArrowScope/> {weapon.range}m - {weapon.rof} </Col>\r\n    }\r\n\r\n    function getMagazineField() {\r\n        return editMode ?\r\n            <Col> <GiMachineGunMagazine/> Magazine <FormControl size={\"sm\"}\r\n                                                                value={weapon.clip}\r\n                                                                placeholder={\"8\"}\r\n                                                                aria-label=\"Magazine\"\r\n                                                                onChange={(event) => dispatch(editWeapon({\r\n                                                                    ...weapon,\r\n                                                                    clip: parseInt(event.target.value)\r\n                                                                }))}/>\r\n                <GiReloadGunBarrel/> Reload <FormControl size={\"sm\"}\r\n                                                         value={weapon.rld}\r\n                                                         placeholder={\"FULL | HALF\"}\r\n                                                         aria-label=\"Magazine\"\r\n                                                         onChange={(event) => dispatch(editWeapon({\r\n                                                             ...weapon,\r\n                                                             rld: event.target.value\r\n                                                         }))}/>\r\n\r\n            </Col>\r\n            : <Col> <GiMachineGunMagazine/> {weapon.clip} <GiReloadGunBarrel/> {weapon.rld} </Col>\r\n    }\r\n\r\n    function getRemoveFromArmoury() {\r\n        return weaponEquipped ?\r\n            <Col md={1}>\r\n                <Badge variant={'danger'} style={{ cursor: 'pointer' }}\r\n                       onClick={() => {\r\n                           dispatch(removeWeapon(weapon));\r\n                           dispatch(addItem(weapon))\r\n                       }}>-\r\n                </Badge>\r\n            </Col> : <></>\r\n    }\r\n\r\n    function getNameField() {\r\n        return <Col>\r\n            <OverlayTrigger\r\n                key={`weaponCardTooltip-${weapon.name}`}\r\n                overlay={\r\n                    <Tooltip\r\n                        id={`tooltip-${weapon.name}`}>{weapon.description ? weapon.description : \"Add description\"}</Tooltip>\r\n                }>\r\n                {editMode ? <Row>\r\n                        {!isMeeleWeapon() ?\r\n                            <Col md={4}>\r\n                                {getWeaponTypeDropdown()}\r\n                            </Col>\r\n                            : <></>\r\n                        }\r\n                        <Col>\r\n                            {isMeeleWeapon() ? getWeaponTypeDropdown() : <></>}\r\n                            <InputGroup>\r\n                                <FormControl size={\"sm\"}\r\n                                             value={newName}\r\n                                             placeholder={\"Description\"}\r\n                                             aria-label=\"Description\"\r\n                                             onChange={(event) => setNewName(event.target.value)}/>\r\n                                <InputGroup.Append>\r\n                                    <Button size={\"sm\"}\r\n                                            placeholder={\"Name\"}\r\n                                            onClick={(event) => {\r\n                                                dispatch(changeWeaponName({\r\n                                                    ...weapon,\r\n                                                    name: newName,\r\n                                                    oldName: weapon.name\r\n                                                }))\r\n                                            }}>\r\n                                        <IoMdCheckmarkCircle cursor={\"pointer\"} color={\"white\"}/>\r\n                                    </Button>\r\n                                </InputGroup.Append>\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    <div>{getJSXForWeaponCategory(weapon.weaponCategory)} {getJSXForWeaponType(weapon.type)} {weapon.name}</div>\r\n                }\r\n\r\n            </OverlayTrigger>\r\n        </Col>\r\n    }\r\n\r\n    function getRollDice() {\r\n        const characteristic = isMeeleWeapon() ? characteristics[\"WS\"] : characteristics[\"BS\"];\r\n        const dropItems = [<Dropdown.Header key={`aim-header-${weapon.name}`}>Aim Modifier</Dropdown.Header>];\r\n\r\n        // dropItems.push();\r\n        for (let i = 60; i > -70; i -= 10) {\r\n            dropItems.push(<Dropdown.Item key={`${weapon.name}-modifier-${i}`} onClick={() => setTestModifier(i)}>{i}</Dropdown.Item>);\r\n        }\r\n\r\n        return <Row>\r\n            <Col>\r\n                <DropdownButton size=\"sm\" title={testModifier} variant={'secondary'}>\r\n                    {dropItems}\r\n                </DropdownButton>\r\n            </Col>\r\n            <Col>\r\n                <Button size=\"sm\" variant=\"light\"\r\n                        onClick={() => showAimAlert(rollAimAndSendToDiscord(character.discord[character.discord.active], character.characterName, characteristic, testModifier))}\r\n                >\r\n                    <BiCrosshair style={{ cursor: \"pointer\" }}\r\n                    /> Aim\r\n                </Button>\r\n            </Col>\r\n            <Col>\r\n                <Button size=\"sm\" variant=\"light\"\r\n                        onClick={() => showDamageAlert(rollDamageAndSendToDiscord(character.discord[character.discord.active], character.characterName, weapon))}\r\n                >\r\n                    <FaDiceD20 color={\"darkred\"}\r\n                               style={{ cursor: \"pointer\" }}\r\n                    /> Damage\r\n                </Button>\r\n            </Col>\r\n        </Row>;\r\n    }\r\n\r\n    function showAimAlert(rollResult: IStatRoll) {\r\n        setVariant(rollResult.result ? 'success' : 'danger');\r\n        setShow(true);\r\n        setTimeout(() => setShow(false), 15000)\r\n        setText(`Stat ${rollResult.characteristics.value + rollResult.modifier} Rolled ${rollResult.rollSum} = Test ${rollResult.result ? 'success' : 'failed'} \r\n        ${getHitLocation(rollResult.rollSum)}`)\r\n    }\r\n\r\n    function showDamageAlert(rollResult: IDamageRoll) {\r\n        setShow(false);\r\n        setShow(true);\r\n        setVariant('info')\r\n        setTimeout(() => setShow(false), 15000)\r\n        setText(`Damage: ${rollResult.rollSum + rollResult.damage} - Pen: ${rollResult.pen} - Rolls: ${JSON.stringify(rollResult.rolls)}`)\r\n    }\r\n\r\n    function isMeeleWeapon() {\r\n        return weapon.weaponCategory > EWeaponCategory._\r\n    }\r\n\r\n    function getWeaponCard() {\r\n        if (isMeeleWeapon()) {\r\n            return getWeaponCardMeele()\r\n        } else {\r\n            return getWeaponCardRange()\r\n        }\r\n    }\r\n\r\n    function getWeaponCardMeele() {\r\n        return <Card key={`weaponCard${weapon.name}`}>\r\n            <Card.Header>\r\n                <Row>\r\n                    {getNameField()}\r\n                    {getDamageField()}\r\n                    {getWeightField()}\r\n                    {getRemoveFromArmoury()}\r\n                </Row>\r\n            </Card.Header>\r\n            <Card.Body style={{ padding: 10 }}>\r\n                {getRollDice()}\r\n                <Alert onClose={() => setShow(false)} show={show} variant={variant}>\r\n                    {text}\r\n                </Alert>\r\n            </Card.Body>\r\n        </Card>;\r\n    }\r\n\r\n\r\n    function getWeaponCardRange() {\r\n        return <Card key={`weaponCard${weapon.name}`}>\r\n            <Card.Header>\r\n                <Row>\r\n                    {getNameField()}\r\n                    {getDamageField()}\r\n                    {getWeightField()}\r\n                    {getRemoveFromArmoury()}\r\n                </Row>\r\n            </Card.Header>\r\n            <Card.Body style={{ padding: 5 }}>\r\n                <Row>\r\n                    {getRangeField()}\r\n                    {getMagazineField()}\r\n                </Row>\r\n                {getRollDice()}\r\n                <Alert onClose={() => setShow(false)} show={show} variant={variant}>\r\n                    {text}\r\n                </Alert>\r\n            </Card.Body>\r\n        </Card>;\r\n    }\r\n\r\n    return getWeaponCard()\r\n\r\n}\r\n","import { ISkill } from \"../skills/skillSlice\";\r\nimport { EDamageType, ISpell, IWeapon } from \"../armoury/armourySlice\";\r\nimport { ICharacteristics } from \"../characteristics/characteristicsSlice\";\r\nimport { getHitLocation } from \"../armoury/armoury\";\r\n\r\nenum ERollType {\r\n    NONE,\r\n    TEST,\r\n    STAT,\r\n    INIT,\r\n    DAMAGE,\r\n    AIM\r\n}\r\n\r\nexport interface IRollResult {\r\n    rollType: ERollType,\r\n    rolls: number[],\r\n    rollSum: number,\r\n    amount: number,\r\n    limit: number,\r\n}\r\n\r\nexport interface IStatRoll extends IRollResult {\r\n    characteristics: ICharacteristics,\r\n    modifier: number,\r\n    result?: boolean,\r\n}\r\n\r\nexport interface ITestRoll extends IRollResult {\r\n    stat?: number,\r\n    level?: number,\r\n    sum?: number,\r\n    result?: boolean,\r\n}\r\n\r\nexport interface IDamageRoll extends IRollResult {\r\n    damage: number,\r\n    type: EDamageType,\r\n    pen: number,\r\n\r\n}\r\n\r\nexport interface IInitRoll extends IRollResult {\r\n    bonus: number,\r\n}\r\n\r\nexport function rollTestAndSendToDiscord(discordServer: string, username: string, characteristics: number, skill?: ISkill, amount: number = 1, limit: number = 100, bonus: number = 0): IRollResult {\r\n    const rollResult = rollTest(characteristics, amount, limit, bonus, skill);\r\n    const message = skill ? `tried ${skill.name} Test` : \"\"\r\n\r\n    sendMessage(discordServer, message, getEmbedsForRollType(rollResult), username);\r\n\r\n    return rollResult\r\n}\r\n\r\nexport function rollAndSendToDiscord(discordServer: string, username: string, amount: number = 1, limit: number = 100) {\r\n    const rollResult = roll(amount, limit);\r\n    sendMessage(discordServer, ` made custom roll`, getEmbedsForRollType(rollResult), username);\r\n    return rollResult;\r\n}\r\n\r\nexport function rollDamageAndSendToDiscord(discordServer: string, username: string, weapon: IWeapon | ISpell): IDamageRoll {\r\n\r\n    // Damage Calc\r\n    const d = weapon.damage.split(\"d\")\r\n    const amount = parseInt(d[0]);\r\n    const limit = parseInt(d[1].split(\"+\")[0]);\r\n    const damage = parseInt(d[1].split(\"+\")[1]);\r\n\r\n    const rollResult: IDamageRoll = { ...roll(amount, limit), rollType: ERollType.DAMAGE, ...weapon, damage };\r\n\r\n    sendMessage(discordServer, `attacks with ${weapon.name} `, getEmbedsForRollType(rollResult), username);\r\n\r\n    return rollResult\r\n}\r\n\r\nexport function rollInitAndSendToDiscord(discordServer: string, username: string, bonus: number, amount: number = 1, limit: number = 100): IRollResult {\r\n    const rollResult: IInitRoll = { ...roll(amount, limit), rollType: ERollType.INIT, bonus };\r\n\r\n    sendMessage(discordServer, \"rolled Init\", getEmbedsForRollType(rollResult), username);\r\n\r\n    return rollResult\r\n}\r\n\r\nexport function rollStatAndSendToDiscord(discordServer: string, username: string, characteristics: ICharacteristics, modifier: number = 0, amount: number = 1, limit: number = 100): IRollResult {\r\n    const rollResult: IStatRoll = { ...roll(amount, limit), rollType: ERollType.STAT, characteristics, modifier };\r\n    rollResult.result = rollResult.rollSum < characteristics.value + rollResult.modifier;\r\n\r\n    sendMessage(discordServer, `rolled for ${characteristics.name}`, getEmbedsForRollType(rollResult), username);\r\n\r\n    return rollResult\r\n}\r\n\r\nexport function rollAimAndSendToDiscord(discordServer: string, username: string, characteristics: ICharacteristics, modifier: number = 0, amount: number = 1, limit: number = 100): IStatRoll {\r\n    const rollResult: IStatRoll = { ...roll(amount, limit), rollType: ERollType.AIM, characteristics, modifier };\r\n    rollResult.result = rollResult.rollSum < characteristics.value + rollResult.modifier;\r\n\r\n    sendMessage(discordServer, `rolled for ${characteristics.name}`, getEmbedsForRollType(rollResult), username);\r\n\r\n    return rollResult\r\n}\r\n\r\n\r\nfunction getEmbedsForRollType(roll: IRollResult) {\r\n    const colorCodeRed = 14159922;\r\n    const colorCodeGreen = 4113681;\r\n\r\n    switch (roll.rollType) {\r\n        case ERollType.NONE: {\r\n            const rollResult = roll\r\n            return [{\r\n                fields: [\r\n                    { name: \"Roll\", value: `${rollResult.amount}d${rollResult.limit}`, inline: true },\r\n                    { name: \"Results\", value: `${rollResult.rolls}`, inline: true },\r\n                    { name: \"Sum\", value: `${rollResult.rollSum}`, inline: true },\r\n                ]\r\n            }]\r\n        }\r\n        case ERollType.INIT: {\r\n            const rollResult = roll as IInitRoll\r\n            return [{\r\n                fields: [\r\n                    { name: \"Roll\", value: `${rollResult.amount}d${rollResult.limit}`, inline: true },\r\n                    { name: \"Roll\", value: `${rollResult.rolls}`, inline: true },\r\n                    { name: \"Sum\", value: `${rollResult.rollSum} ${rollResult.bonus < 0 ? rollResult.bonus : `+ ${rollResult.bonus}`} = **${rollResult.rollSum + rollResult.bonus}**`, inline: true},\r\n                ]\r\n            }]\r\n        }\r\n        case ERollType.TEST: {\r\n            const rollResult = roll as ITestRoll;\r\n            const r = rollResult.result ? '>' : '<';\r\n            return [\r\n                {\r\n                    color: rollResult.result ? colorCodeGreen : colorCodeRed,\r\n                    fields: [\r\n                        { name: \"Roll\", value: `${rollResult.amount}d${ rollResult.limit }`, inline: true },\r\n                        { name: \"Results\", value: `${rollResult.rolls}`, inline: true },\r\n                        { name: \"Sum\", value: `${rollResult.rollSum}`, inline: true },\r\n                        { name: \"Stat\", value: `${rollResult.stat}`, inline: true },\r\n                        { name: \"Level\", value: `${rollResult.level}`, inline: true },\r\n                        { name: \"Sum\", value: `${rollResult.sum}`, inline: true },\r\n                        { name: \"**Result**\", value: `${rollResult.sum} ${r} ${rollResult.rollSum} = ${rollResult.result ? '**SUCCESS**' : '**FAILURE**'}` },\r\n\r\n                    ],\r\n                },\r\n            ]\r\n        }\r\n        case ERollType.DAMAGE: {\r\n            const rollResult = roll as IDamageRoll\r\n            return [\r\n                {\r\n                    fields: [\r\n                        { name: \"Roll\", value: `${rollResult.amount}d${ rollResult.limit }`, inline: true },\r\n                        { name: \"Results\", value: `${rollResult.rolls}`, inline: true },\r\n                        { name: \"Damage\", value: `${rollResult.damage}`, inline: true },\r\n                        { name: \"Sum\", value: `**${rollResult.rollSum + rollResult.damage}**`, inline: true },\r\n                        { name: \"Pen\", value: `${rollResult.pen}`, inline: true },\r\n                        { name: \"Type\", value: `${EDamageType[rollResult.type]}`, inline: true },\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n        case ERollType.STAT: {\r\n            const rollResult = roll as IStatRoll\r\n            const r = rollResult.result ? '>' : '<';\r\n            return [{\r\n                color: rollResult.result ? colorCodeGreen : colorCodeRed,\r\n                fields: [\r\n                    { name: \"Roll\", value: `${rollResult.amount}d${ rollResult.limit }`, inline: true },\r\n                    { name: \"Sum\", value: `${rollResult.rollSum}`, inline: true },\r\n                    { name: \"Stat\", value: `${rollResult.characteristics.value} ${rollResult.modifier < 0 ? rollResult.modifier : `+${rollResult.modifier}`}`, inline: true },\r\n                    { name: \"**Result**\",value: `${rollResult.characteristics.value + rollResult.modifier} ${r} ${rollResult.rollSum} = ${rollResult.result ? '**SUCCESS**' : '**FAILURE**'}` },\r\n                ]\r\n            }]\r\n        }\r\n        case ERollType.AIM: {\r\n            const rollResult = roll as IStatRoll\r\n            const r = rollResult.result ? '>' : '<';\r\n            return [{\r\n                color: rollResult.result ? colorCodeGreen : colorCodeRed,\r\n                fields: [\r\n                    { name: \"Roll\", value: `${rollResult.amount}d${ rollResult.limit }`, inline: true },\r\n                    { name: \"Sum\", value: `${rollResult.rollSum}`, inline: true },\r\n                    { name: \"Stat\", value: `${rollResult.characteristics.value} ${rollResult.modifier < 0 ? rollResult.modifier : `+${rollResult.modifier}`}`, inline: true },\r\n                    { name: \"**Result**\",value: `${rollResult.characteristics.value + rollResult.modifier} ${r} ${rollResult.rollSum} = ${rollResult.result ? '**SUCCESS**' : '**FAILURE**'}` },\r\n                    { name: \"Hit Location\", value: `${getHitLocation(rollResult.rollSum)}` },\r\n                ]\r\n            }]\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction sendMessage(discord: string, message: string, embeds: any, username?: string) {\r\n    console.log(JSON.stringify({\r\n        username: username,\r\n        content: message,\r\n        embeds: embeds\r\n    }));\r\n    fetch(discord,\r\n        {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                username: username,\r\n                content: message,\r\n                embeds: embeds\r\n            })\r\n        });\r\n\r\n}\r\n\r\nexport function getRndInteger(min: number, max: number) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction roll(amount: number, limit: number): IRollResult {\r\n    const rollResult: ITestRoll = { rollType: ERollType.NONE, rolls: [], rollSum: 0, amount, limit };\r\n    for (let count = 0; count < rollResult.amount; count++) {\r\n        const roll = getRndInteger(0, rollResult.limit);\r\n        rollResult.rolls[count] = roll;\r\n        rollResult.rollSum += roll;\r\n    }\r\n    return rollResult\r\n}\r\n\r\n\r\nfunction rollTest(characteristics: number, amount: number, limit: number, bonus: number, skill?: ISkill): IRollResult {\r\n    const rollResult: ITestRoll = roll(amount, limit);\r\n    rollResult.rollType = ERollType.TEST\r\n\r\n    rollResult.stat = characteristics + bonus + (skill?.bonus ? skill?.bonus : 0);\r\n    rollResult.level = skill ? (skill.level === 0 ? -20 : (skill.level - 1) * 10) : 0\r\n    rollResult.sum = rollResult.level + rollResult.stat;\r\n    rollResult.result = rollResult.rollSum - rollResult.sum < 0\r\n\r\n    return rollResult\r\n}\r\n\r\n\r\n","import { Badge, Button, Card, Col, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\r\nimport { ISpell } from \"./armourySlice\";\r\nimport { FaDiceD20, FcElectricity, GiArrowScope, GiShieldImpact, RiFocus3Line } from \"react-icons/all\";\r\nimport React from \"react\";\r\nimport { rollDamageAndSendToDiscord } from \"../character/Rolls\";\r\nimport { useAppSelector } from \"../../general/hooks\";\r\n\r\n\r\nexport const SpellCard = ({ spell }: { spell: ISpell }) => {\r\n\r\n    const character = useAppSelector(state => state.character);\r\n\r\n    return <Card>\r\n        <Card.Header>\r\n            <OverlayTrigger\r\n                key={`spellCardTooltip-${spell.name}`}\r\n                overlay={\r\n                    <Tooltip\r\n                        id={`tooltip-${spell.name}`}>{spell.description ? spell.description : \"Add description\"}</Tooltip>\r\n                }>\r\n                <div>\r\n                    <FcElectricity/>{spell.name}\r\n                </div>\r\n            </OverlayTrigger>\r\n        </Card.Header>\r\n        <Card.Body>\r\n            <Row>\r\n                <Col>{spell.damage} <Badge pill={true} variant={\"secondary\"}> <GiShieldImpact/> {spell.pen} </Badge> </Col>\r\n                <Col> <GiArrowScope/> {spell.range} </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col><RiFocus3Line/> {spell.focusPower}</Col>\r\n                <Col>Sustained: {spell.sustained ? \"Yes\" : \"No\"}</Col>\r\n            </Row>\r\n\r\n            <Col>\r\n                <Button size=\"sm\" variant=\"light\"\r\n                        onClick={() => rollDamageAndSendToDiscord(character.discord[character.discord.active], character.characterName, spell)}>\r\n                    <FaDiceD20 color={\"darkred\"}\r\n                               style={{ cursor: \"pointer\" }}\r\n                    /> Damage\r\n                </Button>\r\n            </Col>\r\n\r\n        </Card.Body>\r\n    </Card>\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { EGods, godStringMap } from \"../talents/talentSlice\";\r\nimport { ETabNames } from \"./ETabNames\";\r\n\r\ninterface ICharacterState {\r\n    characterName: string,\r\n    devotion?: EGods,\r\n    discord: {\r\n        active: string,\r\n        prod: string,\r\n        debug: string,\r\n        [key: string]: string,\r\n    }\r\n    layout: {\r\n        left: number[],\r\n        main: number[],\r\n        right: number[],\r\n        [key: string]: number[]\r\n    },\r\n}\r\n\r\nexport const characterSlice = createSlice({\r\n    name: 'character',\r\n    initialState: {\r\n        characterName: 'Character Name',\r\n        discord: {\r\n            active: 'prod',\r\n            prod: '',\r\n            debug: '',\r\n\r\n        },\r\n        layout: {\r\n            left: [ETabNames.SEARCH],\r\n            main: [ETabNames.CHARACTERISTICS, 1, 2, 3, 4, 5],\r\n            right: [ETabNames.EXPERIENCE]\r\n        },\r\n    } as ICharacterState,\r\n    reducers: {\r\n        importCharacter: (state, action) => {\r\n            const { characterName, discord, layout, devotion } = action.payload\r\n            state.characterName = characterName;\r\n            state.discord = discord;\r\n            state.layout = layout;\r\n            state.devotion = devotion;\r\n        },\r\n        setCharacterName: (state, action) => {\r\n            state.characterName = action.payload;\r\n        },\r\n        setDiscordServer: (state, action) => {\r\n            state.discord.prod = action.payload\r\n        },\r\n        setDiscordServerDebug: (state, action) => {\r\n            state.discord.debug = action.payload\r\n        },\r\n        setDiscordActive: (state, action) => {\r\n            state.discord.active = action.payload\r\n        },\r\n        setDevotion: (state, action: PayloadAction<string>) => {\r\n            state.devotion = godStringMap[action.payload]\r\n        },\r\n        setLayout: (state, action) => {\r\n            console.log(action.payload)\r\n            state.layout = action.payload\r\n        },\r\n        changeLayout: (state, action: PayloadAction<{field: string, index: number}>) => {\r\n            const {field, index} = action.payload;\r\n\r\n            if (state.layout.left.indexOf(index) >= 0) { state.layout.left.splice(state.layout.left.indexOf(index), 1) }\r\n            if (state.layout.main.indexOf(index) >= 0) { state.layout.main.splice(state.layout.main.indexOf(index), 1) }\r\n            if (state.layout.right.indexOf(index) >= 0) { state.layout.right.splice(state.layout.right.indexOf(index), 1) }\r\n\r\n            state.layout[field].push(index);\r\n            state.layout[field].sort();\r\n\r\n        }\r\n    },\r\n});\r\n\r\nexport const { importCharacter, setCharacterName, setDiscordActive, setDiscordServer, setDiscordServerDebug, setDevotion, setLayout, changeLayout } = characterSlice.actions\r\nexport default characterSlice.reducer\r\n","import { Badge, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { useAppSelector } from \"../../general/hooks\";\r\nimport React from \"react\";\r\nimport { ITalent } from \"./talentSlice\";\r\n\r\n\r\nexport const TalentEntryFunction = ({\r\n                                        name = 'TALENTNAME',\r\n                                        setActiveTalent\r\n                                    }: { name: string, setActiveTalent: React.Dispatch<React.SetStateAction<ITalent>> }) => {\r\n    const talents = useAppSelector(state => state.talents);\r\n    // const dispatch = useAppDispatch()\r\n\r\n    const talent = talents[name];\r\n\r\n    function getTierDescription(tier: number) {\r\n        switch (tier) {\r\n            case -2: return \"Reward\";\r\n            case -1: return \"Gift\";\r\n            case 0: return \"Trait\";\r\n            default: return `T${tier}`;\r\n        }\r\n    }\r\n\r\n    return <OverlayTrigger\r\n        key={`talent-${talent.name}`}\r\n        placement={'bottom'}\r\n        overlay={\r\n            <Tooltip id={`tooltip-${talent.name}`}>\r\n                {talent.description}\r\n            </Tooltip>\r\n        }\r\n    >\r\n        <div onClick={() => setActiveTalent(talent)}>\r\n            <Badge>{`${getTierDescription(talent.tier)} ${talent.name}${talent.specialization ? ` (${talent.specialization})` : ''}`}</Badge>\r\n\r\n            {/*{talent.tier === 0*/}\r\n            {/*    ? <Badge>{`Trait ${talent.name}${talent.specialization ? ` (${talent.specialization})` : ''}`}</Badge>*/}\r\n            {/*    : talent.tier === -1 ? <Badge>{`Gift ${talent.name}${talent.specialization ? ` (${talent.specialization})` : ''}`}</Badge>*/}\r\n            {/*        : <Badge>{`T${talent.tier} ${talent.name}${talent.specialization ? ` (${talent.specialization})` : ''}`}</Badge>*/}\r\n            {/*}*/}\r\n        </div>\r\n    </OverlayTrigger>\r\n\r\n}\r\n","import { WeaponCard } from \"./weaponCard\";\r\nimport {\r\n    Badge,\r\n    Button,\r\n    Card,\r\n    Col,\r\n    Dropdown,\r\n    DropdownButton,\r\n    FormControl,\r\n    FormGroup,\r\n    FormLabel,\r\n    OverlayTrigger,\r\n    ProgressBar,\r\n    Row,\r\n    Tooltip\r\n} from \"react-bootstrap\";\r\nimport React, { useState } from \"react\";\r\nimport \"./armoury.scss\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\nimport { addItem } from \"../inventory/inventorySlice\";\r\nimport { ISpell, IWeapon, removeGear, setMaxWounds, setWounds } from \"./armourySlice\";\r\nimport { SpellCard } from \"./spellCard\";\r\nimport { BiTargetLock, FaDiceD20, IoReloadCircle } from \"react-icons/all\";\r\nimport { rollInitAndSendToDiscord } from \"../character/Rolls\";\r\nimport { EItemCategory } from \"../character/EItemCategory\";\r\nimport { addTalent, EGods } from \"../talents/talentSlice\";\r\nimport { setDevotion } from \"../character/characterSlice\";\r\nimport { TalentEntryFunction } from \"../talents/talentEntry\";\r\nimport { allTalents } from \"../character/resources\";\r\n\r\nexport const Armoury = () => {\r\n\r\n    const imageHead = 'data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%20style%3D%22height%3A%20512px%3B%20width%3A%20512px%3B%22%3E%3Cpath%20d%3D%22M0%200h512v512H0z%22%20fill%3D%22%23000%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3Cg%20class%3D%22%22%20transform%3D%22translate(0%2C0)%22%20style%3D%22%22%3E%3Cpath%20d%3D%22M257.375%2032.03C139.957%2087.197%2042.343%20247.886%2017.5%20367.75c71.742%200%20124.22%2022.845%20162.094%2063.03l10.47-11.436c-28.06-28.873-64.935-52.446-113.564-75.906%2026.142-65.033%2066.028-163.458%20116.72-169.188%2019.835-2.243%2041.05%209.735%2064.155%2043.438%2072.33-120.27%20141.014%2038.54%20180.875%20125.75-47.687%2025.854-84.5%2049.463-112.97%2078.718l9.25%2010.406c37.335-39.758%2089.657-64.812%20162.72-64.812C467.784%20249.384%20377.24%2090.37%20257.375%2032.03zm-79.72%20243.314c-15.3-.083-26.405%206.436-26.405%2016.656%200%2012.58%2016.834%2026.038%2037.594%2030.063%2020.76%204.024%2037.594-2.92%2037.594-15.5s-16.835-26.038-37.594-30.063c-3.893-.755-7.657-1.137-11.188-1.156zm156.345%200c-3.53.02-7.295.4-11.188%201.156-20.76%204.025-37.593%2017.483-37.593%2030.063%200%2012.58%2016.833%2019.524%2037.592%2015.5%2020.76-4.025%2037.594-17.484%2037.594-30.063%200-10.22-11.105-16.74-26.406-16.656z%22%20fill%3D%22%23fff%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3C%2Fg%3E%3C%2Fsvg%3E';\r\n    const imageBody = 'data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%20style%3D%22height%3A%20512px%3B%20width%3A%20512px%3B%22%3E%3Cpath%20d%3D%22M0%200h512v512H0z%22%20fill%3D%22%23000%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3Cg%20class%3D%22%22%20transform%3D%22translate(-1%2C-7)%22%20style%3D%22%22%3E%3Cpath%20d%3D%22M208%2056.643l-16%2064-98.568%2014.082L256%20175.365l162.568-40.64L320%20120.643l-16-64-27.268%2018.18-12.002%2048.003h-17.46l-12.002-48.004zm-138.621%2090.62L16%20200.644l48%2064%2025.77-25.77%2026.619-79.857zm373.242%200l-47.01%2011.753%2026.62%2079.857L448%20264.643l48-64zm-308.717%2016.132l-20.123%2060.369%2013.81%2055.246L247%20345.348V191.67zm244.192%200L265%20191.67v153.678l119.408-66.338%2013.81-55.246zM144%20308.715v56.314l103%2030.627v-29.719zm224%200l-103%2057.223v29.718l103-30.627zm-224%2075.54v56.388l103%2014.714V414.88zm224%200L265%20414.88v40.478l103-14.714z%22%20fill%3D%22%23fff%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3C%2Fg%3E%3C%2Fsvg%3E';\r\n    const imageArmL = 'data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%20style%3D%22height%3A%20512px%3B%20width%3A%20512px%3B%22%3E%3Cpath%20d%3D%22M0%200h512v512H0z%22%20fill%3D%22%23000%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3Cg%20class%3D%22%22%20transform%3D%22translate(-1%2C-7)%22%20style%3D%22%22%3E%3Cpath%20d%3D%22M256%2026C192%2058%20112%2080%2032%2080c0%2046.047%204.726%2089.503%2013.02%20129.69%2025.495-2.558%2053.13-2.433%2081.86-1.06l-7.61-30.446-2.022-8.086%2065.898-21.967%2010.866%2065.194c28.32%202.336%2056.907%204.82%2084.9%206.238%2014.357-4.67%2028.073-8.33%2040.43-14.36l7.78-46.682%201.732-10.39%2065.898%2021.968-9.578%2038.316c9.207%204.926%2020.403%2014.91%2023.97%2022.346%203.352%207.302%202.696%2015.333.256%2024.154%202.27%206.21%202.31%2012.947.43%2019.287-1.65%205.57-4.95%2010.974-9.844%2014.974.41%2010.106-5.414%2019.52-14.597%2023.353-5.045%2010.42-15.085%2022.05-25.146%2025.678a35.325%2035.325%200%200%201-7.943%201.7l-10.29%2041.16-47.98-23.99%207.107-42.647c-7.178-2.867-14.753-6.176-23.147-9.758-22.506%202.868-45.05%205.7-67.385%208.213l7.366%2044.193-47.98%2023.99-15.668-62.668c-25.372%202.034-50.16%203.29-73.943%203.288C126.423%20426.23%20197.21%20490%20256%20490c96%200%20224-170%20224-410-80%200-160-22-224-54zm-87.146%20145.87l-30.102%2010.034%2043.258%20173.028%2016.02-8.008-29.176-175.055zm174.292%200l-3.927%2023.562c9.757-4.082%2021.374-8.826%2031.514-3.473l2.514-10.058-30.102-10.033zm17.692%2035.696c-5.508.754-15.244%204.655-25.35%209.72-18.843%2011.052-35.297%2013.47-53.963%2020.448-29.314-1.518-59.264-3.89-84.43-5.912l10.538%2063.23c25.773-2.928%2050.59-5.99%2072.93-8.845%208.035%203.372%2016.415%207.06%2023.603%2010.05l5.156-30.943-.492-16.046c31.396-.965%2040.955-17.8%2046.625-26.14%202.25-3.306%204.94-9.64%205.424-13.554.162-1.32.03-1.567-.042-2.008zm14.598%2016.305c-2.703%205.724-5.283%209.687-7.97%2014.567%207.198%203.907%2015.487%205.786%2025.923%206.215.426-2.995.116-4.813-.605-6.382-1.195-2.604-5.27-6.648-13.826-12.715-1.51-.91-2.674-1.404-3.524-1.684zm-284.63%202.026c-22.55-.09-43.69%201.063-62.732%204.256-10.604%2021.43-9.975%2044.448%201.57%2071.08%2036.332%203.616%2077.178%202.643%20120.223-.662l-18.35-73.406c-13.955-.738-27.575-1.215-40.71-1.268zm263.41%2025.303a71.374%2071.374%200%200%201-5.972%204.34c2.293%209.34%2010.7%2011.83%2019.822%2013.91%207.76%201.73%2016.358%202.576%2023.13%202.802a14.133%2014.133%200%200%200%201.376-3.166c.653-2.202.702-4.555.38-6.48-14.655-.713-27.626-4.258-38.737-11.407zm-21.835%2012.025a73.26%2073.26%200%200%201-4.694%201.41l-2.053%2012.32a25.18%2025.18%200%200%201%208.056-10.383%2031.58%2031.58%200%200%201-1.31-3.347zm12.872%2017.345c-1.468.894-2.713%202.34-3.195%203.817-.638%201.953-1.09%203.368%201.755%205.533%203.645%202.138%209.51%204.437%2015.745%205.613%205.123.967%2010.54%201.276%2014.804%201.205l2.876-.467c1.974-.318%204.624-3.515%204.752-6.553-5.69-.506-11.804-1.355-17.836-2.7-6.592-1.47-13.14-3.327-18.9-6.447zm-21.23%206.04l-10.05%2060.314%2016.018%208.008%204.72-18.88c-9.425-5.795-14.6-14.962-14.468-23.888.085-5.812%202.58-11.444%206.653-15.617-1.686-3.174-2.65-6.586-2.872-9.936zm15.933%2021.91c-1.2.71-1.687%202-1.715%203.908-.04%202.678%201.262%206.588%208.574%209.61.664.133%203.335.59%207.618-.87%202.824-.963%206.072-2.797%209.226-6.81a108.078%20108.078%200%200%201-7.44-1.137c-5.542-1.045-11.13-2.444-16.263-4.7z%22%20fill%3D%22%23fff%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3C%2Fg%3E%3C%2Fsvg%3E';\r\n    const imageArmR = 'data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%20style%3D%22height%3A%20512px%3B%20width%3A%20512px%3B%22%3E%3Cpath%20d%3D%22M0%200h512v512H0z%22%20fill%3D%22%23000%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3Cg%20class%3D%22%22%20transform%3D%22translate(0%2C-6)%22%20style%3D%22%22%3E%3Cpath%20d%3D%22M122.1%2017.52L186.6%20161l104.5-44.9-44.5-98.58h-51.1l35.8%2080.75-16.4%207.23-39-87.98zm265.2%2077.75L110.4%20215.2l12%2028.2%20278.1-119.8zm-69.7%2098.53l-23.9%2011.5c12.8%205.4%2026%2013.7%2038.3%2015.6%2018.1-13.1-4.9-30.5-14.4-27.1zm-60.7%2011.1l-36.2%2016.7c-11.9%2018.4-14.8%2046-18.2%2069.7%2020.6%2030.1%2030.5%2062.4%2039.5%2094%2017.9-3.7%2032.2-6.8%2048.7-11.5-24.4-38.7-42.2-78.4-53.6-118.9%200%200%205.6-10.5%208.4-15.8%2011.9%207.3%2024.9%2012.4%2036.6%209.9%2010-4.1%2021.5-7.9%2027.7-16.6-17.6-6.9-37.1-17.5-52.9-27.5zm92.6%2026.6c-10.8%205.8-23%2011.2-31.9%2018.9-5.3%204.7-12.1%208.8-20.5%2012.3%201.1%207.3-.1%2019.6%208.1%2018.8%2020.5-6.2%2040.5-15%2059.7-28.4-.1-9.2-8-24.1-15.4-21.6zm-90.2%2034.2c11.3%2034.8%2027.6%2069%2049.3%20102.6%204.7-1.6%209.3-3.3%2013.5-5-7.3-6.2-11.7-15.9-12-25.3-16.6-4.1-20.8-29.4-17.2-41.6-9.5-7-13.6-18.1-14.2-28.7-7.2.7-13.6-.1-19.4-2zm103.3%2010.4c-13.6%208.1-27.6%2014.3-41.6%2019.2l-9%204.4c-4.4%204.6-4.5%2015.6%201%2020.3%209.7%203.5%2050.1-21.2%2057.7-27.9%201.3-5.8-3.5-14.9-8.1-16zm-178.1%2021.2L19.1%20335.8V495c95.7-25.3%20146.9-47.1%20209.7-90.2-10.8-38-20.5-74.8-44.3-107.5zm187.8%2016.9c-13.6%2010.2-27.2%2016.2-42.9%2021.4-.4%206.7%202.5%2018.1%2012.1%2016%2019.9-4.3%2036.3-17.5%2036.6-24.6.2-3.7-2-10.5-5.8-12.8zm-7.5%2048.6c-14.3%208.2-31.5%2015.9-46.7%2021.4l18.7%2031.8%2039.3-18.8zm22.2%2049.1L342.9%20433l3.1%2021.9c15.1.5%2046.6-11.3%2055.4-26.1v-.1z%22%20fill%3D%22%23fff%22%20fill-opacity%3D%221%22%20transform%3D%22translate(512%2C%200)%20scale(-1%2C%201)%20rotate(0%2C%20256%2C%20256)%20skewX(0)%20skewY(0)%22%3E%3C%2Fpath%3E%3C%2Fg%3E%3C%2Fsvg%3E';\r\n    const imageLegR = 'data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%20style%3D%22height%3A%20512px%3B%20width%3A%20512px%3B%22%3E%3Cpath%20d%3D%22M0%200h512v512H0z%22%20fill%3D%22%23000%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3Cg%20class%3D%22%22%20transform%3D%22translate(0%2C0)%22%20style%3D%22%22%3E%3Cpath%20d%3D%22M269%2023.95l-87.7.1c1.1%2061.4-2.4%20116.05-14%20159.45-9%2034-23.6%2061.6-45.2%2079-.1%209.5-.8%2019-2.1%2028.6-3.1%2022.9-13.5%2043.2-22.75%2065%2023.55-1.3%2043.55-11.6%2065.35-24.8%2020.6-12.5%2042.4-27.5%2068.9-37.8-.2-1.4-.4-2.9-.4-4.2-1.9-23.7.1-52.2%204.1-83.2C243%20147.6%20257.9%2081.05%20269%2023.95zm-105.7.1H80.65c-1.6%2036.5%2010.1%2076.15%2021.65%20119.15%208.3%2030.4%2016.5%2062.3%2019%2095.7%2012.6-14.3%2021.8-34.4%2028.6-60%2010.8-40.6%2014.4-94.15%2013.4-154.85zm41.8%2014.9a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm-2.4%2052.5a9%209%200%200%201%20.1%200%209%209%200%200%201%209%208.95%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-8.95zm-5.9%2056.25a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm-16%2060.6a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm-32%2048.1a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm85.7%2055.3c-22.6%209.6-42.3%2022.9-62.6%2035-24.6%2014.9-50.5%2027.9-81.85%2027.5-8.2%2022.7-13.8%2048-10%2079.9h82.35c13.2-41.4%2042.9-78%2095.1-106.8-1.4-1-2.9-2.1-4.3-3.2-9.6-7.6-15.3-18.8-18.7-32.4zm40.2%2046.7c-52.1%2026.2-80.4%2058.5-93.6%2095.7h127.4c0-14.3.6-29%203.9-43.6%202.6-11.5%207-22.9%2014-33.9-16.1-3.3-33.5-8.1-51.7-18.2zm70.8%2021.8c-8.2%2010.9-12.8%2022.3-15.5%2034.3-2.8%2012.5-3.5%2025.8-3.5%2039.6h104c-2-17.8-12.5-39.8-28.1-52.1-17.8-13.9-36-17.9-56.9-21.8zm8.3%2010.5a9%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%209-9zm-254.05%2035a9%209%200%200%201%20.1%200%209%209%200%200%201%208.95%209%209%209%200%200%201-8.95%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm44.85.6a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm201.5.1a9%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%209-9zM72.05%20470v18.1H440V470z%22%20fill%3D%22%23fff%22%20fill-opacity%3D%221%22%20transform%3D%22translate(512%2C%200)%20scale(-1%2C%201)%20rotate(0%2C%20256%2C%20256)%20skewX(0)%20skewY(0)%22%3E%3C%2Fpath%3E%3C%2Fg%3E%3C%2Fsvg%3E';\r\n    const imageLegL = 'data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%20style%3D%22height%3A%20512px%3B%20width%3A%20512px%3B%22%3E%3Cpath%20d%3D%22M0%200h512v512H0z%22%20fill%3D%22%23000%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3Cg%20class%3D%22%22%20transform%3D%22translate(0%2C0)%22%20style%3D%22%22%3E%3Cpath%20d%3D%22M269%2023.95l-87.7.1c1.1%2061.4-2.4%20116.05-14%20159.45-9%2034-23.6%2061.6-45.2%2079-.1%209.5-.8%2019-2.1%2028.6-3.1%2022.9-13.5%2043.2-22.75%2065%2023.55-1.3%2043.55-11.6%2065.35-24.8%2020.6-12.5%2042.4-27.5%2068.9-37.8-.2-1.4-.4-2.9-.4-4.2-1.9-23.7.1-52.2%204.1-83.2C243%20147.6%20257.9%2081.05%20269%2023.95zm-105.7.1H80.65c-1.6%2036.5%2010.1%2076.15%2021.65%20119.15%208.3%2030.4%2016.5%2062.3%2019%2095.7%2012.6-14.3%2021.8-34.4%2028.6-60%2010.8-40.6%2014.4-94.15%2013.4-154.85zm41.8%2014.9a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm-2.4%2052.5a9%209%200%200%201%20.1%200%209%209%200%200%201%209%208.95%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-8.95zm-5.9%2056.25a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm-16%2060.6a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm-32%2048.1a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm85.7%2055.3c-22.6%209.6-42.3%2022.9-62.6%2035-24.6%2014.9-50.5%2027.9-81.85%2027.5-8.2%2022.7-13.8%2048-10%2079.9h82.35c13.2-41.4%2042.9-78%2095.1-106.8-1.4-1-2.9-2.1-4.3-3.2-9.6-7.6-15.3-18.8-18.7-32.4zm40.2%2046.7c-52.1%2026.2-80.4%2058.5-93.6%2095.7h127.4c0-14.3.6-29%203.9-43.6%202.6-11.5%207-22.9%2014-33.9-16.1-3.3-33.5-8.1-51.7-18.2zm70.8%2021.8c-8.2%2010.9-12.8%2022.3-15.5%2034.3-2.8%2012.5-3.5%2025.8-3.5%2039.6h104c-2-17.8-12.5-39.8-28.1-52.1-17.8-13.9-36-17.9-56.9-21.8zm8.3%2010.5a9%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%209-9zm-254.05%2035a9%209%200%200%201%20.1%200%209%209%200%200%201%208.95%209%209%209%200%200%201-8.95%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm44.85.6a9%209%200%200%201%20.1%200%209%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%208.9-9zm201.5.1a9%209%200%200%201%209%209%209%209%200%200%201-9%209%209%209%200%200%201-9-9%209%209%200%200%201%209-9zM72.05%20470v18.1H440V470z%22%20fill%3D%22%23fff%22%20fill-opacity%3D%221%22%3E%3C%2Fpath%3E%3C%2Fg%3E%3C%2Fsvg%3E';\r\n\r\n    const infamyStat = useAppSelector(state => state.characteristics['INF']);\r\n    const toughnessStat = useAppSelector(state => state.characteristics[\"T\"]);\r\n    const agilityStat = useAppSelector(state => state.characteristics[\"AG\"]);\r\n    const armouryState = useAppSelector(state => state.armoury);\r\n    const character = useAppSelector(state => state.character);\r\n    const talents = useAppSelector(state => state.talents)\r\n    const experience = useAppSelector(state => state.experience)\r\n    const dispatch = useAppDispatch()\r\n\r\n    const [agilityBonus, setAgilityBonus] = useState(2);\r\n\r\n    const agility = Math.floor(agilityStat.value / 10 + agilityStat.bonus + agilityBonus);\r\n    const armour = armouryState.armour;\r\n    const maxHealth = armouryState.character.maxWounds;\r\n    const maxInfamy: number = Math.floor(infamyStat.value / 10 + infamyStat.bonus);\r\n    const maxFatigue: number = Math.floor(toughnessStat.value / 10 + toughnessStat.bonus);\r\n\r\n    const [infamy, setInfamy] = useState(maxInfamy);\r\n    const [fatigue, setFatigue] = useState(0);\r\n    const [showTarget, setShowTarget] = useState(true);\r\n    const [maxWoundsEditable, setMaxWoundsEditable] = useState(false)\r\n\r\n    const health = armouryState.character.currentWounds;\r\n\r\n    function calcWoundLabel() {\r\n        const heavilyWounded = (health > (toughnessStat.value / 10 + toughnessStat.bonus) * 2) ? \"Heavy Wounded - \" : \"\";\r\n        return `${heavilyWounded}${health > maxHealth ? `CRIT: ${health - maxHealth}` : `${health}/${maxHealth}`}`;\r\n    }\r\n\r\n    const dropItems = [<Dropdown.Header key={`init-modifier-header`}>Init Modifier</Dropdown.Header>];\r\n    for (let i = 10; i > -10; i -= 1) {\r\n        dropItems.push(<Dropdown.Item key={`init-modifier-${i}`} onClick={() => setAgilityBonus(i)}>{i}</Dropdown.Item>);\r\n    }\r\n\r\n    function resetDevotion() {\r\n        const h = Object.entries(calcDevotion())\r\n            .filter(value => value[0] !== \"Unaligned\")\r\n            .sort((a, b) =>  b[1] - a[1])\r\n        ;\r\n\r\n        // If the highest devotion is 5 greater than the second the character is aligned\r\n        if (h[0][1] - h[1][1] >= 5) {\r\n            dispatch(setDevotion(h[0][0]))\r\n            if (h[0][1] >= 20) {\r\n                console.log(\"ADD MARK\")\r\n                switch (h[0][0]) {\r\n                    case EGods.KHORNE: dispatch(addTalent(allTalents[\"Mark of Khorne\"])); break;\r\n                    case EGods.NURGLE: dispatch(addTalent(allTalents[\"Mark of Nurgle\"])); break;\r\n                    default: return;\r\n                }\r\n                // Todo add Mark of God\r\n            }\r\n        } else {\r\n            dispatch(setDevotion(\"Unaligned\"))\r\n            // Todo remove mark of god\r\n        }\r\n    }\r\n\r\n    function calcDevotion() {\r\n        const counts = {\r\n            [EGods.UNALIGNED]: 0,\r\n            [EGods.SPECIAL]: 0,\r\n            [EGods.KHORNE]: 0,\r\n            [EGods.SLAANESH]: 0,\r\n            [EGods.TZEENTCH]: 0,\r\n            [EGods.NURGLE]: 0,\r\n        }\r\n        Object.values(talents).flatMap(t =>  t.devotion)\r\n            .filter((v => v))\r\n            .forEach(value => counts[value]++);\r\n        experience.entries.filter(v => v.devotion).forEach(e => {if (e.type === \"CHAR\" || e.type === \"SPELL\") { counts[e.devotion]++ }});\r\n        return counts;\r\n    }\r\n\r\n    return <div>\r\n        <Row>\r\n            <Col>\r\n                <h3>Armoury</h3>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col>\r\n                {/* BEGIN WEAPONS*/}\r\n                <Row>\r\n                    <Col>\r\n                        {Object.values(armouryState.weapons).map(((weapon) =>\r\n                                <div key={`wp-${weapon.name}`}>\r\n                                    {weapon.category === EItemCategory.WEAPON ? <WeaponCard weapon={weapon as IWeapon}/>\r\n                                        : weapon.category === EItemCategory.SPELL ?\r\n                                            <SpellCard spell={weapon as ISpell}/> : <></>\r\n                                    }\r\n                                </div>\r\n                        ))}\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col>\r\n                <Row>\r\n                    <Col md={5}>\r\n                        {Object.values(armouryState.gear).map(gear => (\r\n                            <Row key={`gear-${gear.name}`}>\r\n                                <Col md={10}>{gear.name}</Col>\r\n                                <Col md={2}> <Badge variant={'danger'} style={{ cursor: 'pointer' }}\r\n                                                    onClick={() => {\r\n                                                        dispatch(removeGear(gear));\r\n                                                        dispatch(addItem(gear))\r\n                                                    }}>-</Badge>\r\n                                </Col>\r\n                            </Row>\r\n                        ))}\r\n                    </Col>\r\n                    <Col md={{ span: 3 }}><Card> <Card.Img src={imageHead}/>\r\n                        <Card.ImgOverlay>\r\n                            <Badge className={\"armoury-badge\"} variant={\"secondary\"} pill>{armour.head}</Badge>\r\n                            {showTarget ? <Badge variant={\"dark\"}>(1-10)</Badge> : undefined}\r\n                        </Card.ImgOverlay></Card>\r\n                    </Col>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col>\r\n                                <Row>\r\n                                    <Button variant={showTarget ? \"primary\" : \"secondary\"} onClick={() => setShowTarget(!showTarget)}><BiTargetLock/>\r\n                                    </Button>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Button\r\n                                        onClick={() => rollInitAndSendToDiscord(character.discord[character.discord.active], character.characterName, agility, 1, 10)}\r\n                                        variant={\"light\"}><FaDiceD20 color={\"darkred\"} style={{ cursor: \"pointer\" }}/> Init\r\n                                    </Button>\r\n                                    <DropdownButton size=\"sm\" title={agilityBonus} variant={'secondary'}>\r\n                                        {dropItems}\r\n                                    </DropdownButton>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={{ offset: 2, span: 3 }}><Card> <Card.Img src={imageArmR}/>\r\n                        <Card.ImgOverlay>\r\n                            <Badge className={\"badge-armoury badge-secondary\"} pill>{armour.armR} </Badge>\r\n                            {showTarget ? <Badge variant={\"dark\"}>(11-20)</Badge> : undefined}\r\n                        </Card.ImgOverlay>\r\n                    </Card></Col>\r\n                    <Col md={{ span: 3 }}><Card> <Card.Img src={imageBody}/>\r\n                        <Card.ImgOverlay>\r\n                            <Badge className={\"armoury-badge\"} variant={\"secondary\"} pill>{armour.body}</Badge>\r\n                            {showTarget ? <Badge variant={\"dark\"}>(31-70)</Badge> : undefined}\r\n                        </Card.ImgOverlay>\r\n                    </Card></Col>\r\n                    <Col md={{ span: 3 }}><Card> <Card.Img src={imageArmL}/>\r\n                        <Card.ImgOverlay>\r\n                            <Badge className={\"armoury-badge\"} variant={\"secondary\"} pill>{armour.armL}</Badge>\r\n                            {showTarget ? <Badge variant={\"dark\"}>(21-30)</Badge> : undefined}\r\n                        </Card.ImgOverlay>\r\n                    </Card></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={{ offset: 3, span: 3 }}><Card> <Card.Img src={imageLegR}/>\r\n                        <Card.ImgOverlay>\r\n                            <Badge className={\"armoury-badge\"} variant={\"secondary\"} pill>{armour.legR}</Badge>\r\n                            {showTarget ? <Badge variant={\"dark\"}>(71-85)</Badge> : undefined}\r\n                        </Card.ImgOverlay>\r\n                    </Card></Col>\r\n                    <Col md={{ offset: 1, span: 3 }}><Card> <Card.Img src={imageLegL}/>\r\n                        <Card.ImgOverlay>\r\n                            <Badge className={\"armoury-badge\"} variant={\"secondary\"} pill>{armour.legL}</Badge>\r\n                            {showTarget ? <Badge variant={\"dark\"}>(86-100)</Badge> : undefined}\r\n                        </Card.ImgOverlay>\r\n                    </Card></Col>\r\n                </Row>\r\n\r\n                {/* WOUNDS */}\r\n                <Row>\r\n                    <Col md={2}>Wounds:</Col>\r\n                    <Col md={8}>\r\n                        {maxWoundsEditable ?\r\n                            <FormGroup as={Row}>\r\n                                <FormLabel column sm={5}>Max Wounds:</FormLabel>\r\n                                <Col sm={7}>\r\n\r\n                                    <FormControl value={maxHealth}\r\n                                                 onChange={(event) => dispatch(setMaxWounds(event.target.value))}\r\n                                                 onMouseLeave={() => setMaxWoundsEditable(false)}\r\n                                                 autoFocus/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            :\r\n                            <ProgressBar>\r\n                                <ProgressBar variant={\"danger\"} animated={health > maxHealth} now={health}\r\n                                             max={maxHealth}\r\n                                             label={health >= maxHealth / 2 ? calcWoundLabel() : undefined}\r\n                                             onClick={() => setMaxWoundsEditable(true)}/>\r\n                                <ProgressBar variant={\"secondary\"}\r\n                                             label={health < maxHealth / 2 ? calcWoundLabel() : undefined}\r\n                                             now={maxHealth + 10 - health} max={maxHealth + 10}\r\n                                             onClick={() => setMaxWoundsEditable(true)}/>\r\n                            </ProgressBar>\r\n                        }\r\n                    </Col>\r\n                    <Col md={2}>\r\n                        <div>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(setWounds(Math.max(health - 1, 0)))}>-</Badge>\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(setWounds(Math.min(health + 1, maxHealth + 10)))}>+</Badge>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* INFAMY */}\r\n                <Row>\r\n                    <Col md={2}>Infamy: </Col>\r\n                    <Col md={8}>\r\n                        <ProgressBar>\r\n                            <ProgressBar variant={\"success\"} now={infamy} max={maxInfamy}\r\n                                         label={`${infamy}/${maxInfamy}`}/>\r\n                            <ProgressBar variant={\"secondary\"} now={maxInfamy - infamy} max={maxInfamy}/>\r\n                        </ProgressBar>\r\n                    </Col>\r\n                    <Col md={2}>\r\n                        <div>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => setInfamy(infamy - 1)}>-</Badge>\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => setInfamy(Math.min(infamy + 1, maxInfamy))}>+</Badge>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* FATIGUE */}\r\n                <Row>\r\n                    <Col md={2}>Fatigue: </Col>\r\n                    <Col md={8}>\r\n                        <ProgressBar>\r\n                            <ProgressBar variant={\"warning\"} now={fatigue} max={maxFatigue}\r\n                                         label={`${fatigue}/${maxFatigue}`}/>\r\n                            <ProgressBar variant={\"secondary\"} now={maxFatigue - fatigue} max={maxFatigue}/>\r\n                        </ProgressBar>\r\n                    </Col>\r\n                    <Col md={2}>\r\n                        <div>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => setFatigue(fatigue - 1)}>-</Badge>\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => setFatigue(Math.min(fatigue + 1, maxFatigue))}>+</Badge>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* DEVOTION */}\r\n                <Row>\r\n                    <Col md={2}>Devotion:</Col>\r\n                    <Col md={2}>\r\n                        <OverlayTrigger\r\n                            overlay={\r\n                                <Tooltip id={`remove`}>\r\n                                    {JSON.stringify(Object.entries(calcDevotion()))}\r\n                                </Tooltip>\r\n                            }>\r\n                        <Badge pill style={{\r\n                        backgroundColor: 'brown',\r\n                        color: 'white'\r\n                    }}>{character.devotion ? character.devotion : EGods.UNALIGNED}</Badge>\r\n                        </OverlayTrigger>\r\n                    </Col>\r\n                    <Col md={2}><IoReloadCircle color={'green'} onClick={() => resetDevotion()}/> </Col>\r\n                </Row>\r\n\r\n                {/* MOVEMENT */}\r\n                <Row>\r\n                    <Col md={2}>Movement:</Col>\r\n                    <Col md={5}>\r\n                        <Row>\r\n                            <Col>HALF ({agilityStat.value / 10 + agilityStat.bonus}) </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>FULL ({(agilityStat.value / 10 + agilityStat.bonus) * 2}) </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col md={5}>\r\n                        <Row>\r\n                            <Col>CHARGE ({(agilityStat.value / 10 + agilityStat.bonus) * 3}) </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>RUN ({(agilityStat.value / 10 + agilityStat.bonus) * 4}) </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* Gift of the Gods */}\r\n                <Row>\r\n                    <Col>\r\n                        Gift of the Gods\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {Object.values(talents).filter(value => value.tier < 0)\r\n                        .map(value => <TalentEntryFunction key={`armoury-talent-entry-${value.name}`} {...value} setActiveTalent={() => null}/>)\r\n                    }\r\n                </Row>\r\n\r\n            </Col>\r\n\r\n        </Row>\r\n    </div>\r\n\r\n\r\n}\r\n\r\nexport function reverseNumber(value: number) {\r\n    const s = value.toString().length === 1 ? '0' + value.toString() : value.toString()\r\n\r\n    return parseInt(s.split(\"\").reverse().join(\"\"));\r\n}\r\n\r\nexport function getHitLocation(rollValue: number) {\r\n    const reverse = reverseNumber(rollValue);\r\n\r\n    if (reverse < 11) {\r\n        return \"Head\";\r\n    } else if (reverse < 21) {\r\n        return \"Right Hand\";\r\n    } else if (reverse < 31) {\r\n        return \"Left Hand\";\r\n    } else if (reverse < 71) {\r\n        return \"Body\";\r\n    } else if (reverse < 86) {\r\n        return \"Right Leg\";\r\n    } else {\r\n        return \"Left Leg\"\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Badge, Col, Container, Row } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\nimport { decrement, decrementBonus, increment, incrementBonus } from './characteristicsSlice'\r\nimport { rollStatAndSendToDiscord } from \"../character/Rolls\";\r\nimport { FaDiceD20 } from \"react-icons/all\";\r\n\r\nexport const CharacteristicsCounter = ({ short = '' }) => {\r\n    const [hideBtns, toggleBtns] = React.useState(true);\r\n\r\n    const characteristic = useAppSelector(state => state.characteristics[short]);\r\n    const character = useAppSelector(state => state.character);\r\n    const dispatch = useAppDispatch()\r\n\r\n\r\n    return <Container id={`stat-${characteristic.name}`} style={{ backgroundColor: \"lightgrey\", padding: 0 }}>\r\n        <Row onClick={() => toggleBtns(!hideBtns)}>\r\n            <Col>\r\n                <Badge variant=\"secondary\" pill style={{ cursor: 'pointer' }}>\r\n                    {characteristic.name}\r\n                </Badge>\r\n            </Col>\r\n        </Row>\r\n        <Row style={{ alignItems: 'stretch' }}>\r\n            <Col>\r\n                {!hideBtns\r\n                    ? <>\r\n                        <div>\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(incrementBonus(characteristic.short))}>+</Badge>\r\n                            <Badge variant={'secondary'}>\r\n                                {characteristic.bonus ? characteristic.bonus : 0}\r\n                            </Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(decrementBonus(characteristic.short))}>-</Badge>\r\n                        </div>\r\n                        <div>\r\n                            <Badge pill variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(increment(characteristic.short))}>+</Badge>\r\n                            <Badge\r\n                                variant={\"dark\"}\r\n                                pill\r\n                                onClick={() => toggleBtns(!hideBtns)}>\r\n                                {characteristic.value}\r\n                            </Badge>\r\n                            <Badge pill variant={'danger'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(decrement(characteristic.short))}>-</Badge>\r\n\r\n                        </div>\r\n                    </>\r\n                    : <>\r\n                        <FaDiceD20 onClick={() => rollStatAndSendToDiscord(character.discord[character.discord.active], character.characterName, characteristic)} color={\"darkred\"} style={{ cursor: \"pointer\" }}/>\r\n\r\n                        {characteristic.bonus ?\r\n                        <Badge variant={'secondary'}>\r\n                            {characteristic.bonus}\r\n                        </Badge>\r\n                        : <></>}\r\n                        <Badge\r\n                            variant={\"dark\"}\r\n                            pill\r\n                            onClick={() => toggleBtns(!hideBtns)}>\r\n                            {characteristic.value}\r\n                        </Badge>\r\n                    </>\r\n                }\r\n\r\n            </Col>\r\n        </Row>\r\n    </Container>;\r\n}\r\n","import { Badge, Card, Col, Row } from \"react-bootstrap\";\r\nimport { editArmour } from \"../inventory/inventorySlice\";\r\nimport React from \"react\";\r\nimport { IArmour } from \"./armourySlice\";\r\nimport { useAppDispatch } from \"../../general/hooks\";\r\n\r\n\r\nexport const ArmourCard = ({ armour }: { armour: IArmour }) => {\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    return <Card>\r\n        <Card.Header>\r\n            {armour.name}\r\n        </Card.Header>\r\n        <Card.Body>\r\n\r\n\r\n            <Row>\r\n                <Col>\r\n                    <Row>\r\n                        <Col>\r\n                            Head:\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(editArmour({\r\n                                       ...armour,\r\n                                       head: armour.head ? armour.head + 1 : 1\r\n                                   }))}>+</Badge>\r\n                            <Badge pill={true} variant={\"secondary\"}>  {armour.head ? armour.head : 0} </Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }} onClick={() => dispatch(editArmour({\r\n                                ...armour, head: armour.head ? Math.max(armour.head - 1, 0) : 0\r\n                            }))}>-</Badge>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Col>\r\n                <Col md={2}/>\r\n                <Col>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            Body:\r\n\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(editArmour({\r\n                                       ...armour,\r\n                                       body: armour.body ? armour.body + 1 : 1\r\n                                   }))}>+</Badge>\r\n                            <Badge pill={true} variant={\"secondary\"}>  {armour.body ? armour.body : 0} </Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }} onClick={() => dispatch(editArmour({\r\n                                ...armour, body: armour.body ? Math.max(armour.body - 1, 0) : 0\r\n                            }))}>-</Badge>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <Row>\r\n                        <Col>\r\n                            Left:\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(editArmour({\r\n                                       ...armour,\r\n                                       armL: armour.armL ? armour.armL + 1 : 1\r\n                                   }))}>+</Badge>\r\n                            <Badge pill={true} variant={\"secondary\"}>  {armour.armL ? armour.armL : 0} </Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }} onClick={() => dispatch(editArmour({\r\n                                ...armour, armL: armour.armL ? Math.max(armour.armL - 1, 0) : 0\r\n                            }))}>-</Badge>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Col>\r\n                <Col md={2}>Arm</Col>\r\n                <Col>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            Right:\r\n\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(editArmour({\r\n                                       ...armour,\r\n                                       armR: armour.armR ? armour.armR + 1 : 1\r\n                                   }))}>+</Badge>\r\n                            <Badge pill={true} variant={\"secondary\"}>  {armour.armR ? armour.armR : 0} </Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }} onClick={() => dispatch(editArmour({\r\n                                ...armour, armR: armour.armR ? Math.max(armour.armR - 1, 0) : 0\r\n                            }))}>-</Badge>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <Row>\r\n                        <Col>\r\n                            Left:\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(editArmour({\r\n                                       ...armour,\r\n                                       legL: armour.legL ? armour.legL + 1 : 1\r\n                                   }))}>+</Badge>\r\n                            <Badge pill={true} variant={\"secondary\"}>  {armour.legL ? armour.legL : 0} </Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }} onClick={() => dispatch(editArmour({\r\n                                ...armour, legL: armour.legL ? Math.max(armour.legL - 1, 0) : 0\r\n                            }))}>-</Badge>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Col>\r\n                <Col md={2}>Leg</Col>\r\n                <Col>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            Right:\r\n\r\n                            <Badge variant={'success'} style={{ cursor: 'pointer' }}\r\n                                   onClick={() => dispatch(editArmour({\r\n                                       ...armour,\r\n                                       legR: armour.legR ? armour.legR + 1 : 1\r\n                                   }))}>+</Badge>\r\n                            <Badge pill={true} variant={\"secondary\"}>  {armour.legR ? armour.legR : 0} </Badge>\r\n                            <Badge variant={'danger'} style={{ cursor: 'pointer' }} onClick={() => dispatch(editArmour({\r\n                                ...armour, legR: armour.legR ? Math.max(armour.legR - 1, 0) : 0\r\n                            }))}>-</Badge>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Card.Body>\r\n    </Card>;\r\n}\r\n","import {\r\n    Button,\r\n    ButtonGroup,\r\n    ButtonToolbar,\r\n    Col,\r\n    Dropdown,\r\n    FormControl,\r\n    InputGroup,\r\n    ListGroup,\r\n    Row,\r\n    Tab\r\n} from \"react-bootstrap\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\nimport React, { useState } from \"react\";\r\nimport { GearFill, Pencil, PlusCircle, ShieldFill } from \"react-bootstrap-icons\";\r\nimport {\r\n    addItemByName,\r\n    editCategory,\r\n    editDescription,\r\n    IInventory,\r\n    IItem,\r\n    importInventory,\r\n    removeItem,\r\n    TItem\r\n} from \"./inventorySlice\";\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport { allItems } from \"../character/resources\";\r\nimport { IArmour, ISpell, IWeapon, setGear, setWeapon } from \"../armoury/armourySlice\";\r\nimport { AiOutlineSortAscending, GiCrossedSwords, GiOrbWand } from \"react-icons/all\";\r\nimport { WeaponCard } from \"../armoury/weaponCard\";\r\nimport { ArmourCard } from \"../armoury/armourCard\";\r\nimport { SpellCard } from \"../armoury/spellCard\";\r\nimport { EItemCategory } from \"../character/EItemCategory\";\r\n\r\nexport const InventoryFunction = () => {\r\n    const [readonly, toggleReadonly] = useState(true);\r\n    const [newItem, setNewItem] = useState('');\r\n    const [activeFilter, setFilter] = useState('-');\r\n\r\n\r\n    const items = useAppSelector(state => state.inventory);\r\n    const armoury = useAppSelector(state => state.armoury)\r\n    const dispatch = useAppDispatch()\r\n\r\n\r\n    const itemOptions = [];\r\n    for (const item in allItems) {\r\n        itemOptions.push(item);\r\n    }\r\n\r\n\r\n    function createListItems() {\r\n        const result: JSX.Element[] = [];\r\n        for (const name in items) {\r\n            if (EItemCategory.NONE === activeFilter || items[name].category === activeFilter)\r\n                result.push(<ListGroup.Item action href={`#link${name}`} key={`listitem-${name}`}>\r\n                    {name}\r\n                </ListGroup.Item>)\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function createTabPanes() {\r\n        const result: JSX.Element[] = [];\r\n\r\n        function getItemButton(item: TItem) {\r\n            switch (item.category) {\r\n                case EItemCategory.WEAPON:\r\n                    const weapon = item as IWeapon;\r\n                    return <Button\r\n                        disabled={!!armoury.weapons[weapon.name]}\r\n                        onClick={() => {\r\n                            dispatch(setWeapon(weapon))\r\n                            dispatch(removeItem(item))\r\n                        }}>Equip</Button>\r\n\r\n                case EItemCategory.ARMOUR:\r\n                    const armour = item as IArmour;\r\n                    return <Button\r\n                        disabled={!!armoury.gear[armour.name]}\r\n                        onClick={() => {\r\n                            dispatch(setGear(armour))\r\n                            dispatch(removeItem(item))\r\n                        }}>Equip</Button>\r\n\r\n                case EItemCategory.SPELL:\r\n                    const spell = item as ISpell;\r\n\r\n                    return <Button\r\n                        disabled={!!armoury.weapons[spell.name]}\r\n                        onClick={() => {\r\n                            dispatch(setWeapon(spell))\r\n                            dispatch(removeItem(item))\r\n                        }}>Equip</Button>\r\n\r\n                case EItemCategory.MISC:\r\n                case EItemCategory.NONE:\r\n                    return <Button onClick={() => dispatch(removeItem(item))}>USE</Button>\r\n            }\r\n\r\n\r\n            return undefined;\r\n        }\r\n\r\n\r\n        function getTypeCard(item: IItem) {\r\n            switch (item.category) {\r\n                case EItemCategory.WEAPON:\r\n                    return <Col><WeaponCard weapon={item as IWeapon} editMode={!readonly}/></Col>\r\n                case EItemCategory.ARMOUR:\r\n                    return <Col><ArmourCard armour={item as IArmour}/></Col>\r\n                case EItemCategory.SPELL:\r\n                    return <Col><SpellCard spell={item as ISpell}/></Col>\r\n            }\r\n        }\r\n\r\n        for (const name in items) {\r\n            const item: IItem = items[name];\r\n            result.push(<Tab.Pane eventKey={`#link${name}`} key={`tabpane-${name}`}>\r\n                <Row>\r\n                    <Col>\r\n                        {item.name} - Count: {item.count}\r\n                    </Col>\r\n                    <Col>\r\n                        <ButtonGroup>\r\n                            {readonly ? <Button disabled>{item.category}</Button>\r\n                                : <Dropdown>\r\n                                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                                        {item.category}\r\n                                    </Dropdown.Toggle>\r\n\r\n                                    <Dropdown.Menu>\r\n                                        {Object.values(EItemCategory).map((value, index) =>\r\n                                            // <Dropdown.Item href={`#/action-${index}`}>{value}</Dropdown.Item>)}\r\n                                            <Dropdown.Item\r\n                                                key={`category-dropdown-${value}`}\r\n                                                onClick={() => {\r\n                                                    dispatch(editCategory({ ...item, category: value }))\r\n                                                }}>{value}</Dropdown.Item>)}\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                            }\r\n                            <Button variant={\"outline-secondary\"}\r\n                                    onClick={() => toggleReadonly(!readonly)}><Pencil/></Button>\r\n                        </ButtonGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n\r\n\r\n                    <Col md={item.category === EItemCategory.NONE || item.category === EItemCategory.MISC ? 12 : 5}>\r\n\r\n                        <InputGroup>\r\n                            <FormControl as=\"textarea\" readOnly={readonly} size={\"sm\"} rows={10}\r\n                                         value={item.description}\r\n                                         aria-label=\"Description\"\r\n                                         onChange={(event) => {\r\n                                             dispatch(editDescription({ ...item, description: event.target.value }))\r\n                                         }}/>\r\n                        </InputGroup>\r\n                    </Col>\r\n                    {getTypeCard(item)}\r\n                </Row>\r\n                {getItemButton(item)}\r\n            </Tab.Pane>)\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function getJSXForItemCategory(value: string) {\r\n        switch (value) {\r\n            case EItemCategory.NONE:\r\n                return 'ALL';\r\n            case EItemCategory.MISC:\r\n                return <GearFill/>\r\n            case EItemCategory.ARMOUR:\r\n                return <ShieldFill/>\r\n            case EItemCategory.WEAPON:\r\n                return <GiCrossedSwords/>\r\n            case EItemCategory.SPELL:\r\n                return <GiOrbWand/>\r\n        }\r\n        return <Pencil/>;\r\n    }\r\n\r\n    function sortInventory() {\r\n        const itemsSorted: IInventory = {};\r\n        Object.keys(items).sort((a, b) => a.localeCompare(b)).map(key => itemsSorted[key] = items[key])\r\n\r\n        console.log(items)\r\n        console.log(itemsSorted)\r\n\r\n        dispatch(importInventory(itemsSorted))\r\n\r\n    }\r\n\r\n    return <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"#link1\">\r\n        <Row>\r\n            <Col sm={3}>\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item>\r\n                        <ButtonToolbar>\r\n\r\n                            <ButtonGroup size={\"sm\"}\r\n                                         className={\"mr-2\"}\r\n                            >\r\n\r\n                                <Button onClick={() => sortInventory()}><AiOutlineSortAscending/></Button>\r\n                            </ButtonGroup>\r\n                            <ButtonGroup size=\"sm\">\r\n                                {Object.values(EItemCategory).map((value: string) =>\r\n                                    <Button key={`filter-btn-${value}`}\r\n                                            variant={activeFilter === value ? \"primary\" : \"secondary\"}\r\n                                            onClick={() => {\r\n                                                setFilter(value);\r\n                                            }}>{getJSXForItemCategory(value)}</Button>)}\r\n                            </ButtonGroup>\r\n                        </ButtonToolbar>\r\n                    </ListGroup.Item>\r\n\r\n                    {createListItems()}\r\n                    {/* Add Button */}\r\n                    <ListGroup.Item>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Prepend>\r\n                                <Button onClick={() => dispatch(addItemByName(newItem))}\r\n                                        variant=\"outline-primary\">\r\n                                    {items[newItem] ? <Pencil/> : <PlusCircle/>}\r\n                                </Button>\r\n                            </InputGroup.Prepend>\r\n\r\n                            {/*<FormControl aria-describedby=\"basic-addon1\"*/}\r\n                            {/*             onChange={(event => setNewItem(event.target.value))}/>*/}\r\n\r\n                            <div style={{ width: '9.87em' }}>\r\n                                <Typeahead\r\n                                    id=\"basic-typeahead-single\"\r\n                                    // options={['John', 'Paul', 'George', 'Ringo']}\r\n                                    options={itemOptions}\r\n                                    onInputChange={(name) => setNewItem(name)}\r\n                                    // onChange={(value: string) => console.log(value, 'Simple typeahead')}\r\n                                    onChange={(selection) => setNewItem(selection[0]?.toString())}\r\n                                />\r\n                            </div>\r\n                        </InputGroup>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n            <Col sm={9}>\r\n                <Tab.Content>\r\n                    {createTabPanes()}\r\n                </Tab.Content>\r\n            </Col>\r\n        </Row>\r\n    </Tab.Container>\r\n\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { allSkills } from \"../character/resources\";\r\n\r\nexport interface ISkill {\r\n    name: string,\r\n    level: number,\r\n    type: string,\r\n    bonus: number,\r\n    parent?: ISkill\r\n}\r\n\r\nexport interface ISkillState {\r\n    [name: string]: ISkill\r\n}\r\n\r\nexport const skillSlice = createSlice({\r\n    name: 'skills',\r\n    initialState: allSkills,\r\n    reducers: {\r\n        setLevel: (state, action: PayloadAction<ISkill>) => {\r\n            const { name, parent } = action.payload;\r\n            const key = parent ? `${parent.name} - ${name}` : name;\r\n            if (state[key].level === action.payload.level) {\r\n                state[key].level = 0;\r\n            } else {\r\n                state[key].level = action.payload.level;\r\n            }\r\n        },\r\n        setBonus: (state, action: PayloadAction<ISkill>) => {\r\n            const {name, bonus, parent} = action.payload;\r\n            const key = parent ? `${parent.name} - ${name}` : name;\r\n            state[key].bonus = bonus;\r\n        },\r\n        importSkills: (state, action) => {\r\n            const skills = action.payload;\r\n            for (const name in skills) {\r\n                state[name] = skills[name];\r\n                // Migration\r\n                if (!state[name].bonus) {\r\n                    state[name].bonus = 0\r\n                }\r\n            }\r\n        },\r\n        addSkill: (state, action: PayloadAction<ISkill>) => {\r\n            const {name, parent} = action.payload;\r\n            if (parent) {\r\n                state[`${parent.name} - ${name}`] = action.payload\r\n            } else {\r\n                state[name] = action.payload;\r\n            }\r\n\r\n        }\r\n    }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setLevel, setBonus, importSkills, addSkill } = skillSlice.actions\r\nexport default skillSlice.reducer\r\n\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { EGods } from \"../talents/talentSlice\";\r\n\r\n\r\nexport interface IExpEntry {\r\n    description: string,\r\n    amount: number,\r\n    devotion: EGods,\r\n    type: string,\r\n}\r\n\r\ninterface IExpState {\r\n    entries: IExpEntry[],\r\n    expSum: number\r\n}\r\n\r\nexport const experienceSlice = createSlice({\r\n    name: 'experience',\r\n    initialState: {\r\n        entries: [\r\n            {description: \"Adventure1\", amount: 1500, devotion: EGods.UNALIGNED, type: \"ADV\"},\r\n            {description: \"Skill1\", amount: -150, devotion: EGods.NURGLE, type: \"ADV\"},\r\n            {description: \"Skill2\", amount: -300, devotion: EGods.UNALIGNED, type: \"ADV\"},\r\n            {description: \"Skill3\", amount: -200, devotion: EGods.UNALIGNED, type: \"ADV\"},\r\n            {description: \"Adventure2\", amount: 150, devotion: EGods.UNALIGNED, type: \"ADV\"},\r\n            {description: \"Skill4\", amount: -1000, devotion: EGods.UNALIGNED, type: \"ADV\"},\r\n        ],\r\n        expSum: 0\r\n    } as IExpState,\r\n    reducers : {\r\n        importExperience: (state, action: PayloadAction<IExpState>) => {\r\n            const { entries, expSum } = action.payload\r\n            state.entries = entries;\r\n            state.expSum = expSum;\r\n        },\r\n        addEntry: (state, action: PayloadAction<IExpEntry>) => {\r\n            state.expSum += action.payload.amount;\r\n            state.entries.push(action.payload);\r\n        },\r\n        removeEntry: (state, action: PayloadAction<number>) => {\r\n            state.expSum -= state.entries.splice(action.payload, 1)[0]?.amount\r\n        },\r\n    }\r\n})\r\n\r\nexport const { importExperience, addEntry, removeEntry } = experienceSlice.actions\r\nexport default experienceSlice.reducer\r\n","import { Button, Col, Container, Dropdown, DropdownButton, FormControl, InputGroup, ListGroup, Row } from \"react-bootstrap\";\r\nimport { addTalent, devotionMap, EGods, expMap, ITalent, ITalentState, removeTalent } from \"./talentSlice\";\r\nimport { Pencil, PlusCircle, Trash } from \"react-bootstrap-icons\";\r\nimport React, { useState } from \"react\";\r\nimport { TalentEntryFunction } from \"./talentEntry\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport { allTalents } from \"../character/resources\";\r\nimport { addEntry } from \"../character/experienceSlice\";\r\n\r\n\r\nexport const TalentView = ({ sidebar = false }) => {\r\n    const talents = useAppSelector(state => state.talents);\r\n    const devotion = useAppSelector(state => state.character.devotion)\r\n    const remainingExp = useAppSelector(state => state.experience.expSum)\r\n    const dispatch = useAppDispatch()\r\n\r\n    const [activeTalent, setActiveTalent] = useState({ name: '', description: '', tier: 0 } as ITalent);\r\n\r\n    const talentOptions: any[] = [];\r\n\r\n    Object.keys(allTalents).forEach(value => talentOptions.push(value));\r\n\r\n    function getEditFields() {\r\n        function hasPrerequisite(prerequisit: string) {\r\n            return !!talents[prerequisit];\r\n        }\r\n\r\n        return (<div>\r\n            <Row>\r\n                {createTalentObject(talents, setActiveTalent)}\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <Button\r\n                                onClick={() => {\r\n                                    dispatch(addTalent(activeTalent));\r\n                                    dispatch(addEntry({\r\n                                        devotion: activeTalent.devotion,\r\n                                        type: \"TALENT\",\r\n                                        amount: -calcNeededExp(activeTalent, devotion),\r\n                                        description: activeTalent.name\r\n                                    }))\r\n                                }}\r\n                                variant=\"outline-primary\">\r\n                                {talents[activeTalent.name] ? <Pencil/> : <PlusCircle/>}\r\n                            </Button>\r\n                        </InputGroup.Prepend>\r\n                        <Typeahead\r\n                            placeholder={'Talentname'}\r\n                            id=\"basic-typeahead-talents\"\r\n                            options={talentOptions}\r\n                            paginationText={\"More...\"}\r\n                            size={\"large\"}\r\n                            onInputChange={(name) => setActiveTalent({ ...activeTalent, name: name })}\r\n                            onChange={(selection) => setActiveTalent({\r\n                                // ...activeTalent,\r\n                                ...allTalents[selection[0]?.toString()],\r\n                                name: selection[0]?.toString(),\r\n                            })\r\n                            }\r\n                            selected={allTalents[activeTalent.name] ? [activeTalent.name] : []}\r\n                        />\r\n                        <FormControl placeholder={\"Specialization or count\"}\r\n                                     value={activeTalent.specialization ? activeTalent.specialization : \"\"}\r\n                                     size={\"lg\"}\r\n                                     onChange={(event => setActiveTalent({\r\n                                         ...activeTalent,\r\n                                         specialization: event.target.value\r\n                                     }))}\r\n                        />\r\n                        <DropdownButton size={\"lg\"} variant=\"success\" title={`Tier: ${activeTalent.tier}`}>\r\n                            <Dropdown.Item\r\n                                onClick={() => setActiveTalent({ ...activeTalent, tier: 1 })}>1</Dropdown.Item>\r\n                            <Dropdown.Item\r\n                                onClick={() => setActiveTalent({ ...activeTalent, tier: 2 })}>2</Dropdown.Item>\r\n                            <Dropdown.Item\r\n                                onClick={() => setActiveTalent({ ...activeTalent, tier: 3 })}>3</Dropdown.Item>\r\n                        </DropdownButton>\r\n                        <InputGroup.Append>\r\n                            <Button\r\n                                onClick={() => dispatch(removeTalent(activeTalent))}\r\n                                variant=\"outline-primary\"><Trash/></Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={8}>\r\n\r\n                    <FormControl placeholder={'Description'} aria-describedby=\"basic-addon1\"\r\n                                 as=\"textarea\" size={\"sm\"} rows={10}\r\n                                 value={activeTalent.description}\r\n                                 onChange={(event => setActiveTalent({\r\n                                     ...activeTalent,\r\n                                     description: event.target.value\r\n                                 }))}/>\r\n                </Col>\r\n                <Col>\r\n                    Prerequisites to Skill\r\n                    <ListGroup>\r\n                        {activeTalent.prerequisites?.split(\",\").map((prerequisit: string) =>\r\n                            <ListGroup.Item style={{ backgroundColor: hasPrerequisite(prerequisit) ? \"white\" : \"orangered\" }}\r\n                                            key={`prerequisit-${prerequisit}`}>{prerequisit}</ListGroup.Item>\r\n                        )}\r\n                        {activeTalent.tier > 0 ? <ListGroup.Item\r\n                                style={{ backgroundColor: remainingExp > calcNeededExp(activeTalent, devotion) ? \"white\" : \"orangered\" }}> Needed\r\n                                Exp: {calcNeededExp(activeTalent, devotion)} </ListGroup.Item>\r\n                            : <></> // => Traits and Gifts do not have exp\r\n                        }\r\n                    </ListGroup>\r\n                    Alignment: {activeTalent.devotion}\r\n                </Col>\r\n            </Row>\r\n        </div>);\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col>\r\n                    <h3>Talents & Traits</h3>\r\n                </Col>\r\n            </Row>\r\n            {sidebar ? createSimpleTalent(talents, setActiveTalent) : getEditFields()}\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nfunction calcNeededExp(activeTalent: ITalent, devotion?: EGods): number {\r\n    const characterDevotion = devotion ? devotion : EGods.UNALIGNED;\r\n    const talentDevotion = activeTalent.devotion ? activeTalent.devotion : EGods.UNALIGNED;\r\n\r\n    return expMap[activeTalent.tier - 1][devotionMap[talentDevotion][characterDevotion]];\r\n}\r\n\r\nfunction createSimpleTalent(talents: ITalentState, setNewTalent: React.Dispatch<React.SetStateAction<ITalent>>) {\r\n    return <Row>{Object.keys(talents).map(value => <TalentEntryFunction key={`talent-entry-${value}`} {...talents[value]}\r\n                                                                        setActiveTalent={setNewTalent}/>)}</Row>\r\n}\r\n\r\nfunction createTalentObject(talents: ITalentState, setNewTalent: React.Dispatch<React.SetStateAction<ITalent>>) {\r\n    const result: JSX.Element[] = [];\r\n    for (const name in talents) {\r\n        result.push(\r\n            <Col key={`talent-${name}`} style={{ padding: \"5px\" }}>\r\n                <TalentEntryFunction {...talents[name]} setActiveTalent={setNewTalent}/>\r\n            </Col>\r\n        )\r\n    }\r\n    return result;\r\n}\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { FormControl, InputGroup } from \"react-bootstrap\";\r\n\r\nconst baseStyle = {\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    borderWidth: 2,\r\n    borderRadius: 2,\r\n    borderColor: '#eeeeee',\r\n    borderStyle: 'dashed',\r\n    backgroundColor: '#fafafa',\r\n    color: '#bdbdbd',\r\n    outline: 'none',\r\n    transition: 'border .24s ease-in-out'\r\n};\r\n\r\nconst activeStyle = {\r\n    borderColor: '#2196f3'\r\n};\r\n\r\nconst acceptStyle = {\r\n    borderColor: '#00e676'\r\n};\r\n\r\nconst rejectStyle = {\r\n    borderColor: '#ff1744'\r\n};\r\n\r\nexport const FileUploadDrop = ({ importState, setImportState }\r\n                                   : { importState: string, setImportState: React.Dispatch<React.SetStateAction<string>> }) => {\r\n\r\n    const onDrop = useCallback((acceptedFiles) => {\r\n        acceptedFiles.forEach((file: any) => {\r\n            const reader = new FileReader()\r\n\r\n            reader.onabort = () => console.log('file reading was aborted')\r\n            reader.onerror = () => console.log('file reading has failed')\r\n            reader.onload = () => {\r\n                // Do whatever you want with the file contents\r\n                const binaryStr = reader.result;\r\n                const result: string = binaryStr as string\r\n                setImportState(result)\r\n            }\r\n            reader.readAsText(file)\r\n        })\r\n\r\n    }, [])\r\n    const {\r\n        getRootProps,\r\n        isDragActive,\r\n        isDragAccept,\r\n        isDragReject\r\n    } = useDropzone({ onDrop, accept: 'application/json' })\r\n\r\n    const style = useMemo(() => ({\r\n        ...baseStyle,\r\n        ...(isDragActive ? activeStyle : {}),\r\n        ...(isDragAccept ? acceptStyle : {}),\r\n        ...(isDragReject ? rejectStyle : {})\r\n    }), [\r\n        isDragActive,\r\n        isDragReject,\r\n        isDragAccept\r\n    ]);\r\n\r\n    return (\r\n        <div {...getRootProps()} style={style}>\r\n\r\n            <InputGroup>\r\n                {/*<input {...getInputProps()} />*/}\r\n                <FormControl as=\"textarea\" size={\"sm\"} rows={10}\r\n                             placeholder={\"Drag 'n' drop some files here and click on load\"}\r\n                             aria-label=\"Importfield\"\r\n                             value={importState}\r\n                             onChange={(event) => {\r\n                                 setImportState(event.target.value)\r\n                             }}/>\r\n            </InputGroup>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n","import { Alert, Button, Col, Container, FormControl, InputGroup, Row } from \"react-bootstrap\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\nimport { addSkill, setBonus, setLevel } from \"./skillSlice\";\r\nimport React, { useState } from \"react\";\r\nimport { FaDiceD20 } from \"react-icons/all\";\r\n\r\n\r\nexport const SkillEntryFunction = ({\r\n                                       skillName = 'SKILLNAME',\r\n                                       showType = true,\r\n                                       showSkilled = false,\r\n                                       callbackRoll\r\n                                   }: { skillName: string, showType: boolean, showSkilled: boolean, callbackRoll: any }) => {\r\n    const skills = useAppSelector(state => state.skills);\r\n    const characteristics = useAppSelector(state => state.characteristics);\r\n    const characterName = useAppSelector(state => state.character.characterName);\r\n    const discordServer = useAppSelector(state => state.character.discord[state.character.discord.active]);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [variant, setVariant] = useState('success');\r\n    const [newLore, setNewLore] = useState('');\r\n\r\n    const skill = skills[skillName];\r\n    if (!skill) {\r\n        console.error(`No skill for name '${skillName}' found`);\r\n        return <></>;\r\n    }\r\n    const { name, level, type, bonus, parent } = skill;\r\n\r\n    const description = showType ? `${parent ? `-> ${name}` : name} (${type})` : `${parent ? `-> ${name}` : name}`\r\n\r\n    if (showSkilled && level === 0) {\r\n        return <></>\r\n    }\r\n\r\n    function roll() {\r\n        const rollResult = callbackRoll(discordServer, characterName, characteristics[type.toUpperCase()]?.value, skill)\r\n\r\n        setVariant(rollResult.result ? 'success' : 'danger');\r\n        setShow(true);\r\n        setTimeout(() => setShow(false), 15000)\r\n        setText(`${name} Test: rolled ${rollResult.rolls} your level: ${rollResult.sum} = Test ${rollResult.result ? 'success' : 'failed'}`)\r\n\r\n\r\n    }\r\n\r\n    function getDiceCol() {\r\n        return <Col md={1}><FaDiceD20 onClick={() => roll()} color={\"darkred\"} style={{ cursor: \"pointer\" }}/></Col>\r\n    }\r\n\r\n    function getNameCol() {\r\n        return <Col md={5}>\r\n            {description} </Col>;\r\n    }\r\n\r\n    function getEditRow() {\r\n\r\n        if (name.endsWith(\"Lore\") || name === \"Trade\" ) {\r\n            return <>\r\n                {getElement()}\r\n                <Row style={{ padding: 0 }}>\r\n                    <Col>\r\n                        <Button size={\"sm\"} onClick={() => dispatch(addSkill({ name: newLore, level: 1, type, bonus: 0, parent: skill}))}>+</Button>\r\n                    </Col>\r\n                    <Col md={10} style={{ padding: 0 }}>\r\n                        <FormControl size={'sm'} placeholder=\"New Lore\"\r\n                                     onChange={(event => setNewLore(event.target.value))}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        }\r\n\r\n\r\n        function getElement() {\r\n            return <Row style={{ padding: 0 }}>\r\n                {getNameCol()}\r\n                <Col md={5} style={{ padding: 0 }}>\r\n                    <InputGroup>\r\n                        <InputGroup.Checkbox checked={level > 0} onChange={() => dispatch(setLevel({ ...skill, level: 1 }))}/>\r\n                        <InputGroup.Checkbox checked={level > 1} onChange={() => dispatch(setLevel({ ...skill, level: 2 }))}/>\r\n                        <InputGroup.Checkbox checked={level > 2} onChange={() => dispatch(setLevel({ ...skill, level: 3 }))}/>\r\n                        <InputGroup.Checkbox checked={level > 3} onChange={() => dispatch(setLevel({ ...skill, level: 4 }))}/>\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col md={2} style={{ padding: 0 }}>\r\n                    <FormControl size={'sm'} value={bonus}\r\n                                 onChange={(event => dispatch(setBonus({ ...skill, bonus: parseInt(event.target.value) })))}\r\n                    />\r\n                </Col>\r\n            </Row>;\r\n        }\r\n\r\n        return getElement();\r\n    }\r\n\r\n    function getSkilledRow() {\r\n        return <Row>\r\n            {getDiceCol()}\r\n            {getNameCol()}\r\n            <Col>{(level - 1) * 10}</Col>\r\n            <Col>{characteristics[type.toUpperCase()]?.value}</Col>\r\n            <Col>{bonus}</Col>\r\n            <Col><b>{(level - 1) * 10 + characteristics[type.toUpperCase()]?.value + bonus}</b></Col>\r\n        </Row>;\r\n    }\r\n\r\n    return <Container style={{ padding: 0 }}>\r\n        {showSkilled ? getSkilledRow() : getEditRow()}\r\n        <Alert dismissible onClose={() => setShow(false)} show={show} variant={variant}>\r\n            {text}\r\n        </Alert>\r\n    </Container>\r\n\r\n}\r\n","import { SkillEntryFunction } from \"./skillEntry\";\r\nimport { Button, Col, Container, Jumbotron, Row } from \"react-bootstrap\";\r\nimport { rollTestAndSendToDiscord } from \"../character/Rolls\";\r\nimport React, { useState } from \"react\";\r\nimport { mapElements } from \"../character/character\";\r\nimport { useAppSelector } from \"../../general/hooks\";\r\n\r\nexport const SkillView = ({ cols = 2, showTypeDef = true, showSkilledDef = false, showSettings = true }) => {\r\n\r\n    const [skillCols, setSkillCols] = useState(cols);\r\n    const [showType, toggleShowType] = useState(showTypeDef);\r\n    const [showSkilled, toggleShowSkilled] = useState(showSkilledDef);\r\n    const skills = useAppSelector(state => state.skills)\r\n\r\n\r\n    function createSkillMatrix(colCount: number = 2, showType: boolean, showSkilled: boolean, callbackRoll: any) {\r\n        const skillObjects: JSX.Element[] = [];\r\n        const skillNames: string[] = showSkilled ? Object.values(skills).filter(value => value.level > 0).map(skill => skill.parent ? `${skill.parent.name} - ${skill.name}` : skill.name) : Object.keys(skills);\r\n        skillNames.sort((a, b) => a.localeCompare(b))\r\n\r\n        skillNames.forEach(skillName => {\r\n            skillObjects.push(\r\n                <SkillEntryFunction key={`skill-${skillName}`}  {...{\r\n                    skillName,\r\n                    showType,\r\n                    showSkilled,\r\n                    callbackRoll\r\n                }} />\r\n            )\r\n        });\r\n        return mapElements(skillObjects, colCount);\r\n    }\r\n\r\n\r\n    return <Jumbotron key={\"jumbo-skills\"}>\r\n        <Row>\r\n            <Col>\r\n                <h3>Skills</h3>\r\n            </Col>\r\n        </Row>\r\n        {showSettings ? <Row>Col: {skillCols}\r\n            <Button style={{ padding: 0, width: '10px', height: '25px' }} variant=\"outline-secondary\" size=\"sm\"\r\n                    onClick={() => setSkillCols(skillCols - 1)}>-</Button>\r\n            <Button style={{ padding: 0, width: '10px', height: '25px' }} variant=\"outline-secondary\" size=\"sm\"\r\n                    onClick={() => setSkillCols(skillCols + 1)}>+</Button>\r\n            <Button size={\"sm\"} style={{ padding: 0, height: '25px' }}\r\n                    onClick={() => toggleShowType(!showType)}>Type</Button>\r\n            <Button size={\"sm\"} style={{ padding: 0, height: '25px' }}\r\n                    onClick={() => toggleShowSkilled(!showSkilled)}>Skilled</Button>\r\n        </Row> : <></>}\r\n        <Container fluid>\r\n            <Row>\r\n                {createSkillMatrix(skillCols, showType, showSkilled, rollTestAndSendToDiscord).map((skillCols, index) => (\r\n                    <Col key={`skillcol-${index}`}>\r\n                        <Col>\r\n                            {showSkilled ? <Row>\r\n                                    <Col md={1}>{/* EMPTY */}</Col>\r\n                                    <Col md={5}><b>Skillname</b></Col>\r\n                                    <Col>T</Col>\r\n                                    <Col>C</Col>\r\n                                    <Col>B</Col>\r\n                                    <Col><b>Sum</b></Col>\r\n                                </Row>\r\n                                : <Row>\r\n                                    <Col md={5}><b>Skillname</b></Col>\r\n                                    <Col md={5} style={{ padding: 0 }}>\r\n                                        <span style={{ paddingLeft: 0, paddingRight: 12 }}><b>T</b></span>\r\n                                        <span style={{ paddingLeft: 5, paddingRight: 5 }}><b>+10</b></span>\r\n                                        <span style={{ paddingLeft: 5, paddingRight: 5 }}><b>+20</b></span>\r\n                                        <span style={{ paddingLeft: 5, paddingRight: 5 }}><b>+30</b></span>\r\n                                    </Col>\r\n                                    <Col md={2}>Bonus</Col>\r\n                                </Row>\r\n                            }\r\n                        </Col>\r\n                        {skillCols}\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </Container>\r\n    </Jumbotron>\r\n}\r\n","import { Button, FormControl, InputGroup, OverlayTrigger, Row, Table, Tooltip } from \"react-bootstrap\";\r\nimport React, { CSSProperties, useState } from \"react\";\r\nimport { GiCrossMark } from \"react-icons/all\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\nimport { addEntry, IExpEntry, removeEntry } from \"./experienceSlice\";\r\nimport { PlusCircle } from \"react-bootstrap-icons\";\r\nimport { EGods } from \"../talents/talentSlice\";\r\n\r\n\r\nexport const ExperienceView = () => {\r\n    const experience = useAppSelector(state => state.experience);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [newEntry, setNewEntry] = useState({} as IExpEntry);\r\n    // const [expSum, setExpSum] = useState(0);\r\n\r\n    function calcExpSum(index: number, array: IExpEntry[]) {\r\n        return array.slice(0, index + 1).reduce((sum, { amount }) => sum + amount, 0);\r\n    }\r\n\r\n    function getStyleForDevotion(devotion: EGods): CSSProperties {\r\n        switch (devotion) {\r\n            case EGods.NURGLE: return {backgroundColor: \"brown\", color: \"white\"}\r\n            case EGods.KHORNE: return {backgroundColor: \"red\"}\r\n            case EGods.SLAANESH: return {backgroundColor: \"pink\"}\r\n            case EGods.TZEENTCH: return {backgroundColor: \"lightskyblue\"}\r\n            default: return {backgroundColor: \"white\"}\r\n        }\r\n    }\r\n\r\n    return <Row>\r\n        <Table striped borderless hover size={\"sm\"}>\r\n            <thead>\r\n            <tr>\r\n                <th>#</th>\r\n                <th>Comment</th>\r\n                <th>Amount</th>\r\n                <th>Sum</th>\r\n                <th>-</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n            {experience.entries.map((value, index, array) =>\r\n                <tr key={`tr-${index}-${value.description}`}>\r\n                    <td style={getStyleForDevotion(value.devotion)}>{index}</td>\r\n                    <td>{value.description}</td>\r\n                    <td>{value.amount}</td>\r\n                    <td>{calcExpSum(index, array)}</td>\r\n                    <td style={{ cursor: 'pointer' }}>\r\n                        <OverlayTrigger\r\n                            overlay={\r\n                                <Tooltip id={`remove`}>\r\n                                    Remove entry\r\n                                </Tooltip>\r\n                            }>\r\n                            <GiCrossMark onClick={() => dispatch(removeEntry(index))} color={\"red\"}/>\r\n                        </OverlayTrigger>\r\n                    </td>\r\n                </tr>\r\n            )}\r\n            <tr>\r\n                <td colSpan={2}><b>Remaining</b></td>\r\n                <td colSpan={2}><b>{experience.expSum}</b></td>\r\n            </tr>\r\n\r\n            </tbody>\r\n        </Table>\r\n        <InputGroup>\r\n            <FormControl\r\n                placeholder={\"Comment\"}\r\n                value={newEntry.description ? newEntry.description : \"\"}\r\n                size={\"lg\"}\r\n                onChange={(event => setNewEntry({\r\n                    ...newEntry,\r\n                    description: event.target.value\r\n                }))}\r\n            />\r\n            <FormControl\r\n                placeholder={\"Amount\"}\r\n                value={newEntry.amount ? newEntry.amount : \"\"}\r\n                size={\"lg\"}\r\n                onChange={(event => setNewEntry({\r\n                    ...newEntry,\r\n                    amount: Number(event.target.value)\r\n                }))}\r\n            />\r\n            <Button\r\n                onClick={() => dispatch(addEntry(newEntry))}\r\n                variant=\"outline-primary\">\r\n                <PlusCircle/>\r\n            </Button>\r\n        </InputGroup>\r\n    </Row>;\r\n\r\n}\r\n","import { Col, Container, FormControl, InputGroup, Row } from \"react-bootstrap\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport { allItems, allTalents } from \"../character/resources\";\r\nimport React, { createRef, useState } from \"react\";\r\nimport { IItem } from \"../inventory/inventorySlice\";\r\nimport { ITalent } from \"../talents/talentSlice\";\r\nimport { log } from \"util\";\r\n\r\n\r\nexport type ISearchable = IItem | ITalent\r\n\r\nexport const SearchView = () => {\r\n    const emptyTalent = {} as ITalent\r\n\r\n    const testRef = createRef<HTMLTextAreaElement>()\r\n\r\n    const [activeSearch, setActiveSearch] = useState({ name: '', description: '' } as ISearchable);\r\n\r\n    const searchOptions: string[] = [];\r\n\r\n    // Object.keys(allTalents).forEach(value => searchOptions.push(value));\r\n    // Object.keys(allItems).forEach(value => searchOptions.push(value));\r\n    Object.keys({ ...allTalents, ...allItems }).forEach(value => searchOptions.push(value));\r\n\r\n    return <Container>\r\n        <Row>\r\n            <Col>\r\n                <Typeahead\r\n                    placeholder={'Search'}\r\n                    id=\"basic-typeahead-search\"\r\n                    options={searchOptions}\r\n                    paginationText={\"More...\"}\r\n                    size={\"large\"}\r\n                    onInputChange={(name) => setActiveSearch({ ...emptyTalent, name: name })}\r\n                    onChange={(selection) => setActiveSearch({\r\n                        ...activeSearch, ...allTalents[selection[0]?.toString()], ...allItems[selection[0]?.toString()],\r\n                        name: selection[0]?.toString()\r\n                    })\r\n                    }\r\n                    selected={{ ...allTalents, ...allItems }[activeSearch.name] ? [activeSearch.name] : []}\r\n                />\r\n            </Col>\r\n        </Row>\r\n        {{ ...allTalents, ...allItems }[activeSearch.name] ?\r\n            <Row>\r\n                <Col>\r\n                    <FormControl placeholder={'Description'} aria-describedby=\"basic-addon1\"\r\n                                 as=\"textarea\" size={\"sm\"} rows={10}\r\n                                 value={JSON.stringify(activeSearch, null, \"\\t\")\r\n                                     .replaceAll('\\\\n', \"\\n\")\r\n                                     .replaceAll('\"', '')\r\n                                 }\r\n                                 autoFocus\r\n                                 plaintext={true}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            : undefined\r\n        }\r\n    </Container>\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Col, Container, Form, FormControl, FormGroup, FormLabel, Jumbotron, Row } from \"react-bootstrap\";\r\nimport { CharacteristicsCounter } from \"../characteristics/characteristicsCounter\";\r\nimport './character.scss';\r\nimport { allArmour, allItems, allWeapons } from \"./resources\";\r\nimport { characteristicsInitialState, ICharacteristicsState, importCharacteristics } from \"../characteristics/characteristicsSlice\";\r\nimport { importTalents } from \"../talents/talentSlice\";\r\nimport { InventoryFunction } from \"../inventory/inventory\";\r\nimport { useAppDispatch, useAppSelector } from \"../../general/hooks\";\r\nimport { RootState } from \"../../general/store\";\r\nimport { importSkills } from \"../skills/skillSlice\";\r\nimport { IInventory, IItem, importInventory } from \"../inventory/inventorySlice\";\r\nimport { TalentView } from \"../talents/talentView\";\r\nimport { Armoury } from \"../armoury/armoury\";\r\nimport { IArmour, importArmoury, IWeapon, IWeaponState } from \"../armoury/armourySlice\";\r\nimport { FileUploadDrop } from \"./fileUploadDrop\";\r\nimport { changeLayout, importCharacter, setCharacterName, setDiscordActive, setDiscordServer, setDiscordServerDebug } from \"./characterSlice\";\r\nimport { rollAndSendToDiscord } from \"./Rolls\";\r\nimport { FaDiceD20 } from \"react-icons/all\";\r\nimport { EItemCategory } from \"./EItemCategory\";\r\nimport { SkillView } from \"../skills/skillView\";\r\nimport { ETabNames } from \"./ETabNames\";\r\nimport { ExperienceView } from \"./experienceView\";\r\nimport { SearchView } from \"../search/searchView\";\r\nimport { importExperience } from \"./experienceSlice\";\r\n\r\n\r\nexport const CharacterFunction = () => {\r\n    const [mainCols, setMainCols] = useState(1);\r\n    const [importState, setImportState] = useState('');\r\n    const [editCharacterName, setEditCharacterName] = useState(false);\r\n    const [editDiscord, setEditDiscord] = useState(false);\r\n    const [editDiscordDebug, setEditDiscordDebug] = useState(false);\r\n    const [customAmount, setCustomAmount] = useState(1)\r\n    const [customLimit, setCustomLimit] = useState(100)\r\n\r\n\r\n    const completeState = useAppSelector(state => state);\r\n    const dispatch = useAppDispatch()\r\n\r\n    function importStateFromJson(importState: string) {\r\n        if (!importState) {\r\n            return;\r\n        }\r\n        const state = JSON.parse(importState) as RootState;\r\n\r\n        dispatch(importCharacter(state.character))\r\n\r\n        dispatch(importCharacteristics(state.characteristics))\r\n        dispatch(importInventory(state.inventory))\r\n        dispatch(importSkills(state.skills))\r\n        dispatch(importTalents(state.talents))\r\n        dispatch(importArmoury(state.armoury))\r\n        dispatch(importExperience(state.experience))\r\n    }\r\n\r\n    function getDiscordServer() {\r\n        return completeState.character.discord[completeState.character.discord.active];\r\n    }\r\n\r\n    function getCharacteristicsPane() {\r\n        return <Jumbotron key={\"jumbo-characteristics\"}>\r\n            <Container style={{ padding: 0 }}>\r\n                <Row>\r\n                    <Col>\r\n                        {editCharacterName ?\r\n                            <FormControl\r\n                                onMouseLeave={() => setEditCharacterName(false)}\r\n                                value={completeState.character.characterName}\r\n                                onChange={(event => dispatch(setCharacterName(event.target.value)))}\r\n                                autoFocus={true}/>\r\n                            :\r\n                            <h1 style={{ fontFamily: 'CloisterBlack', fontSize: \"xxx-large\" }}\r\n                                onClick={() => setEditCharacterName(true)}\r\n                            >{completeState.character.characterName}</h1>\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {createCharacteristicsObjects(characteristicsInitialState)}\r\n                </Row>\r\n                <Row>\r\n\r\n                    <Form>\r\n                        <Form.Row>\r\n\r\n                            <Col md={3}>\r\n                                <h3>Custom Roll:</h3>\r\n                            </Col>\r\n\r\n                            <Col md={3}>\r\n\r\n                                <FormGroup as={Row}>\r\n                                    <FormLabel column md={4}>Amount</FormLabel>\r\n                                    <Col md={8}>\r\n                                        <FormControl size={\"sm\"} value={customAmount}\r\n                                                     onChange={event => setCustomAmount(parseInt(event.target.value))}/>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col>d</Col>\r\n                            <Col md={3}>\r\n\r\n                                <FormGroup as={Row}>\r\n                                    <FormLabel column md={4}>Limit</FormLabel>\r\n                                    <Col md={8}>\r\n                                        <FormControl size={\"sm\"} value={customLimit}\r\n                                                     onChange={event => setCustomLimit(parseInt(event.target.value))}/>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button\r\n                                    onClick={() => rollAndSendToDiscord(getDiscordServer(), completeState.character.characterName, customAmount, customLimit)}\r\n                                    variant={\"light\"}> Roll <FaDiceD20 color={\"darkred\"} style={{ cursor: \"pointer\" }}/>\r\n                                </Button>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </Row>\r\n            </Container>\r\n        </Jumbotron>\r\n    }\r\n\r\n    function getSkillsPane(layout: string) {\r\n        const sidebarSettings = { cols: 1, showSkilledDef: true, showSettings: false }\r\n        return layout === 'main' ? <SkillView key={'skillView'}/> : <SkillView key={'skillView'} {...sidebarSettings} />\r\n    }\r\n\r\n    function getTalentsPane(layout: string) {\r\n        return <Jumbotron key={\"jumbo-talents\"}>\r\n            <TalentView sidebar={layout !== 'main'}/>\r\n        </Jumbotron>\r\n    }\r\n\r\n    function getInventoryPane() {\r\n        return <Jumbotron key={\"jumbo-inventory\"}>\r\n            <Row>\r\n                <Col>\r\n                    <h3>{getNameForTabKey(ETabNames.INVENTORY)}</h3>\r\n                </Col>\r\n            </Row>\r\n            <InventoryFunction/>\r\n        </Jumbotron>\r\n    }\r\n\r\n    function getArmouryPane() {\r\n        return <Jumbotron key={\"jumbo-armoury\"}>\r\n            <Armoury/>\r\n        </Jumbotron>\r\n    }\r\n\r\n    function getSettingsPane() {\r\n\r\n        function calcNewItems() {\r\n            const result = {\r\n                items: {},\r\n                weapons: {},\r\n                armour: {}\r\n            }\r\n\r\n            const items: IInventory = {};\r\n            const weapons: IWeaponState = {};\r\n            const armour: { [name: string]: IArmour } = {};\r\n\r\n            const inventory = completeState.inventory;\r\n            for (const itemName in inventory) {\r\n                if (!(itemName in allItems || itemName in allWeapons || itemName in allArmour)) {\r\n                    const item: IItem = inventory[itemName];\r\n                    if (item.category === EItemCategory.WEAPON) {\r\n                        weapons[itemName] = item as IWeapon;\r\n                    } else if (item.category === EItemCategory.ARMOUR) {\r\n                        armour[itemName] = item as IArmour;\r\n                    } else {\r\n                        items[itemName] = item;\r\n                    }\r\n                }\r\n            }\r\n            result.items = items;\r\n            result.weapons = weapons;\r\n            result.armour = armour;\r\n            return result\r\n        }\r\n\r\n        return <Jumbotron key={\"jumbo-settings\"}>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <h3>{getNameForTabKey(ETabNames.SETTINGS)}</h3>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={2}>\r\n                        <Row>\r\n                            <Col>\r\n                                <Button size={\"sm\"}\r\n                                        onClick={() => setImportState(JSON.stringify(completeState))}>Export</Button>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button size={\"sm\"} onClick={() => importStateFromJson(importState)}>Load</Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <a href={`data:text/json;charset=utf-8,${encodeURIComponent(\r\n                                    JSON.stringify(completeState)\r\n                                )}`}\r\n                                   download={completeState.character.characterName ? completeState.character.characterName + \".json\" : \"DnD-Character.json\"}>\r\n                                    <Button>Download</Button>\r\n                                </a>\r\n                            </Col>\r\n                            <Col>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            Cols: {mainCols}\r\n                            <Button style={{ padding: 0, width: '10px', height: '25px' }} variant=\"outline-secondary\"\r\n                                    size=\"sm\"\r\n                                    onClick={() => setMainCols(mainCols - 1)}>-</Button>\r\n                            <Button style={{ padding: 0, width: '10px', height: '25px' }} variant=\"outline-secondary\"\r\n                                    size=\"sm\"\r\n                                    onClick={() => setMainCols(mainCols + 1)}>+</Button>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Button onClick={() => setImportState(JSON.stringify(calcNewItems()))}>Export New\r\n                                    Items</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Col sm={10}>\r\n                        <FileUploadDrop {...{ importState, setImportState }} />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <Row>\r\n                            <Col>\r\n\r\n                        <Form.Check label=\"Prod\" name=\"group1\" type={'radio'} id={`discord-inline-radio-1`}\r\n                                    checked={completeState.character.discord.active === 'prod'}\r\n                                    onChange={() => dispatch(setDiscordActive('prod'))}\r\n                        />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                        <Form.Check label=\"Debug\" name=\"group1\" type={'radio'} id={`discord-inline-radio-2`}\r\n                                    checked={completeState.character.discord.active === 'debug'}\r\n                                    onChange={() => dispatch(setDiscordActive('debug'))}\r\n                        />\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <Row style={{ border: 2, borderColor: 'black', borderStyle: 'solid', margin: 3 }}>\r\n                            {editDiscord ?\r\n                                <FormControl\r\n                                    onMouseLeave={() => setEditDiscord(false)}\r\n                                    value={completeState.character.discord.prod}\r\n                                    onChange={(event => dispatch(setDiscordServer(event.target.value)))}\r\n                                    autoFocus={true}/>\r\n                                :\r\n                                <h4\r\n                                    onClick={() => setEditDiscord(true)}\r\n                                >{completeState.character.discord.prod ? completeState.character.discord.prod : 'Click to set Discord'}</h4>\r\n                            }\r\n                        </Row>\r\n\r\n                        <Row style={{ border: 2, borderColor: 'black', borderStyle: 'solid', margin: 3 }}>\r\n                            {editDiscordDebug ?\r\n                                <FormControl\r\n                                    onMouseLeave={() => setEditDiscordDebug(false)}\r\n                                    value={completeState.character.discord.debug}\r\n                                    onChange={(event => dispatch(setDiscordServerDebug(event.target.value)))}\r\n                                    autoFocus={true}/>\r\n                                :\r\n                                <h4\r\n                                    onClick={() => setEditDiscordDebug(true)}\r\n                                >{completeState.character.discord.debug ? completeState.character.discord.debug : 'Click to set Discord - debug'}</h4>\r\n                            }\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {Object.keys(ETabNames)\r\n                    .flatMap((value, index) => {\r\n                        if (isNaN(Number(value))) {\r\n                            return [];\r\n                        }\r\n\r\n                        return <Row key={`layout-${value}`}>\r\n                            <Col xs={3}>{getNameForTabKey(index)}</Col>\r\n                            <Col xs={9} style={{padding:0}}>\r\n                                <Form>\r\n                                    <div key={`inline-radio`} className=\"mb-3\">\r\n                                        <Form.Check inline label=\"Left Sidebar\" name=\"group1\" type={'radio'} id={`${value}-inline-radio-1`}\r\n                                                    checked={completeState.character.layout.left.includes(index)}\r\n                                                    onChange={() => dispatch(changeLayout({ field: 'left', index }))}\r\n                                        />\r\n                                        <Form.Check inline label=\"Main\" name=\"group1\" type={'radio'} id={`${value}-inline-radio-2`}\r\n                                                    checked={completeState.character.layout.main.includes(index)}\r\n                                                    onChange={() => dispatch(changeLayout({ field: 'main', index }))}\r\n                                        />\r\n                                        <Form.Check inline label=\"Right Sidebar\" type={'radio'} id={`${value}-inline-radio-3`}\r\n                                                    checked={completeState.character.layout.right.includes(index)}\r\n                                                    onChange={() => dispatch(changeLayout({ field: 'right', index }))}\r\n                                        />\r\n                                    </div>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n                )}\r\n            </Container>\r\n        </Jumbotron>\r\n    }\r\n\r\n\r\n    function getExperiencePane() {\r\n        return <Jumbotron key={\"jumbo-experience\"}>\r\n            <Row>\r\n                <Col>\r\n                    <h3>{getNameForTabKey(ETabNames.EXPERIENCE)}</h3>\r\n                </Col>\r\n            </Row>\r\n            <ExperienceView/>\r\n        </Jumbotron>;\r\n    }\r\n\r\n    function getSearchPane() {\r\n        return <Jumbotron key={\"jumbo-search\"}>\r\n            <Row>\r\n                <Col>\r\n                    <SearchView />\r\n                </Col>\r\n            </Row>\r\n        </Jumbotron>\r\n    }\r\n\r\n    function getNameForTabKey(key: ETabNames) {\r\n        switch (key) {\r\n            case ETabNames.CHARACTERISTICS:\r\n                return 'Characteristics';\r\n            case ETabNames.SKILLS:\r\n                return 'Skills';\r\n            case ETabNames.TALENTS:\r\n                return 'Talents';\r\n            case ETabNames.ARMOURY:\r\n                return 'Armoury';\r\n            case ETabNames.INVENTORY:\r\n                return 'Inventory';\r\n            case ETabNames.SETTINGS:\r\n                return 'Settings';\r\n            case ETabNames.EXPERIENCE:\r\n                return \"Experience\"\r\n            case ETabNames.SEARCH:\r\n                return \"Search\"\r\n            default:\r\n                return `No name for no. ${key}`\r\n        }\r\n    }\r\n\r\n    function getTabForKey(key: ETabNames, layout: string) {\r\n        switch (key) {\r\n            case ETabNames.CHARACTERISTICS:\r\n                return getCharacteristicsPane();\r\n            case ETabNames.SKILLS:\r\n                return getSkillsPane(layout);\r\n            case ETabNames.TALENTS:\r\n                return getTalentsPane(layout);\r\n            case ETabNames.ARMOURY:\r\n                return getArmouryPane();\r\n            case ETabNames.INVENTORY:\r\n                return getInventoryPane();\r\n            case ETabNames.SETTINGS:\r\n                return getSettingsPane();\r\n            case ETabNames.EXPERIENCE:\r\n                return getExperiencePane();\r\n            case ETabNames.SEARCH:\r\n                return getSearchPane();\r\n            default:\r\n                return <Jumbotron>{`No tab for no. ${key}`}</Jumbotron>\r\n        }\r\n    }\r\n\r\n    function getTabs(layout = 'main') {\r\n        const panes = completeState.character.layout[layout].map(name => getTabForKey(name, layout))\r\n        return <>\r\n            {mainCols === 1\r\n                ? <div>{mapElements(panes, mainCols)}</div>\r\n                : <Row>\r\n                    {mapElements(panes, mainCols).map((elementCol, index) => (\r\n                        <Col key={`skillcol-${index}`} md={6}>\r\n                            {elementCol}\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            }</>\r\n    }\r\n\r\n\r\n    return <Row>\r\n        <Col xs={3} id=\"sidebar-wrapper\">\r\n            {getTabs('left')}\r\n        </Col>\r\n        <Col xs={6} id=\"page-content-wrapper\">\r\n            <div>\r\n                {getTabs()}\r\n            </div>\r\n        </Col>\r\n        <Col xs={3} id=\"sidebar-wrapper\">\r\n            {getTabs('right')}\r\n        </Col>\r\n    </Row>\r\n\r\n} // END OF FUNCTION\r\n\r\n\r\nfunction createCharacteristicsObjects(characteristics: ICharacteristicsState): JSX.Element[] {\r\n    const result: JSX.Element[] = [];\r\n    for (const short in characteristics) {\r\n        result.push(\r\n            <Col key={`stat-${short}`} style={{ padding: \"5px\" }}>\r\n                <CharacteristicsCounter short={short}/>\r\n            </Col>\r\n        )\r\n    }\r\n    return result;\r\n}\r\n\r\n\r\nexport function mapElements(objects: JSX.Element[], colCount: number) {\r\n    const matrix: any[] = [];\r\n    for (let j = 0; j < colCount; j++) {\r\n        const part = ((objects.length - 1) / colCount + 1 | 0);\r\n        matrix[j] = new Array(part);\r\n        for (let i = part * j; i < part * (j + 1); i++) {\r\n            matrix[j].push(objects[i]);\r\n        }\r\n    }\r\n    return matrix;\r\n}\r\n","import React from 'react';\nimport './App.scss';\nimport { CharacterFunction } from \"./components/character/character\";\nimport { Container } from \"react-bootstrap\";\n\n\nfunction App() {\n    return (\n        <Container fluid className=\"App\" style={{ backgroundColor: \"black\" }}>\n\n            <CharacterFunction/>\n\n        </Container>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { characteristicsSlice } from \"../components/characteristics/characteristicsSlice\";\r\nimport { skillSlice } from \"../components/skills/skillSlice\";\r\nimport { talentSlice } from \"../components/talents/talentSlice\";\r\nimport { inventorySlice } from \"../components/inventory/inventorySlice\";\r\nimport { characterSlice } from \"../components/character/characterSlice\";\r\nimport { armourySlice } from \"../components/armoury/armourySlice\";\r\nimport { experienceSlice } from \"../components/character/experienceSlice\";\r\n\r\n/**\r\n * Creates the Redux store and adds the default middlewares from redux toolkit as well as the router middleware\r\n */\r\nconst store = configureStore({\r\n    reducer: {\r\n        character: characterSlice.reducer,\r\n        characteristics: characteristicsSlice.reducer,\r\n        skills: skillSlice.reducer,\r\n        talents: talentSlice.reducer,\r\n        inventory: inventorySlice.reducer,\r\n        armoury: armourySlice.reducer,\r\n        experience: experienceSlice.reducer,\r\n    },\r\n    middleware: [...getDefaultMiddleware()],\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\nexport default store\r\n","export default __webpack_public_path__ + \"static/media/CloisterBlack.0a8dea1a.ttf\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./general/store\";\nimport '../src/fonts/CloisterBlack.ttf'\n\nReactDOM.render(\n    <React.Fragment>\n        <Provider store={store}>\n            <link\n                rel=\"stylesheet\"\n                href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\"\n                integrity=\"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\"\n                crossOrigin=\"anonymous\"\n            />\n            <App/>\n        </Provider>\n    </React.Fragment>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}